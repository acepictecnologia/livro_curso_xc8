

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 15:31:43 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           ; Version 2.05
    60                           ; Generated 20/12/2018 GMT
    61                           ; 
    62                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     _RCREG	set	4014
    94  0000                     _TXREG	set	4013
    95  0000                     _SPBRG	set	4015
    96  0000                     _BAUDCTLbits	set	4024
    97  0000                     _RCSTAbits	set	4011
    98  0000                     _TXSTAbits	set	4012
    99  0000                     _ADRESL	set	4035
   100  0000                     _ADRESH	set	4036
   101  0000                     _ADCON0bits	set	4034
   102  0000                     _INTCONbits	set	4082
   103  0000                     _PIE1bits	set	3997
   104  0000                     _ADCON2	set	4032
   105  0000                     _ADCON1	set	4033
   106  0000                     _ADCON0	set	4034
   107  0000                     _PORTB	set	3969
   108  0000                     _TRISB	set	3987
   109  0000                     _PORTBbits	set	3969
   110  0000                     _TRMT	set	32097
   111  0000                     _RCIF	set	31989
   112                           
   113                           	psect	smallconst
   114  000600                     __psmallconst:
   115                           	opt callstack 0
   116  000600  00                 	db	0
   117  000601                     STR_1:
   118  000601  43                 	db	67	;'C'
   119  000602  6F                 	db	111	;'o'
   120  000603  6E                 	db	110	;'n'
   121  000604  76                 	db	118	;'v'
   122  000605  65                 	db	101	;'e'
   123  000606  72                 	db	114	;'r'
   124  000607  73                 	db	115	;'s'
   125  000608  61                 	db	97	;'a'
   126  000609  6F                 	db	111	;'o'
   127  00060A  20                 	db	32
   128  00060B  41                 	db	65	;'A'
   129  00060C  2F                 	db	47
   130  00060D  44                 	db	68	;'D'
   131  00060E  3A                 	db	58	;':'
   132  00060F  20                 	db	32
   133  000610  43                 	db	67	;'C'
   134  000611  61                 	db	97	;'a'
   135  000612  6E                 	db	110	;'n'
   136  000613  61                 	db	97	;'a'
   137  000614  69                 	db	105	;'i'
   138  000615  73                 	db	115	;'s'
   139  000616  20                 	db	32
   140  000617  41                 	db	65	;'A'
   141  000618  4E                 	db	78	;'N'
   142  000619  30                 	db	48	;'0'
   143  00061A  20                 	db	32
   144  00061B  65                 	db	101	;'e'
   145  00061C  20                 	db	32
   146  00061D  41                 	db	65	;'A'
   147  00061E  4E                 	db	78	;'N'
   148  00061F  31                 	db	49	;'1'
   149  000620  0D                 	db	13
   150  000621  0A                 	db	10
   151  000622  00                 	db	0
   152  000623                     STR_2:
   153  000623  54                 	db	84	;'T'
   154  000624  65                 	db	101	;'e'
   155  000625  6D                 	db	109	;'m'
   156  000626  70                 	db	112	;'p'
   157  000627  3A                 	db	58	;':'
   158  000628  20                 	db	32
   159  000629  25                 	db	37
   160  00062A  30                 	db	48	;'0'
   161  00062B  2E                 	db	46
   162  00062C  31                 	db	49	;'1'
   163  00062D  66                 	db	102	;'f'
   164  00062E  20                 	db	32
   165  00062F  43                 	db	67	;'C'
   166  000630  20                 	db	32
   167  000631  2D                 	db	45
   168  000632  20                 	db	32
   169  000633  56                 	db	86	;'V'
   170  000634  6F                 	db	111	;'o'
   171  000635  6C                 	db	108	;'l'
   172  000636  74                 	db	116	;'t'
   173  000637  3A                 	db	58	;':'
   174  000638  20                 	db	32
   175  000639  25                 	db	37
   176  00063A  30                 	db	48	;'0'
   177  00063B  34                 	db	52	;'4'
   178  00063C  6C                 	db	108	;'l'
   179  00063D  75                 	db	117	;'u'
   180  00063E  20                 	db	32
   181  00063F  6D                 	db	109	;'m'
   182  000640  56                 	db	86	;'V'
   183  000641  0D                 	db	13
   184  000642  0A                 	db	10
   185  000643  00                 	db	0
   186  000644                     STR_3:
   187  000644  49                 	db	73	;'I'
   188  000645  4E                 	db	78	;'N'
   189  000646  46                 	db	70	;'F'
   190  000647  00                 	db	0
   191  000648                     STR_7:
   192  000648  4E                 	db	78	;'N'
   193  000649  41                 	db	65	;'A'
   194  00064A  4E                 	db	78	;'N'
   195  00064B  00                 	db	0
   196  00064C                     STR_4:
   197  00064C  69                 	db	105	;'i'
   198  00064D  6E                 	db	110	;'n'
   199  00064E  66                 	db	102	;'f'
   200  00064F  00                 	db	0
   201  000650                     STR_8:
   202  000650  6E                 	db	110	;'n'
   203  000651  61                 	db	97	;'a'
   204  000652  6E                 	db	110	;'n'
   205  000653  00                 	db	0
   206  000654                     STR_11:
   207  000654  6C                 	db	108	;'l'
   208  000655  66                 	db	102	;'f'
   209  000656  00                 	db	0
   210  000657                     STR_16:
   211  000657  6C                 	db	108	;'l'
   212  000658  75                 	db	117	;'u'
   213  000659  00                 	db	0
   214  0000                     
   215                           ; #config settings
   216  00065A  00                 	db	0	; dummy byte at the end
   217  0000                     
   218                           	psect	cinit
   219  003202                     __pcinit:
   220                           	opt callstack 0
   221  003202                     start_initialization:
   222                           	opt callstack 0
   223  003202                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Clear objects allocated to BANK1 (130 bytes)
   227  003202  EE01  F000         	lfsr	0,__pbssBANK1
   228  003206  0E82               	movlw	130
   229  003208                     clear_0:
   230  003208  6AEE               	clrf	postinc0,c
   231  00320A  06E8               	decf	wreg,f,c
   232  00320C  E1FD               	bnz	clear_0
   233                           
   234                           ; Clear objects allocated to BANK0 (26 bytes)
   235  00320E  EE00  F0E0         	lfsr	0,__pbssBANK0
   236  003212  0E1A               	movlw	26
   237  003214                     clear_1:
   238  003214  6AEE               	clrf	postinc0,c
   239  003216  06E8               	decf	wreg,f,c
   240  003218  E1FD               	bnz	clear_1
   241                           
   242                           ; Clear objects allocated to COMRAM (5 bytes)
   243  00321A  6A7A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   244  00321C  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   245  00321E  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   246  003220  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   247  003222  6A76               	clrf	__pbssCOMRAM& (0+255),c
   248  003224                     end_of_initialization:
   249                           	opt callstack 0
   250  003224                     __end_of__initialization:
   251                           	opt callstack 0
   252  003224  907B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   253  003226  927B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   254  003228  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  00322A  6EF8               	movwf	tblptru,c
   256  00322C  0100               	movlb	0
   257  00322E  EF70  F00F         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  000076                     __pbssCOMRAM:
   261                           	opt callstack 0
   262  000076                     _prec:
   263                           	opt callstack 0
   264  000076                     	ds	2
   265  000078                     _flags:
   266                           	opt callstack 0
   267  000078                     	ds	2
   268  00007A                     _i:
   269                           	opt callstack 0
   270  00007A                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0000E0                     __pbssBANK0:
   274                           	opt callstack 0
   275  0000E0                     floorf@F524:
   276                           	opt callstack 0
   277  0000E0                     	ds	4
   278  0000E4                     ___fpclassifyf@F463:
   279                           	opt callstack 0
   280  0000E4                     	ds	4
   281  0000E8                     _dado:
   282                           	opt callstack 0
   283  0000E8                     	ds	4
   284  0000EC                     _temp:
   285                           	opt callstack 0
   286  0000EC                     	ds	4
   287  0000F0                     _volt:
   288                           	opt callstack 0
   289  0000F0                     	ds	4
   290  0000F4                     _nout:
   291                           	opt callstack 0
   292  0000F4                     	ds	2
   293  0000F6                     _width:
   294                           	opt callstack 0
   295  0000F6                     	ds	2
   296  0000F8                     _adc:
   297                           	opt callstack 0
   298  0000F8                     	ds	2
   299                           
   300                           	psect	bssBANK1
   301  000100                     __pbssBANK1:
   302                           	opt callstack 0
   303  000100                     _dbuf:
   304                           	opt callstack 0
   305  000100                     	ds	80
   306  000150                     _bufferEUSART:
   307                           	opt callstack 0
   308  000150                     	ds	50
   309                           
   310                           	psect	cstackBANK1
   311  000182                     __pcstackBANK1:
   312                           	opt callstack 0
   313  000182                     	ds	2
   314  000184                     sprintf@ap:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x2
   318  000184                     	ds	2
   319  000186                     sprintf@f:
   320                           	opt callstack 0
   321                           
   322                           ; 6 bytes @ 0x4
   323  000186                     	ds	6
   324                           
   325                           	psect	cstackBANK0
   326  000080                     __pcstackBANK0:
   327                           	opt callstack 0
   328  000080                     efgtoa@ou:
   329                           	opt callstack 0
   330                           
   331                           ; 4 bytes @ 0x0
   332  000080                     	ds	4
   333  000084                     _efgtoa$610:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0x4
   337  000084                     	ds	2
   338  000086                     _efgtoa$611:
   339                           	opt callstack 0
   340                           
   341                           ; 2 bytes @ 0x6
   342  000086                     	ds	2
   343  000088                     _efgtoa$616:
   344                           	opt callstack 0
   345                           
   346                           ; 2 bytes @ 0x8
   347  000088                     	ds	2
   348  00008A                     _efgtoa$620:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0xA
   352  00008A                     	ds	2
   353  00008C                     _efgtoa$621:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0xC
   357  00008C                     	ds	2
   358  00008E                     _efgtoa$622:
   359                           	opt callstack 0
   360                           
   361                           ; 2 bytes @ 0xE
   362  00008E                     	ds	2
   363  000090                     efgtoa@t:
   364                           	opt callstack 0
   365                           
   366                           ; 2 bytes @ 0x10
   367  000090                     	ds	2
   368  000092                     efgtoa@pp:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x12
   372  000092                     	ds	2
   373  000094                     efgtoa@m:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x14
   377  000094                     	ds	2
   378  000096                     efgtoa@ne:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x16
   382  000096                     	ds	2
   383  000098                     efgtoa@d:
   384                           	opt callstack 0
   385                           
   386                           ; 2 bytes @ 0x18
   387  000098                     	ds	2
   388  00009A                     efgtoa@sign:
   389                           	opt callstack 0
   390                           
   391                           ; 2 bytes @ 0x1A
   392  00009A                     	ds	2
   393  00009C                     efgtoa@p:
   394                           	opt callstack 0
   395                           
   396                           ; 2 bytes @ 0x1C
   397  00009C                     	ds	2
   398  00009E                     efgtoa@nmode:
   399                           	opt callstack 0
   400                           
   401                           ; 1 bytes @ 0x1E
   402  00009E                     	ds	1
   403  00009F                     efgtoa@w:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x1F
   407  00009F                     	ds	2
   408  0000A1                     efgtoa@mode:
   409                           	opt callstack 0
   410                           
   411                           ; 1 bytes @ 0x21
   412  0000A1                     	ds	1
   413  0000A2                     efgtoa@h:
   414                           	opt callstack 0
   415                           
   416                           ; 4 bytes @ 0x22
   417  0000A2                     	ds	4
   418  0000A6                     efgtoa@l:
   419                           	opt callstack 0
   420                           
   421                           ; 4 bytes @ 0x26
   422  0000A6                     	ds	4
   423  0000AA                     efgtoa@i:
   424                           	opt callstack 0
   425                           
   426                           ; 2 bytes @ 0x2A
   427  0000AA                     	ds	2
   428  0000AC                     efgtoa@g:
   429                           	opt callstack 0
   430                           
   431                           ; 4 bytes @ 0x2C
   432  0000AC                     	ds	4
   433  0000B0                     efgtoa@e:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x30
   437  0000B0                     	ds	2
   438  0000B2                     efgtoa@n:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x32
   442  0000B2                     	ds	2
   443  0000B4                     efgtoa@u:
   444                           	opt callstack 0
   445                           
   446                           ; 4 bytes @ 0x34
   447  0000B4                     	ds	4
   448  0000B8                     vfpfcnvrt@done:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x38
   452  0000B8                     	ds	2
   453  0000BA                     _vfpfcnvrt$643:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0x3A
   457  0000BA                     	ds	2
   458  0000BC                     _vfpfcnvrt$644:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x3C
   462  0000BC                     	ds	2
   463  0000BE                     _vfpfcnvrt$648:
   464                           	opt callstack 0
   465                           
   466                           ; 2 bytes @ 0x3E
   467  0000BE                     	ds	2
   468  0000C0                     vfpfcnvrt@llu:
   469                           	opt callstack 0
   470                           
   471                           ; 8 bytes @ 0x40
   472  0000C0                     	ds	8
   473  0000C8                     vfpfcnvrt@f:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0x48
   477  0000C8                     	ds	4
   478  0000CC                     vfpfcnvrt@ct:
   479                           	opt callstack 0
   480                           
   481                           ; 3 bytes @ 0x4C
   482  0000CC                     	ds	3
   483  0000CF                     vfpfcnvrt@c:
   484                           	opt callstack 0
   485                           
   486                           ; 1 bytes @ 0x4F
   487  0000CF                     	ds	1
   488  0000D0                     vfprintf@cfmt:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x50
   492  0000D0                     	ds	2
   493  0000D2                     ?_sprintf:
   494                           	opt callstack 0
   495  0000D2                     sprintf@s:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x52
   499  0000D2                     	ds	2
   500  0000D4                     sprintf@fmt:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x54
   504  0000D4                     	ds	10
   505  0000DE                     ??_main:
   506                           
   507                           ; 1 bytes @ 0x5E
   508  0000DE                     	ds	2
   509                           
   510                           	psect	cstackCOMRAM
   511  000001                     __pcstackCOMRAM:
   512                           	opt callstack 0
   513  000001                     ??_trata_serial:
   514  000001                     
   515                           ; 1 bytes @ 0x0
   516  000001                     	ds	3
   517  000004                     ?_strlen:
   518                           	opt callstack 0
   519  000004                     ?___fpclassifyf:
   520                           	opt callstack 0
   521  000004                     ?_isupper:
   522                           	opt callstack 0
   523  000004                     ?_isdigit:
   524                           	opt callstack 0
   525  000004                     ?_strncmp:
   526                           	opt callstack 0
   527  000004                     ?_isspace:
   528                           	opt callstack 0
   529  000004                     ?___wmul:
   530                           	opt callstack 0
   531  000004                     ?___awdiv:
   532                           	opt callstack 0
   533  000004                     ?___awmod:
   534                           	opt callstack 0
   535  000004                     ?___fladd:
   536                           	opt callstack 0
   537  000004                     ?___lmul:
   538                           	opt callstack 0
   539  000004                     ?___flneg:
   540                           	opt callstack 0
   541  000004                     ?___fltol:
   542                           	opt callstack 0
   543  000004                     ?___xxtofl:
   544                           	opt callstack 0
   545  000004                     ?___lodiv:
   546                           	opt callstack 0
   547  000004                     ?___lomod:
   548                           	opt callstack 0
   549  000004                     escreve_EUSART@c:
   550                           	opt callstack 0
   551  000004                     ___wmul@multiplier:
   552                           	opt callstack 0
   553  000004                     ___awdiv@dividend:
   554                           	opt callstack 0
   555  000004                     ___awmod@dividend:
   556                           	opt callstack 0
   557  000004                     isdigit@c:
   558                           	opt callstack 0
   559  000004                     isspace@c:
   560                           	opt callstack 0
   561  000004                     isupper@c:
   562                           	opt callstack 0
   563  000004                     fputc@c:
   564                           	opt callstack 0
   565  000004                     strcpy@dest:
   566                           	opt callstack 0
   567  000004                     strlen@s:
   568                           	opt callstack 0
   569  000004                     strncmp@_l:
   570                           	opt callstack 0
   571  000004                     ___lmul@multiplier:
   572                           	opt callstack 0
   573  000004                     ___fleq@ff1:
   574                           	opt callstack 0
   575  000004                     ___flneg@f1:
   576                           	opt callstack 0
   577  000004                     ___fltol@f1:
   578                           	opt callstack 0
   579  000004                     ___fladd@b:
   580                           	opt callstack 0
   581  000004                     ___xxtofl@val:
   582                           	opt callstack 0
   583  000004                     ___fpclassifyf@x:
   584                           	opt callstack 0
   585  000004                     ___lodiv@dividend:
   586                           	opt callstack 0
   587  000004                     ___lomod@dividend:
   588                           	opt callstack 0
   589                           
   590                           ; 8 bytes @ 0x3
   591  000004                     	ds	1
   592  000005                     string_EUSART@str:
   593                           	opt callstack 0
   594                           
   595                           ; 2 bytes @ 0x4
   596  000005                     	ds	1
   597  000006                     ??_isupper:
   598  000006                     ??_isdigit:
   599  000006                     ??_isspace:
   600  000006                     ___wmul@multiplicand:
   601                           	opt callstack 0
   602  000006                     ___awdiv@divisor:
   603                           	opt callstack 0
   604  000006                     ___awmod@divisor:
   605                           	opt callstack 0
   606  000006                     fputc@fp:
   607                           	opt callstack 0
   608  000006                     strcpy@src:
   609                           	opt callstack 0
   610  000006                     strlen@a:
   611                           	opt callstack 0
   612  000006                     strncmp@_r:
   613                           	opt callstack 0
   614                           
   615                           ; 2 bytes @ 0x5
   616  000006                     	ds	1
   617  000007                     
   618                           ; 1 bytes @ 0x6
   619  000007                     	ds	1
   620  000008                     ??_fputc:
   621  000008                     ??___fpclassifyf:
   622  000008                     ??_strcpy:
   623  000008                     ??___fltol:
   624  000008                     ??___xxtofl:
   625  000008                     ___awdiv@counter:
   626                           	opt callstack 0
   627  000008                     ___awmod@counter:
   628                           	opt callstack 0
   629  000008                     ___wmul@product:
   630                           	opt callstack 0
   631  000008                     strncmp@n:
   632                           	opt callstack 0
   633  000008                     ___lmul@multiplicand:
   634                           	opt callstack 0
   635  000008                     ___fleq@ff2:
   636                           	opt callstack 0
   637  000008                     ___fladd@a:
   638                           	opt callstack 0
   639                           
   640                           ; 4 bytes @ 0x7
   641  000008                     	ds	1
   642  000009                     ___awdiv@sign:
   643                           	opt callstack 0
   644  000009                     ___awmod@sign:
   645                           	opt callstack 0
   646                           
   647                           ; 1 bytes @ 0x8
   648  000009                     	ds	1
   649  00000A                     ??_strncmp:
   650  00000A                     ?_tolower:
   651                           	opt callstack 0
   652  00000A                     _isspace$1156:
   653                           	opt callstack 0
   654  00000A                     ___awdiv@quotient:
   655                           	opt callstack 0
   656  00000A                     strcpy@s:
   657                           	opt callstack 0
   658  00000A                     tolower@c:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x9
   662  00000A                     	ds	1
   663  00000B                     ?_atoi:
   664                           	opt callstack 0
   665  00000B                     atoi@s:
   666                           	opt callstack 0
   667  00000B                     strncmp@l:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0xA
   671  00000B                     	ds	1
   672  00000C                     ??_tolower:
   673  00000C                     ??___fladd:
   674  00000C                     ??___fleq:
   675  00000C                     ___fltol@sign1:
   676                           	opt callstack 0
   677  00000C                     ___xxtofl@sign:
   678                           	opt callstack 0
   679  00000C                     ___fpclassifyf@e:
   680                           	opt callstack 0
   681  00000C                     strcpy@d:
   682                           	opt callstack 0
   683  00000C                     ___lmul@product:
   684                           	opt callstack 0
   685  00000C                     ___lodiv@divisor:
   686                           	opt callstack 0
   687  00000C                     ___lomod@divisor:
   688                           	opt callstack 0
   689                           
   690                           ; 8 bytes @ 0xB
   691  00000C                     	ds	1
   692  00000D                     ??_atoi:
   693  00000D                     ___fltol@exp1:
   694                           	opt callstack 0
   695  00000D                     ___xxtofl@exp:
   696                           	opt callstack 0
   697  00000D                     fputs@s:
   698                           	opt callstack 0
   699  00000D                     strncmp@r:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0xC
   703  00000D                     	ds	1
   704  00000E                     ___xxtofl@arg:
   705                           	opt callstack 0
   706  00000E                     ___fpclassifyf@u:
   707                           	opt callstack 0
   708                           
   709                           ; 4 bytes @ 0xD
   710  00000E                     	ds	1
   711  00000F                     fputs@fp:
   712                           	opt callstack 0
   713                           
   714                           ; 2 bytes @ 0xE
   715  00000F                     	ds	1
   716  000010                     ?___aldiv:
   717                           	opt callstack 0
   718  000010                     ___fladd@signs:
   719                           	opt callstack 0
   720  000010                     _tolower$1241:
   721                           	opt callstack 0
   722  000010                     ___aldiv@dividend:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0xF
   726  000010                     	ds	1
   727  000011                     ___fladd@aexp:
   728                           	opt callstack 0
   729  000011                     fputs@c:
   730                           	opt callstack 0
   731  000011                     atoi@neg:
   732                           	opt callstack 0
   733                           
   734                           ; 2 bytes @ 0x10
   735  000011                     	ds	1
   736  000012                     ?___flmul:
   737                           	opt callstack 0
   738  000012                     ___fladd@bexp:
   739                           	opt callstack 0
   740  000012                     fputs@i:
   741                           	opt callstack 0
   742  000012                     ___flmul@b:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0x11
   746  000012                     	ds	1
   747  000013                     ___fladd@grs:
   748                           	opt callstack 0
   749  000013                     _atoi$1125:
   750                           	opt callstack 0
   751                           
   752                           ; 2 bytes @ 0x12
   753  000013                     	ds	1
   754  000014                     ?_pad:
   755                           	opt callstack 0
   756  000014                     ___lomod@counter:
   757                           	opt callstack 0
   758  000014                     pad@fp:
   759                           	opt callstack 0
   760  000014                     ___aldiv@divisor:
   761                           	opt callstack 0
   762  000014                     ___lodiv@quotient:
   763                           	opt callstack 0
   764                           
   765                           ; 8 bytes @ 0x13
   766  000014                     	ds	1
   767  000015                     _atoi$1127:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x14
   771  000015                     	ds	1
   772  000016                     pad@buf:
   773                           	opt callstack 0
   774  000016                     ___flmul@a:
   775                           	opt callstack 0
   776                           
   777                           ; 4 bytes @ 0x15
   778  000016                     	ds	1
   779  000017                     _atoi$1126:
   780                           	opt callstack 0
   781                           
   782                           ; 1 bytes @ 0x16
   783  000017                     	ds	1
   784  000018                     ___aldiv@counter:
   785                           	opt callstack 0
   786  000018                     pad@p:
   787                           	opt callstack 0
   788  000018                     atoi@n:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0x17
   792  000018                     	ds	1
   793  000019                     ___aldiv@sign:
   794                           	opt callstack 0
   795                           
   796                           ; 1 bytes @ 0x18
   797  000019                     	ds	1
   798  00001A                     ??___flmul:
   799  00001A                     ??_pad:
   800  00001A                     ___aldiv@quotient:
   801                           	opt callstack 0
   802                           
   803                           ; 4 bytes @ 0x19
   804  00001A                     	ds	1
   805  00001B                     pad@i:
   806                           	opt callstack 0
   807                           
   808                           ; 2 bytes @ 0x1A
   809  00001B                     	ds	1
   810  00001C                     ___lodiv@counter:
   811                           	opt callstack 0
   812                           
   813                           ; 1 bytes @ 0x1B
   814  00001C                     	ds	1
   815  00001D                     pad@w:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x1C
   819  00001D                     	ds	1
   820  00001E                     ___flmul@sign:
   821                           	opt callstack 0
   822                           
   823                           ; 1 bytes @ 0x1D
   824  00001E                     	ds	1
   825  00001F                     ?_utoa:
   826                           	opt callstack 0
   827  00001F                     ___flmul@aexp:
   828                           	opt callstack 0
   829  00001F                     utoa@fp:
   830                           	opt callstack 0
   831                           
   832                           ; 2 bytes @ 0x1E
   833  00001F                     	ds	1
   834  000020                     ___flmul@grs:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0x1F
   838  000020                     	ds	1
   839  000021                     utoa@d:
   840                           	opt callstack 0
   841                           
   842                           ; 8 bytes @ 0x20
   843  000021                     	ds	3
   844  000024                     ___flmul@bexp:
   845                           	opt callstack 0
   846                           
   847                           ; 1 bytes @ 0x23
   848  000024                     	ds	1
   849  000025                     ___flmul@prod:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0x24
   853  000025                     	ds	4
   854  000029                     ??_utoa:
   855  000029                     ___flmul@temp:
   856                           	opt callstack 0
   857                           
   858                           ; 2 bytes @ 0x28
   859  000029                     	ds	2
   860  00002B                     ?___fldiv:
   861                           	opt callstack 0
   862  00002B                     ?___flsub:
   863                           	opt callstack 0
   864  00002B                     ___flge@ff1:
   865                           	opt callstack 0
   866  00002B                     ___flsub@b:
   867                           	opt callstack 0
   868  00002B                     ___fldiv@b:
   869                           	opt callstack 0
   870                           
   871                           ; 4 bytes @ 0x2A
   872  00002B                     	ds	4
   873  00002F                     ___flge@ff2:
   874                           	opt callstack 0
   875  00002F                     ___flsub@a:
   876                           	opt callstack 0
   877  00002F                     ___fldiv@a:
   878                           	opt callstack 0
   879                           
   880                           ; 4 bytes @ 0x2E
   881  00002F                     	ds	2
   882  000031                     utoa@p:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0x30
   886  000031                     	ds	2
   887  000033                     ??___fldiv:
   888  000033                     ??___flge:
   889  000033                     utoa@w:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x32
   893  000033                     	ds	2
   894  000035                     utoa@n:
   895                           	opt callstack 0
   896                           
   897                           ; 8 bytes @ 0x34
   898  000035                     	ds	2
   899  000037                     ___fldiv@rem:
   900                           	opt callstack 0
   901                           
   902                           ; 4 bytes @ 0x36
   903  000037                     	ds	4
   904  00003B                     ___fldiv@sign:
   905                           	opt callstack 0
   906                           
   907                           ; 1 bytes @ 0x3A
   908  00003B                     	ds	1
   909  00003C                     ___fldiv@new_exp:
   910                           	opt callstack 0
   911                           
   912                           ; 2 bytes @ 0x3B
   913  00003C                     	ds	1
   914  00003D                     utoa@i:
   915                           	opt callstack 0
   916                           
   917                           ; 2 bytes @ 0x3C
   918  00003D                     	ds	1
   919  00003E                     ___fldiv@grs:
   920                           	opt callstack 0
   921                           
   922                           ; 4 bytes @ 0x3D
   923  00003E                     	ds	4
   924  000042                     ___fldiv@bexp:
   925                           	opt callstack 0
   926                           
   927                           ; 1 bytes @ 0x41
   928  000042                     	ds	1
   929  000043                     ___fldiv@aexp:
   930                           	opt callstack 0
   931                           
   932                           ; 1 bytes @ 0x42
   933  000043                     	ds	1
   934  000044                     ?_floorf:
   935                           	opt callstack 0
   936  000044                     floorf@x:
   937                           	opt callstack 0
   938                           
   939                           ; 4 bytes @ 0x43
   940  000044                     	ds	4
   941  000048                     ??_floorf:
   942                           
   943                           ; 1 bytes @ 0x47
   944  000048                     	ds	6
   945  00004E                     floorf@m:
   946                           	opt callstack 0
   947                           
   948                           ; 4 bytes @ 0x4D
   949  00004E                     	ds	4
   950  000052                     floorf@e:
   951                           	opt callstack 0
   952                           
   953                           ; 2 bytes @ 0x51
   954  000052                     	ds	2
   955  000054                     floorf@u:
   956                           	opt callstack 0
   957                           
   958                           ; 4 bytes @ 0x53
   959  000054                     	ds	4
   960  000058                     ?_efgtoa:
   961                           	opt callstack 0
   962  000058                     efgtoa@fp:
   963                           	opt callstack 0
   964                           
   965                           ; 2 bytes @ 0x57
   966  000058                     	ds	2
   967  00005A                     efgtoa@f:
   968                           	opt callstack 0
   969                           
   970                           ; 4 bytes @ 0x59
   971  00005A                     	ds	4
   972  00005E                     efgtoa@c:
   973                           	opt callstack 0
   974                           
   975                           ; 1 bytes @ 0x5D
   976  00005E                     	ds	1
   977  00005F                     ??_efgtoa:
   978                           
   979                           ; 1 bytes @ 0x5E
   980  00005F                     	ds	5
   981  000064                     ?_vfpfcnvrt:
   982                           	opt callstack 0
   983  000064                     vfpfcnvrt@fp:
   984                           	opt callstack 0
   985                           
   986                           ; 2 bytes @ 0x63
   987  000064                     	ds	2
   988  000066                     vfpfcnvrt@fmt:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x65
   992  000066                     	ds	2
   993  000068                     vfpfcnvrt@ap:
   994                           	opt callstack 0
   995                           
   996                           ; 2 bytes @ 0x67
   997  000068                     	ds	2
   998  00006A                     ??_vfpfcnvrt:
   999                           
  1000                           ; 1 bytes @ 0x69
  1001  00006A                     	ds	6
  1002  000070                     ?_vfprintf:
  1003                           	opt callstack 0
  1004  000070                     vfprintf@fp:
  1005                           	opt callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x6F
  1008  000070                     	ds	2
  1009  000072                     vfprintf@fmt:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x71
  1013  000072                     	ds	2
  1014  000074                     vfprintf@ap:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x73
  1018  000074                     	ds	2
  1019  000076                     
  1020                           ; 1 bytes @ 0x75
  1021 ;;
  1022 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1023 ;;
  1024 ;; *************** function _main *****************
  1025 ;; Defined at:
  1026 ;;		line 48 in file "EX24.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1040 ;;      Params:         0       0       0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0       0       0
  1042 ;;      Temps:          0       2       0       0       0       0       0
  1043 ;;      Totals:         0       2       0       0       0       0       0
  1044 ;;Total ram usage:        2 bytes
  1045 ;; Hardware stack levels required when called:   10
  1046 ;; This function calls:
  1047 ;;		___aldiv
  1048 ;;		___fldiv
  1049 ;;		___flmul
  1050 ;;		___lmul
  1051 ;;		___xxtofl
  1052 ;;		_init_EUSART
  1053 ;;		_sprintf
  1054 ;;		_string_EUSART
  1055 ;; This function is called by:
  1056 ;;		Startup code after reset
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text0
  1061  001EE0                     __ptext0:
  1062                           	opt callstack 0
  1063  001EE0                     _main:
  1064                           	opt callstack 21
  1065                           
  1066                           ;EX24.c: 50:     TRISB = 0b00000000;
  1067                           
  1068                           ;incstack = 0
  1069  001EE0  0E00               	movlw	0
  1070  001EE2  6E93               	movwf	3987,c	;volatile
  1071                           
  1072                           ;EX24.c: 51:     PORTB = 0b00000000;
  1073  001EE4  0E00               	movlw	0
  1074  001EE6  6E81               	movwf	3969,c	;volatile
  1075                           
  1076                           ;EX24.c: 53:     ADCON0 = 0b00000101;
  1077  001EE8  0E05               	movlw	5
  1078  001EEA  6EC2               	movwf	4034,c	;volatile
  1079                           
  1080                           ;EX24.c: 60:     ADCON1 = 0b00001101;
  1081  001EEC  0E0D               	movlw	13
  1082  001EEE  6EC1               	movwf	4033,c	;volatile
  1083                           
  1084                           ;EX24.c: 65:     ADCON2 = 0b10000111;
  1085  001EF0  0E87               	movlw	135
  1086  001EF2  6EC0               	movwf	4032,c	;volatile
  1087                           
  1088                           ;EX24.c: 71:     PIE1bits.RCIE = 1;
  1089  001EF4  8A9D               	bsf	3997,5,c	;volatile
  1090                           
  1091                           ;EX24.c: 72:     INTCONbits.GIE = 1;
  1092  001EF6  8EF2               	bsf	4082,7,c	;volatile
  1093                           
  1094                           ;EX24.c: 73:     INTCONbits.PEIE = 1;
  1095  001EF8  8CF2               	bsf	4082,6,c	;volatile
  1096                           
  1097                           ;EX24.c: 75:     init_EUSART();
  1098  001EFA  EC88  F019         	call	_init_EUSART	;wreg free
  1099                           
  1100                           ;EX24.c: 78:     string_EUSART("Conversao A/D: Canais AN0 e AN1\r\n");
  1101  001EFE  0E01               	movlw	low STR_1
  1102  001F00  6E05               	movwf	string_EUSART@str,c
  1103  001F02  0E06               	movlw	high STR_1
  1104  001F04  6E06               	movwf	string_EUSART@str+1,c
  1105  001F06  EC2B  F018         	call	_string_EUSART	;wreg free
  1106  001F0A                     l5855:
  1107                           
  1108                           ;EX24.c: 81:     {;EX24.c: 82:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1109  001F0A  0E0B               	movlw	11
  1110  001F0C  0100               	movlb	0	; () banked
  1111  001F0E  6FDF               	movwf	(??_main+1)& (0+255),b
  1112  001F10  0E26               	movlw	38
  1113  001F12  6FDE               	movwf	??_main& (0+255),b
  1114  001F14  0E5D               	movlw	93
  1115  001F16                     u8227:
  1116  001F16  2EE8               	decfsz	wreg,f,c
  1117  001F18  D7FE               	bra	u8227
  1118  001F1A  2FDE               	decfsz	??_main& (0+255),f,b
  1119  001F1C  D7FC               	bra	u8227
  1120  001F1E  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1121  001F20  D7FA               	bra	u8227
  1122  001F22  D000               	nop2	
  1123                           
  1124                           ;EX24.c: 84:         ADCON0bits.CHS0 = 0;
  1125  001F24  94C2               	bcf	4034,2,c	;volatile
  1126                           
  1127                           ;EX24.c: 87:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1128  001F26  0E42               	movlw	66
  1129  001F28                     u8237:
  1130  001F28  2EE8               	decfsz	wreg,f,c
  1131  001F2A  D7FE               	bra	u8237
  1132  001F2C  D000               	nop2	
  1133                           
  1134                           ;EX24.c: 89:         ADCON0bits.GO = 1;
  1135  001F2E  82C2               	bsf	4034,1,c	;volatile
  1136  001F30                     l62:
  1137  001F30  B2C2               	btfsc	4034,1,c	;volatile
  1138  001F32  D7FE               	goto	l62
  1139                           
  1140                           ;EX24.c: 93:         adc = ADRESH;
  1141  001F34  CFC4 F0F8          	movff	4036,_adc	;volatile
  1142  001F38  0100               	movlb	0	; () banked
  1143  001F3A  6BF9               	clrf	(_adc+1)& (0+255),b
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;EX24.c: 95:         adc = (adc << 8) + ADRESL;
  1147  001F3C  51F8               	movf	_adc& (0+255),w,b
  1148  001F3E  6FDF               	movwf	(??_main+1)& (0+255),b
  1149  001F40  6BDE               	clrf	??_main& (0+255),b
  1150  001F42  50C3               	movf	4035,w,c	;volatile
  1151  001F44  25DE               	addwf	??_main& (0+255),w,b
  1152  001F46  6FF8               	movwf	_adc& (0+255),b
  1153  001F48  0E00               	movlw	0
  1154  001F4A  21DF               	addwfc	(??_main+1)& (0+255),w,b
  1155  001F4C  6FF9               	movwf	(_adc+1)& (0+255),b
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;EX24.c: 98:         temp = ((float)adc * 5000) / 1023;
  1159  001F4E  0E00               	movlw	0
  1160  001F50  6E16               	movwf	___flmul@a,c
  1161  001F52  0E40               	movlw	64
  1162  001F54  6E17               	movwf	___flmul@a+1,c
  1163  001F56  0E9C               	movlw	156
  1164  001F58  6E18               	movwf	___flmul@a+2,c
  1165  001F5A  0E45               	movlw	69
  1166  001F5C  6E19               	movwf	___flmul@a+3,c
  1167  001F5E  C0F8  F004         	movff	_adc,___xxtofl@val
  1168  001F62  C0F9  F005         	movff	_adc+1,___xxtofl@val+1
  1169  001F66  0E00               	movlw	0
  1170  001F68  BE05               	btfsc	___xxtofl@val+1,7,c
  1171  001F6A  0EFF               	movlw	-1
  1172  001F6C  6E06               	movwf	___xxtofl@val+2,c
  1173  001F6E  6E07               	movwf	___xxtofl@val+3,c
  1174  001F70  0E01               	movlw	1
  1175  001F72  ECAF  F012         	call	___xxtofl
  1176  001F76  C004  F012         	movff	?___xxtofl,___flmul@b
  1177  001F7A  C005  F013         	movff	?___xxtofl+1,___flmul@b+1
  1178  001F7E  C006  F014         	movff	?___xxtofl+2,___flmul@b+2
  1179  001F82  C007  F015         	movff	?___xxtofl+3,___flmul@b+3
  1180  001F86  ECFD  F00A         	call	___flmul	;wreg free
  1181  001F8A  C012  F02B         	movff	?___flmul,___fldiv@b
  1182  001F8E  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
  1183  001F92  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
  1184  001F96  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
  1185  001F9A  0E00               	movlw	0
  1186  001F9C  6E2F               	movwf	___fldiv@a,c
  1187  001F9E  0EC0               	movlw	192
  1188  001FA0  6E30               	movwf	___fldiv@a+1,c
  1189  001FA2  0E7F               	movlw	127
  1190  001FA4  6E31               	movwf	___fldiv@a+2,c
  1191  001FA6  0E44               	movlw	68
  1192  001FA8  6E32               	movwf	___fldiv@a+3,c
  1193  001FAA  EC2C  F00E         	call	___fldiv	;wreg free
  1194  001FAE  C02B  F0EC         	movff	?___fldiv,_temp
  1195  001FB2  C02C  F0ED         	movff	?___fldiv+1,_temp+1
  1196  001FB6  C02D  F0EE         	movff	?___fldiv+2,_temp+2
  1197  001FBA  C02E  F0EF         	movff	?___fldiv+3,_temp+3
  1198                           
  1199                           ;EX24.c: 99:         temp = temp / 10;
  1200  001FBE  C0EC  F02B         	movff	_temp,___fldiv@b
  1201  001FC2  C0ED  F02C         	movff	_temp+1,___fldiv@b+1
  1202  001FC6  C0EE  F02D         	movff	_temp+2,___fldiv@b+2
  1203  001FCA  C0EF  F02E         	movff	_temp+3,___fldiv@b+3
  1204  001FCE  0E00               	movlw	0
  1205  001FD0  6E2F               	movwf	___fldiv@a,c
  1206  001FD2  0E00               	movlw	0
  1207  001FD4  6E30               	movwf	___fldiv@a+1,c
  1208  001FD6  0E20               	movlw	32
  1209  001FD8  6E31               	movwf	___fldiv@a+2,c
  1210  001FDA  0E41               	movlw	65
  1211  001FDC  6E32               	movwf	___fldiv@a+3,c
  1212  001FDE  EC2C  F00E         	call	___fldiv	;wreg free
  1213  001FE2  C02B  F0EC         	movff	?___fldiv,_temp
  1214  001FE6  C02C  F0ED         	movff	?___fldiv+1,_temp+1
  1215  001FEA  C02D  F0EE         	movff	?___fldiv+2,_temp+2
  1216  001FEE  C02E  F0EF         	movff	?___fldiv+3,_temp+3
  1217                           
  1218                           ;EX24.c: 101:         ADCON0bits.CHS0 = 1;
  1219  001FF2  84C2               	bsf	4034,2,c	;volatile
  1220                           
  1221                           ;EX24.c: 103:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1222  001FF4  0E42               	movlw	66
  1223  001FF6                     u8247:
  1224  001FF6  2EE8               	decfsz	wreg,f,c
  1225  001FF8  D7FE               	bra	u8247
  1226  001FFA  D000               	nop2	
  1227                           
  1228                           ;EX24.c: 105:         ADCON0bits.GO = 1;
  1229  001FFC  82C2               	bsf	4034,1,c	;volatile
  1230  001FFE                     l65:
  1231  001FFE  B2C2               	btfsc	4034,1,c	;volatile
  1232  002000  D7FE               	goto	l65
  1233                           
  1234                           ;EX24.c: 109:         adc = ADRESH;
  1235  002002  CFC4 F0F8          	movff	4036,_adc	;volatile
  1236  002006  0100               	movlb	0	; () banked
  1237  002008  6BF9               	clrf	(_adc+1)& (0+255),b
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;EX24.c: 111:         adc = (adc << 8) + ADRESL;
  1241  00200A  51F8               	movf	_adc& (0+255),w,b
  1242  00200C  6FDF               	movwf	(??_main+1)& (0+255),b
  1243  00200E  6BDE               	clrf	??_main& (0+255),b
  1244  002010  50C3               	movf	4035,w,c	;volatile
  1245  002012  25DE               	addwf	??_main& (0+255),w,b
  1246  002014  6FF8               	movwf	_adc& (0+255),b
  1247  002016  0E00               	movlw	0
  1248  002018  21DF               	addwfc	(??_main+1)& (0+255),w,b
  1249  00201A  6FF9               	movwf	(_adc+1)& (0+255),b
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;EX24.c: 114:         volt = ((long)adc * 5000) / 1023;
  1253  00201C  C0F8  F004         	movff	_adc,___lmul@multiplier
  1254  002020  C0F9  F005         	movff	_adc+1,___lmul@multiplier+1
  1255  002024  0E00               	movlw	0
  1256  002026  BE05               	btfsc	___lmul@multiplier+1,7,c
  1257  002028  0EFF               	movlw	-1
  1258  00202A  6E06               	movwf	___lmul@multiplier+2,c
  1259  00202C  6E07               	movwf	___lmul@multiplier+3,c
  1260  00202E  0E88               	movlw	136
  1261  002030  6E08               	movwf	___lmul@multiplicand,c
  1262  002032  0E13               	movlw	19
  1263  002034  6E09               	movwf	___lmul@multiplicand+1,c
  1264  002036  0E00               	movlw	0
  1265  002038  6E0A               	movwf	___lmul@multiplicand+2,c
  1266  00203A  0E00               	movlw	0
  1267  00203C  6E0B               	movwf	___lmul@multiplicand+3,c
  1268  00203E  EC00  F018         	call	___lmul	;wreg free
  1269  002042  C004  F010         	movff	?___lmul,___aldiv@dividend
  1270  002046  C005  F011         	movff	?___lmul+1,___aldiv@dividend+1
  1271  00204A  C006  F012         	movff	?___lmul+2,___aldiv@dividend+2
  1272  00204E  C007  F013         	movff	?___lmul+3,___aldiv@dividend+3
  1273  002052  0EFF               	movlw	255
  1274  002054  6E14               	movwf	___aldiv@divisor,c
  1275  002056  0E03               	movlw	3
  1276  002058  6E15               	movwf	___aldiv@divisor+1,c
  1277  00205A  0E00               	movlw	0
  1278  00205C  6E16               	movwf	___aldiv@divisor+2,c
  1279  00205E  0E00               	movlw	0
  1280  002060  6E17               	movwf	___aldiv@divisor+3,c
  1281  002062  ECF7  F014         	call	___aldiv	;wreg free
  1282  002066  C010  F0F0         	movff	?___aldiv,_volt
  1283  00206A  C011  F0F1         	movff	?___aldiv+1,_volt+1
  1284  00206E  C012  F0F2         	movff	?___aldiv+2,_volt+2
  1285  002072  C013  F0F3         	movff	?___aldiv+3,_volt+3
  1286                           
  1287                           ;EX24.c: 118:         sprintf(bufferEUSART, "Temp: %0.1f C - Volt: %04lu mV\r\n", temp, 
      +                          volt);
  1288  002076  0E50               	movlw	low _bufferEUSART
  1289  002078  0100               	movlb	0	; () banked
  1290  00207A  6FD2               	movwf	sprintf@s& (0+255),b
  1291  00207C  0E01               	movlw	high _bufferEUSART
  1292  00207E  6FD3               	movwf	(sprintf@s+1)& (0+255),b
  1293  002080  0E23               	movlw	low STR_2
  1294  002082  6FD4               	movwf	sprintf@fmt& (0+255),b
  1295  002084  0E06               	movlw	high STR_2
  1296  002086  6FD5               	movwf	(sprintf@fmt+1)& (0+255),b
  1297  002088  C0EC  F0D6         	movff	_temp,?_sprintf+4
  1298  00208C  C0ED  F0D7         	movff	_temp+1,?_sprintf+5
  1299  002090  C0EE  F0D8         	movff	_temp+2,?_sprintf+6
  1300  002094  C0EF  F0D9         	movff	_temp+3,?_sprintf+7
  1301  002098  C0F0  F0DA         	movff	_volt,?_sprintf+8
  1302  00209C  C0F1  F0DB         	movff	_volt+1,?_sprintf+9
  1303  0020A0  C0F2  F0DC         	movff	_volt+2,?_sprintf+10
  1304  0020A4  C0F3  F0DD         	movff	_volt+3,?_sprintf+11
  1305  0020A8  ECA9  F017         	call	_sprintf	;wreg free
  1306                           
  1307                           ;EX24.c: 121:         string_EUSART(bufferEUSART);
  1308  0020AC  0E50               	movlw	low _bufferEUSART
  1309  0020AE  6E05               	movwf	string_EUSART@str,c
  1310  0020B0  0E01               	movlw	high _bufferEUSART
  1311  0020B2  6E06               	movwf	string_EUSART@str+1,c
  1312  0020B4  EC2B  F018         	call	_string_EUSART	;wreg free
  1313  0020B8  D728               	goto	l5855
  1314  0020BA                     __end_of_main:
  1315                           	opt callstack 0
  1316                           
  1317 ;; *************** function _string_EUSART *****************
  1318 ;; Defined at:
  1319 ;;		line 25 in file "../Bibliotecas/eusart.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  str             2    4[COMRAM] PTR unsigned char 
  1322 ;;		 -> bufferEUSART(50), STR_1(34), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         2       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         2       0       0       0       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    3
  1341 ;; This function calls:
  1342 ;;		_escreve_EUSART
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text1
  1349  003056                     __ptext1:
  1350                           	opt callstack 0
  1351  003056                     _string_EUSART:
  1352                           	opt callstack 27
  1353                           
  1354                           ;../Bibliotecas/eusart.c: 25: void string_EUSART(char *str);../Bibliotecas/eusart.c: 26:
      +                           {;../Bibliotecas/eusart.c: 27:   while(*str!='\0')
  1355                           
  1356                           ;incstack = 0
  1357  003056  D014               	goto	l4181
  1358  003058                     l4177:
  1359                           
  1360                           ;../Bibliotecas/eusart.c: 28:   {;../Bibliotecas/eusart.c: 29:       escreve_EUSART(*str
      +                          );
  1361  003058  C005  FFF6         	movff	string_EUSART@str,tblptrl
  1362  00305C  C006  FFF7         	movff	string_EUSART@str+1,tblptrh
  1363  003060  6AF8               	clrf	tblptru,c
  1364  003062  0E05               	movlw	(high __ramtop+-1)
  1365  003064  64F7               	cpfsgt	tblptrh,c
  1366  003066  D003               	bra	u5387
  1367  003068  0008               	tblrd		*
  1368  00306A  50F5               	movf	tablat,w,c
  1369  00306C  D005               	bra	u5380
  1370  00306E                     u5387:
  1371  00306E  CFF6 FFE1          	movff	tblptrl,fsr1l
  1372  003072  CFF7 FFE2          	movff	tblptrh,fsr1h
  1373  003076  50E7               	movf	indf1,w,c
  1374  003078                     u5380:
  1375  003078  EC91  F019         	call	_escreve_EUSART
  1376                           
  1377                           ;../Bibliotecas/eusart.c: 30:       str++;
  1378  00307C  4A05               	infsnz	string_EUSART@str,f,c
  1379  00307E  2A06               	incf	string_EUSART@str+1,f,c
  1380  003080                     l4181:
  1381                           
  1382                           ;../Bibliotecas/eusart.c: 27:   while(*str!='\0')
  1383  003080  C005  FFF6         	movff	string_EUSART@str,tblptrl
  1384  003084  C006  FFF7         	movff	string_EUSART@str+1,tblptrh
  1385  003088  6AF8               	clrf	tblptru,c
  1386  00308A  0E05               	movlw	(high __ramtop+-1)
  1387  00308C  64F7               	cpfsgt	tblptrh,c
  1388  00308E  D003               	bra	u5397
  1389  003090  0008               	tblrd		*
  1390  003092  50F5               	movf	tablat,w,c
  1391  003094  D005               	bra	u5390
  1392  003096                     u5397:
  1393  003096  CFF6 FFE1          	movff	tblptrl,fsr1l
  1394  00309A  CFF7 FFE2          	movff	tblptrh,fsr1h
  1395  00309E  50E7               	movf	indf1,w,c
  1396  0030A0                     u5390:
  1397  0030A0  0900               	iorlw	0
  1398  0030A2  B4D8               	btfsc	status,2,c
  1399  0030A4  0012               	return	
  1400  0030A6  D7D8               	goto	l4177
  1401  0030A8                     __end_of_string_EUSART:
  1402                           	opt callstack 0
  1403                           
  1404 ;; *************** function _escreve_EUSART *****************
  1405 ;; Defined at:
  1406 ;;		line 18 in file "../Bibliotecas/eusart.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  c               1    wreg     unsigned char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  c               1    3[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         0       0       0       0       0       0       0
  1421 ;;      Locals:         1       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0
  1423 ;;      Totals:         1       0       0       0       0       0       0
  1424 ;;Total ram usage:        1 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_string_EUSART
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text2
  1435  003322                     __ptext2:
  1436                           	opt callstack 0
  1437  003322                     _escreve_EUSART:
  1438                           	opt callstack 27
  1439                           
  1440                           ;incstack = 0
  1441                           ;escreve_EUSART@c stored from wreg
  1442  003322  6E04               	movwf	escreve_EUSART@c,c
  1443  003324                     
  1444                           ;../Bibliotecas/eusart.c: 18: void escreve_EUSART(char c);../Bibliotecas/eusart.c: 19: {
      +                          ;../Bibliotecas/eusart.c: 20:   while(!TRMT);
  1445  003324  A2AC               	btfss	4012,1,c	;volatile
  1446  003326  D7FE               	goto	l4153
  1447                           
  1448                           ;../Bibliotecas/eusart.c: 21:   TXREG = c;
  1449  003328  C004  FFAD         	movff	escreve_EUSART@c,4013	;volatile
  1450  00332C  0012               	return		;funcret
  1451  00332E                     __end_of_escreve_EUSART:
  1452                           	opt callstack 0
  1453                           
  1454 ;; *************** function _sprintf *****************
  1455 ;; Defined at:
  1456 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  s               2   82[BANK0 ] PTR unsigned char 
  1459 ;;		 -> bufferEUSART(50), 
  1460 ;;  fmt             2   84[BANK0 ] PTR const unsigned char 
  1461 ;;		 -> STR_2(33), 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  f               6    4[BANK1 ] struct _IO_FILE
  1464 ;;  ap              2    2[BANK1 ] PTR void [1]
  1465 ;;		 -> ?_sprintf(2), 
  1466 ;;  ret             2    0        int 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2   82[BANK0 ] int 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1476 ;;      Params:         0      12       0       0       0       0       0
  1477 ;;      Locals:         0       0      10       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0
  1479 ;;      Totals:         0      12      10       0       0       0       0
  1480 ;;Total ram usage:       22 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    9
  1483 ;; This function calls:
  1484 ;;		_vfprintf
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text3
  1491  002F52                     __ptext3:
  1492                           	opt callstack 0
  1493  002F52                     _sprintf:
  1494                           	opt callstack 21
  1495                           
  1496                           ;incstack = 0
  1497  002F52  0ED6               	movlw	low (?_sprintf+4)
  1498  002F54  0101               	movlb	1	; () banked
  1499  002F56  6F84               	movwf	sprintf@ap& (0+255),b
  1500  002F58  0E00               	movlw	high (?_sprintf+4)
  1501  002F5A  6F85               	movwf	(sprintf@ap+1)& (0+255),b
  1502  002F5C  C0D2  F186         	movff	sprintf@s,sprintf@f
  1503  002F60  C0D3  F187         	movff	sprintf@s+1,sprintf@f+1
  1504                           
  1505                           ; BSR set to: 1
  1506  002F64  0E00               	movlw	0
  1507  002F66  6F89               	movwf	(sprintf@f+3)& (0+255),b
  1508  002F68  0E00               	movlw	0
  1509  002F6A  6F88               	movwf	(sprintf@f+2)& (0+255),b
  1510                           
  1511                           ; BSR set to: 1
  1512  002F6C  0E00               	movlw	0
  1513  002F6E  6F8B               	movwf	(sprintf@f+5)& (0+255),b
  1514  002F70  0E00               	movlw	0
  1515  002F72  6F8A               	movwf	(sprintf@f+4)& (0+255),b
  1516                           
  1517                           ; BSR set to: 1
  1518  002F74  0E86               	movlw	low sprintf@f
  1519  002F76  6E70               	movwf	vfprintf@fp,c
  1520  002F78  0E01               	movlw	high sprintf@f
  1521  002F7A  6E71               	movwf	vfprintf@fp+1,c
  1522  002F7C  C0D4  F072         	movff	sprintf@fmt,vfprintf@fmt
  1523  002F80  C0D5  F073         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1524  002F84  0E84               	movlw	low sprintf@ap
  1525  002F86  6E74               	movwf	vfprintf@ap,c
  1526  002F88  0E01               	movlw	high sprintf@ap
  1527  002F8A  6E75               	movwf	vfprintf@ap+1,c
  1528  002F8C  ECD5  F017         	call	_vfprintf	;wreg free
  1529  002F90  0101               	movlb	1	; () banked
  1530  002F92  5188               	movf	(sprintf@f+2)& (0+255),w,b
  1531  002F94  0100               	movlb	0	; () banked
  1532  002F96  25D2               	addwf	sprintf@s& (0+255),w,b
  1533  002F98  6ED9               	movwf	fsr2l,c
  1534  002F9A  0101               	movlb	1	; () banked
  1535  002F9C  5189               	movf	(sprintf@f+3)& (0+255),w,b
  1536  002F9E  0100               	movlb	0	; () banked
  1537  002FA0  21D3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1538  002FA2  6EDA               	movwf	fsr2h,c
  1539  002FA4  0E00               	movlw	0
  1540  002FA6  6EDF               	movwf	indf2,c
  1541                           
  1542                           ; BSR set to: 0
  1543  002FA8  0012               	return		;funcret
  1544  002FAA                     __end_of_sprintf:
  1545                           	opt callstack 0
  1546                           
  1547 ;; *************** function _vfprintf *****************
  1548 ;; Defined at:
  1549 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  fp              2  111[COMRAM] PTR struct _IO_FILE
  1552 ;;		 -> sprintf@f(6), 
  1553 ;;  fmt             2  113[COMRAM] PTR const unsigned char 
  1554 ;;		 -> STR_2(33), 
  1555 ;;  ap              2  115[COMRAM] PTR PTR void 
  1556 ;;		 -> sprintf@ap(2), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  cfmt            2   80[BANK0 ] PTR unsigned char 
  1559 ;;		 -> STR_2(33), 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2  111[COMRAM] int 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1569 ;;      Params:         6       0       0       0       0       0       0
  1570 ;;      Locals:         0       2       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0
  1572 ;;      Totals:         6       2       0       0       0       0       0
  1573 ;;Total ram usage:        8 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    8
  1576 ;; This function calls:
  1577 ;;		_vfpfcnvrt
  1578 ;; This function is called by:
  1579 ;;		_sprintf
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text4
  1584  002FAA                     __ptext4:
  1585                           	opt callstack 0
  1586  002FAA                     _vfprintf:
  1587                           	opt callstack 21
  1588                           
  1589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;incstack = 0
  1593  002FAA  C072  F0D0         	movff	vfprintf@fmt,vfprintf@cfmt
  1594  002FAE  C073  F0D1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1595                           
  1596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1597  002FB2  0E00               	movlw	0
  1598  002FB4  0100               	movlb	0	; () banked
  1599  002FB6  6FF5               	movwf	(_nout+1)& (0+255),b
  1600  002FB8  0E00               	movlw	0
  1601  002FBA  6FF4               	movwf	_nout& (0+255),b
  1602                           
  1603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1604  002FBC  D013               	goto	l5829
  1605  002FBE                     l5827:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1609  002FBE  C070  F064         	movff	vfprintf@fp,vfpfcnvrt@fp
  1610  002FC2  C071  F065         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1611  002FC6  0ED0               	movlw	low vfprintf@cfmt
  1612  002FC8  6E66               	movwf	vfpfcnvrt@fmt,c
  1613  002FCA  0E00               	movlw	high vfprintf@cfmt
  1614  002FCC  6E67               	movwf	vfpfcnvrt@fmt+1,c
  1615  002FCE  C074  F068         	movff	vfprintf@ap,vfpfcnvrt@ap
  1616  002FD2  C075  F069         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1617  002FD6  ECED  F007         	call	_vfpfcnvrt	;wreg free
  1618  002FDA  5064               	movf	?_vfpfcnvrt,w,c
  1619  002FDC  0100               	movlb	0	; () banked
  1620  002FDE  27F4               	addwf	_nout& (0+255),f,b
  1621  002FE0  5065               	movf	?_vfpfcnvrt+1,w,c
  1622  002FE2  23F5               	addwfc	(_nout+1)& (0+255),f,b
  1623  002FE4                     l5829:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1627  002FE4  C0D0  FFF6         	movff	vfprintf@cfmt,tblptrl
  1628  002FE8  C0D1  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1629  002FEC                     	if	0	;tblptru may be non-zero
  1630  002FEC                     	endif
  1631  002FEC                     	if	0	;tblptru may be non-zero
  1632  002FEC                     	endif
  1633  002FEC  0008               	tblrd		*
  1634  002FEE  50F5               	movf	tablat,w,c
  1635  002FF0  0900               	iorlw	0
  1636  002FF2  A4D8               	btfss	status,2,c
  1637  002FF4  D7E4               	goto	l5827
  1638                           
  1639                           ; BSR set to: 0
  1640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1641  002FF6  C0F4  F070         	movff	_nout,?_vfprintf
  1642  002FFA  C0F5  F071         	movff	_nout+1,?_vfprintf+1
  1643                           
  1644                           ; BSR set to: 0
  1645  002FFE  0012               	return		;funcret
  1646  003000                     __end_of_vfprintf:
  1647                           	opt callstack 0
  1648                           
  1649 ;; *************** function _vfpfcnvrt *****************
  1650 ;; Defined at:
  1651 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  fp              2   99[COMRAM] PTR struct _IO_FILE
  1654 ;;		 -> sprintf@f(6), 
  1655 ;;  fmt             2  101[COMRAM] PTR PTR unsigned char 
  1656 ;;		 -> vfprintf@cfmt(2), 
  1657 ;;  ap              2  103[COMRAM] PTR PTR void 
  1658 ;;		 -> sprintf@ap(2), 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  llu             8   64[BANK0 ] unsigned long long 
  1661 ;;  ll              8    0        long long 
  1662 ;;  f               4   72[BANK0 ] long long 
  1663 ;;  ct              3   76[BANK0 ] unsigned char [3]
  1664 ;;  vp              3    0        PTR void 
  1665 ;;  cp              3    0        PTR unsigned char 
  1666 ;;  done            2   56[BANK0 ] int 
  1667 ;;  i               2    0        int 
  1668 ;;  c               1   79[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2   99[COMRAM] int 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1678 ;;      Params:         6       0       0       0       0       0       0
  1679 ;;      Locals:         0      24       0       0       0       0       0
  1680 ;;      Temps:          6       0       0       0       0       0       0
  1681 ;;      Totals:        12      24       0       0       0       0       0
  1682 ;;Total ram usage:       36 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    7
  1685 ;; This function calls:
  1686 ;;		_atoi
  1687 ;;		_efgtoa
  1688 ;;		_fputc
  1689 ;;		_isdigit
  1690 ;;		_isupper
  1691 ;;		_strncmp
  1692 ;;		_tolower
  1693 ;;		_utoa
  1694 ;; This function is called by:
  1695 ;;		_vfprintf
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text5
  1700  000FDA                     __ptext5:
  1701                           	opt callstack 0
  1702  000FDA                     _vfpfcnvrt:
  1703                           	opt callstack 21
  1704                           
  1705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;incstack = 0
  1709  000FDA  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1710  000FDE  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1711  000FE2  CFDE FFF6          	movff	postinc2,tblptrl
  1712  000FE6  CFDD FFF7          	movff	postdec2,tblptrh
  1713  000FEA                     	if	0	;tblptru may be non-zero
  1714  000FEA                     	endif
  1715  000FEA                     	if	0	;tblptru may be non-zero
  1716  000FEA                     	endif
  1717  000FEA  0008               	tblrd		*
  1718  000FEC  50F5               	movf	tablat,w,c
  1719  000FEE  0A25               	xorlw	37
  1720  000FF0  A4D8               	btfss	status,2,c
  1721  000FF2  D2E9               	goto	l5805
  1722                           
  1723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1724  000FF4  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1725  000FF8  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1726  000FFC  2ADE               	incf	postinc2,f,c
  1727  000FFE  0E00               	movlw	0
  1728  001000  22DD               	addwfc	postdec2,f,c
  1729                           
  1730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1731  001002  0E00               	movlw	0
  1732  001004  0100               	movlb	0	; () banked
  1733  001006  6FF7               	movwf	(_width+1)& (0+255),b
  1734  001008  0E00               	movlw	0
  1735  00100A  6FF6               	movwf	_width& (0+255),b
  1736  00100C  C0F6  F078         	movff	_width,_flags
  1737  001010  C0F7  F079         	movff	_width+1,_flags+1
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1741  001014  6876               	setf	_prec,c
  1742  001016  6877               	setf	_prec+1,c
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1746  001018  0E00               	movlw	0
  1747  00101A  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1748  00101C  0E00               	movlw	0
  1749  00101E  D014               	goto	L1
  1750  001020                     l5667:
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1754  001020  8078               	bsf	_flags,0,c
  1755  001022                     l5669:
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1759  001022  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1760  001026  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1761  00102A  2ADE               	incf	postinc2,f,c
  1762  00102C  0E00               	movlw	0
  1763  00102E  22DD               	addwfc	postdec2,f,c
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1766  001030  D02E               	goto	l5693
  1767  001032                     l5671:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1771  001032  8278               	bsf	_flags,1,c
  1772  001034  D7F6               	goto	l5669
  1773  001036                     l5675:
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1777  001036  8478               	bsf	_flags,2,c
  1778  001038  D7F4               	goto	l5669
  1779  00103A                     l5679:
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1783  00103A  8678               	bsf	_flags,3,c
  1784  00103C  D7F2               	goto	l5669
  1785  00103E                     l5683:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1789  00103E  8878               	bsf	_flags,4,c
  1790  001040  D7F0               	goto	l5669
  1791  001042                     l5687:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1795  001042  0E00               	movlw	0
  1796  001044  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1797  001046  0E01               	movlw	1
  1798  001048                     L1:
  1799  001048  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1800                           
  1801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1802  00104A  D021               	goto	l5693
  1803  00104C                     l5691:
  1804                           
  1805                           ; BSR set to: 0
  1806  00104C  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1807  001050  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1808  001054  CFDE FFF6          	movff	postinc2,tblptrl
  1809  001058  CFDD FFF7          	movff	postdec2,tblptrh
  1810  00105C                     	if	0	;tblptru may be non-zero
  1811  00105C                     	endif
  1812  00105C                     	if	0	;tblptru may be non-zero
  1813  00105C                     	endif
  1814  00105C  0008               	tblrd		*
  1815  00105E  50F5               	movf	tablat,w,c
  1816  001060  6E6A               	movwf	??_vfpfcnvrt& (0+255),c
  1817  001062  6A6B               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1818                           
  1819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1820                           ; Switch size 1, requested type "simple"
  1821                           ; Number of cases is 1, Range of values is 0 to 0
  1822                           ; switch strategies available:
  1823                           ; Name         Instructions Cycles
  1824                           ; simple_byte            4     3 (average)
  1825                           ;	Chosen strategy is simple_byte
  1826  001064  506B               	movf	??_vfpfcnvrt+1,w,c
  1827  001066  0A00               	xorlw	0	; case 0
  1828  001068  A4D8               	btfss	status,2,c
  1829  00106A  D7EB               	goto	l5687
  1830                           
  1831                           ; BSR set to: 0
  1832                           ; Switch size 1, requested type "simple"
  1833                           ; Number of cases is 5, Range of values is 32 to 48
  1834                           ; switch strategies available:
  1835                           ; Name         Instructions Cycles
  1836                           ; simple_byte           16     9 (average)
  1837                           ;	Chosen strategy is simple_byte
  1838  00106C  506A               	movf	??_vfpfcnvrt,w,c
  1839  00106E  0A20               	xorlw	32	; case 32
  1840  001070  B4D8               	btfsc	status,2,c
  1841  001072  D7E3               	goto	l5679
  1842  001074  0A03               	xorlw	3	; case 35
  1843  001076  B4D8               	btfsc	status,2,c
  1844  001078  D7E2               	goto	l5683
  1845  00107A  0A08               	xorlw	8	; case 43
  1846  00107C  B4D8               	btfsc	status,2,c
  1847  00107E  D7DB               	goto	l5675
  1848  001080  0A06               	xorlw	6	; case 45
  1849  001082  B4D8               	btfsc	status,2,c
  1850  001084  D7CD               	goto	l5667
  1851  001086  0A1D               	xorlw	29	; case 48
  1852  001088  B4D8               	btfsc	status,2,c
  1853  00108A  D7D3               	goto	l5671
  1854  00108C  D7DA               	goto	l5687
  1855  00108E                     l5693:
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1859  00108E  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  1860  001090  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1861  001092  B4D8               	btfsc	status,2,c
  1862  001094  D7DB               	goto	l5691
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1866  001096  B078               	btfsc	_flags,0,c
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1870  001098  9278               	bcf	_flags,1,c
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1874  00109A  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1875  00109E  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1876  0010A2  CFDE FFF6          	movff	postinc2,tblptrl
  1877  0010A6  CFDD FFF7          	movff	postdec2,tblptrh
  1878  0010AA                     	if	0	;tblptru may be non-zero
  1879  0010AA                     	endif
  1880  0010AA                     	if	0	;tblptru may be non-zero
  1881  0010AA                     	endif
  1882  0010AA  0008               	tblrd		*
  1883  0010AC  50F5               	movf	tablat,w,c
  1884  0010AE  0A2A               	xorlw	42
  1885  0010B0  A4D8               	btfss	status,2,c
  1886  0010B2  D023               	goto	l5705
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1890  0010B4  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1891  0010B8  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1892  0010BC  2ADE               	incf	postinc2,f,c
  1893  0010BE  0E00               	movlw	0
  1894  0010C0  22DD               	addwfc	postdec2,f,c
  1895                           
  1896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1897  0010C2  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1898  0010C6  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1899  0010CA  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  1900  0010CE  0E02               	movlw	2
  1901  0010D0  26DE               	addwf	postinc2,f,c
  1902  0010D2  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  1903  0010D6  0E00               	movlw	0
  1904  0010D8  22DD               	addwfc	postdec2,f,c
  1905  0010DA  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1906  0010DE  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1907  0010E2  CFDE F0F6          	movff	postinc2,_width
  1908  0010E6  CFDD F0F7          	movff	postdec2,_width+1
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1912  0010EA  AFF7               	btfss	(_width+1)& (0+255),7,b
  1913  0010EC  D040               	goto	u8030
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1917  0010EE  8078               	bsf	_flags,0,c
  1918                           
  1919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1920  0010F0  6DF6               	negf	_width& (0+255),b
  1921  0010F2  1FF7               	comf	(_width+1)& (0+255),f,b
  1922  0010F4  B0D8               	btfsc	status,0,c
  1923  0010F6  2BF7               	incf	(_width+1)& (0+255),f,b
  1924  0010F8  D03A               	goto	u8030
  1925  0010FA                     l5705:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1929  0010FA  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1930  0010FE  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1931  001102  CFDE F00B          	movff	postinc2,atoi@s
  1932  001106  CFDD F00C          	movff	postdec2,atoi@s+1
  1933  00110A  EC0F  F012         	call	_atoi	;wreg free
  1934  00110E  C00B  F0F6         	movff	?_atoi,_width
  1935  001112  C00C  F0F7         	movff	?_atoi+1,_width+1
  1936                           
  1937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1938  001116  D007               	goto	l5709
  1939  001118                     l5707:
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1943  001118  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1944  00111C  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1945  001120  2ADE               	incf	postinc2,f,c
  1946  001122  0E00               	movlw	0
  1947  001124  22DD               	addwfc	postdec2,f,c
  1948  001126                     l5709:
  1949  001126  0ED0               	movlw	208
  1950  001128  6E6A               	movwf	??_vfpfcnvrt& (0+255),c
  1951  00112A  0EFF               	movlw	255
  1952  00112C  6E6B               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1953  00112E  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1954  001132  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1955  001136  CFDE FFF6          	movff	postinc2,tblptrl
  1956  00113A  CFDD FFF7          	movff	postdec2,tblptrh
  1957  00113E                     	if	0	;tblptru may be non-zero
  1958  00113E                     	endif
  1959  00113E                     	if	0	;tblptru may be non-zero
  1960  00113E                     	endif
  1961  00113E  0008               	tblrd		*
  1962  001140  50F5               	movf	tablat,w,c
  1963  001142  6E6C               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1964  001144  6A6D               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1965  001146  506A               	movf	??_vfpfcnvrt,w,c
  1966  001148  266C               	addwf	??_vfpfcnvrt+2,f,c
  1967  00114A  506B               	movf	??_vfpfcnvrt+1,w,c
  1968  00114C  226D               	addwfc	??_vfpfcnvrt+3,f,c
  1969  00114E  506D               	movf	??_vfpfcnvrt+3,w,c
  1970  001150  E106               	bnz	u8010
  1971  001152  0E0A               	movlw	10
  1972  001154  5C6C               	subwf	??_vfpfcnvrt+2,w,c
  1973  001156  B0D8               	btfsc	status,0,c
  1974  001158  D002               	goto	u8010
  1975  00115A  0E01               	movlw	1
  1976  00115C  D001               	goto	u8020
  1977  00115E                     u8010:
  1978  00115E  0E00               	movlw	0
  1979  001160                     u8020:
  1980  001160  0100               	movlb	0	; () banked
  1981  001162  6FBA               	movwf	_vfpfcnvrt$643& (0+255),b
  1982  001164  6BBB               	clrf	(_vfpfcnvrt$643+1)& (0+255),b
  1983                           
  1984                           ; BSR set to: 0
  1985  001166  51BA               	movf	_vfpfcnvrt$643& (0+255),w,b
  1986  001168  11BB               	iorwf	(_vfpfcnvrt$643+1)& (0+255),w,b
  1987  00116A  A4D8               	btfss	status,2,c
  1988  00116C  D7D5               	goto	l5707
  1989  00116E                     u8030:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1993  00116E  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1994  001172  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1995  001176  CFDE FFF6          	movff	postinc2,tblptrl
  1996  00117A  CFDD FFF7          	movff	postdec2,tblptrh
  1997  00117E                     	if	0	;tblptru may be non-zero
  1998  00117E                     	endif
  1999  00117E                     	if	0	;tblptru may be non-zero
  2000  00117E                     	endif
  2001  00117E  0008               	tblrd		*
  2002  001180  50F5               	movf	tablat,w,c
  2003  001182  0A2E               	xorlw	46
  2004  001184  A4D8               	btfss	status,2,c
  2005  001186  D06E               	goto	u8080
  2006                           
  2007                           ; BSR set to: 0
  2008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  2009  001188  0E00               	movlw	0
  2010  00118A  6E77               	movwf	_prec+1,c
  2011  00118C  0E00               	movlw	0
  2012  00118E  6E76               	movwf	_prec,c
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  2016  001190  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2017  001194  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2018  001198  2ADE               	incf	postinc2,f,c
  2019  00119A  0E00               	movlw	0
  2020  00119C  22DD               	addwfc	postdec2,f,c
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  2024  00119E  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2025  0011A2  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2026  0011A6  CFDE FFF6          	movff	postinc2,tblptrl
  2027  0011AA  CFDD FFF7          	movff	postdec2,tblptrh
  2028  0011AE                     	if	0	;tblptru may be non-zero
  2029  0011AE                     	endif
  2030  0011AE                     	if	0	;tblptru may be non-zero
  2031  0011AE                     	endif
  2032  0011AE  0008               	tblrd		*
  2033  0011B0  50F5               	movf	tablat,w,c
  2034  0011B2  0A2A               	xorlw	42
  2035  0011B4  A4D8               	btfss	status,2,c
  2036  0011B6  D01C               	goto	l5725
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  2040  0011B8  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2041  0011BC  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2042  0011C0  2ADE               	incf	postinc2,f,c
  2043  0011C2  0E00               	movlw	0
  2044  0011C4  22DD               	addwfc	postdec2,f,c
  2045                           
  2046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2047  0011C6  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2048  0011CA  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2049  0011CE  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2050  0011D2  0E02               	movlw	2
  2051  0011D4  26DE               	addwf	postinc2,f,c
  2052  0011D6  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2053  0011DA  0E00               	movlw	0
  2054  0011DC  22DD               	addwfc	postdec2,f,c
  2055  0011DE  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2056  0011E2  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2057  0011E6  CFDE F076          	movff	postinc2,_prec
  2058  0011EA  CFDD F077          	movff	postdec2,_prec+1
  2059                           
  2060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  2061  0011EE  D03A               	goto	u8080
  2062  0011F0                     l5725:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  2066  0011F0  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2067  0011F4  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2068  0011F8  CFDE F00B          	movff	postinc2,atoi@s
  2069  0011FC  CFDD F00C          	movff	postdec2,atoi@s+1
  2070  001200  EC0F  F012         	call	_atoi	;wreg free
  2071  001204  C00B  F076         	movff	?_atoi,_prec
  2072  001208  C00C  F077         	movff	?_atoi+1,_prec+1
  2073                           
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2075  00120C  D007               	goto	l5729
  2076  00120E                     l5727:
  2077                           
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  2080  00120E  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2081  001212  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  001216  2ADE               	incf	postinc2,f,c
  2083  001218  0E00               	movlw	0
  2084  00121A  22DD               	addwfc	postdec2,f,c
  2085  00121C                     l5729:
  2086  00121C  0ED0               	movlw	208
  2087  00121E  6E6A               	movwf	??_vfpfcnvrt& (0+255),c
  2088  001220  0EFF               	movlw	255
  2089  001222  6E6B               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2090  001224  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2091  001228  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2092  00122C  CFDE FFF6          	movff	postinc2,tblptrl
  2093  001230  CFDD FFF7          	movff	postdec2,tblptrh
  2094  001234                     	if	0	;tblptru may be non-zero
  2095  001234                     	endif
  2096  001234                     	if	0	;tblptru may be non-zero
  2097  001234                     	endif
  2098  001234  0008               	tblrd		*
  2099  001236  50F5               	movf	tablat,w,c
  2100  001238  6E6C               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2101  00123A  6A6D               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2102  00123C  506A               	movf	??_vfpfcnvrt,w,c
  2103  00123E  266C               	addwf	??_vfpfcnvrt+2,f,c
  2104  001240  506B               	movf	??_vfpfcnvrt+1,w,c
  2105  001242  226D               	addwfc	??_vfpfcnvrt+3,f,c
  2106  001244  506D               	movf	??_vfpfcnvrt+3,w,c
  2107  001246  E106               	bnz	u8060
  2108  001248  0E0A               	movlw	10
  2109  00124A  5C6C               	subwf	??_vfpfcnvrt+2,w,c
  2110  00124C  B0D8               	btfsc	status,0,c
  2111  00124E  D002               	goto	u8060
  2112  001250  0E01               	movlw	1
  2113  001252  D001               	goto	u8070
  2114  001254                     u8060:
  2115  001254  0E00               	movlw	0
  2116  001256                     u8070:
  2117  001256  0100               	movlb	0	; () banked
  2118  001258  6FBC               	movwf	_vfpfcnvrt$644& (0+255),b
  2119  00125A  6BBD               	clrf	(_vfpfcnvrt$644+1)& (0+255),b
  2120                           
  2121                           ; BSR set to: 0
  2122  00125C  51BC               	movf	_vfpfcnvrt$644& (0+255),w,b
  2123  00125E  11BD               	iorwf	(_vfpfcnvrt$644+1)& (0+255),w,b
  2124  001260  A4D8               	btfss	status,2,c
  2125  001262  D7D5               	goto	l5727
  2126  001264                     u8080:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  2130  001264  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2131  001268  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2132  00126C  CFDE FFF6          	movff	postinc2,tblptrl
  2133  001270  CFDD FFF7          	movff	postdec2,tblptrh
  2134  001274                     	if	0	;tblptru may be non-zero
  2135  001274                     	endif
  2136  001274                     	if	0	;tblptru may be non-zero
  2137  001274                     	endif
  2138  001274  0008               	tblrd		*
  2139  001276  50F5               	movf	tablat,w,c
  2140  001278  6E0A               	movwf	tolower@c,c
  2141  00127A  6A0B               	clrf	tolower@c+1,c
  2142  00127C  EC7D  F018         	call	_tolower	;wreg free
  2143  001280  500A               	movf	?_tolower,w,c
  2144  001282  0100               	movlb	0	; () banked
  2145  001284  6FCC               	movwf	vfpfcnvrt@ct& (0+255),b
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  2149  001286  51CC               	movf	vfpfcnvrt@ct& (0+255),w,b
  2150  001288  B4D8               	btfsc	status,2,c
  2151  00128A  D035               	goto	l5745
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  2155  00128C  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2156  001290  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2157  001294  CFDE F06A          	movff	postinc2,??_vfpfcnvrt
  2158  001298  CFDD F06B          	movff	postdec2,??_vfpfcnvrt+1
  2159  00129C  0E01               	movlw	1
  2160  00129E  266A               	addwf	??_vfpfcnvrt,f,c
  2161  0012A0  0E00               	movlw	0
  2162  0012A2  226B               	addwfc	??_vfpfcnvrt+1,f,c
  2163  0012A4  C06A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2164  0012A8  C06B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2165  0012AC                     	if	0	;tblptru may be non-zero
  2166  0012AC                     	endif
  2167  0012AC                     	if	0	;tblptru may be non-zero
  2168  0012AC                     	endif
  2169  0012AC  0008               	tblrd		*
  2170  0012AE  50F5               	movf	tablat,w,c
  2171  0012B0  6E0A               	movwf	tolower@c,c
  2172  0012B2  6A0B               	clrf	tolower@c+1,c
  2173  0012B4  EC7D  F018         	call	_tolower	;wreg free
  2174  0012B8  500A               	movf	?_tolower,w,c
  2175  0012BA  0100               	movlb	0	; () banked
  2176  0012BC  6FCD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2180  0012BE  51CD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2181  0012C0  B4D8               	btfsc	status,2,c
  2182  0012C2  D019               	goto	l5745
  2183                           
  2184                           ; BSR set to: 0
  2185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2186  0012C4  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2187  0012C8  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2188  0012CC  CFDE F06A          	movff	postinc2,??_vfpfcnvrt
  2189  0012D0  CFDD F06B          	movff	postdec2,??_vfpfcnvrt+1
  2190  0012D4  0E02               	movlw	2
  2191  0012D6  266A               	addwf	??_vfpfcnvrt,f,c
  2192  0012D8  0E00               	movlw	0
  2193  0012DA  226B               	addwfc	??_vfpfcnvrt+1,f,c
  2194  0012DC  C06A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2195  0012E0  C06B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2196  0012E4                     	if	0	;tblptru may be non-zero
  2197  0012E4                     	endif
  2198  0012E4                     	if	0	;tblptru may be non-zero
  2199  0012E4                     	endif
  2200  0012E4  0008               	tblrd		*
  2201  0012E6  50F5               	movf	tablat,w,c
  2202  0012E8  6E0A               	movwf	tolower@c,c
  2203  0012EA  6A0B               	clrf	tolower@c+1,c
  2204  0012EC  EC7D  F018         	call	_tolower	;wreg free
  2205  0012F0  500A               	movf	?_tolower,w,c
  2206  0012F2  0100               	movlb	0	; () banked
  2207  0012F4  6FCE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2208  0012F6                     l5745:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2212  0012F6  0E66               	movlw	102
  2213  0012F8  19CC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2214  0012FA  A4D8               	btfss	status,2,c
  2215  0012FC  D03F               	goto	l5757
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2219  0012FE  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2220  001302  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2221  001306  CFDE FFF6          	movff	postinc2,tblptrl
  2222  00130A  CFDD FFF7          	movff	postdec2,tblptrh
  2223  00130E                     	if	0	;tblptru may be non-zero
  2224  00130E                     	endif
  2225  00130E                     	if	0	;tblptru may be non-zero
  2226  00130E                     	endif
  2227  00130E  0008               	tblrd		*
  2228  001310  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2229                           
  2230                           ; BSR set to: 0
  2231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2232  001314  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2233  001318  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2234  00131C  2ADE               	incf	postinc2,f,c
  2235  00131E  0E00               	movlw	0
  2236  001320  22DD               	addwfc	postdec2,f,c
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2240  001322  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2241  001326  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2242  00132A  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2243  00132E  0E04               	movlw	4
  2244  001330  26DE               	addwf	postinc2,f,c
  2245  001332  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2246  001336  0E00               	movlw	0
  2247  001338  22DD               	addwfc	postdec2,f,c
  2248  00133A  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2249  00133E  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2250  001342  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2251  001346  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2252  00134A  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2253  00134E  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2254  001352                     l5753:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2258  001352  C064  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  2259  001356  C065  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2260  00135A  C0C8  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  2261  00135E  C0C9  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2262  001362  C0CA  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2263  001366  C0CB  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2264  00136A  C0CF  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  2265  00136E  EC2E  F003         	call	_efgtoa	;wreg free
  2266  001372  C058  F064         	movff	?_efgtoa,?_vfpfcnvrt
  2267  001376  C059  F065         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2268  00137A  0012               	return	
  2269  00137C                     l5757:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2273  00137C  0ECC               	movlw	low vfpfcnvrt@ct
  2274  00137E  6E04               	movwf	strncmp@_l,c
  2275  001380  0E00               	movlw	high vfpfcnvrt@ct
  2276  001382  6E05               	movwf	strncmp@_l+1,c
  2277  001384  0E54               	movlw	low STR_11
  2278  001386  6E06               	movwf	strncmp@_r,c
  2279  001388  0E06               	movlw	high STR_11
  2280  00138A  6E07               	movwf	strncmp@_r+1,c
  2281  00138C  0E00               	movlw	0
  2282  00138E  6E09               	movwf	strncmp@n+1,c
  2283  001390  0E02               	movlw	2
  2284  001392  6E08               	movwf	strncmp@n,c
  2285  001394  EC4F  F013         	call	_strncmp	;wreg free
  2286  001398  5004               	movf	?_strncmp,w,c
  2287  00139A  1005               	iorwf	?_strncmp+1,w,c
  2288  00139C  A4D8               	btfss	status,2,c
  2289  00139E  D056               	goto	l5773
  2290                           
  2291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2292  0013A0  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2293  0013A4  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2294  0013A8  CFDE F06A          	movff	postinc2,??_vfpfcnvrt
  2295  0013AC  CFDD F06B          	movff	postdec2,??_vfpfcnvrt+1
  2296  0013B0  0E01               	movlw	1
  2297  0013B2  266A               	addwf	??_vfpfcnvrt,f,c
  2298  0013B4  0E00               	movlw	0
  2299  0013B6  226B               	addwfc	??_vfpfcnvrt+1,f,c
  2300  0013B8  C06A  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2301  0013BC  C06B  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2302  0013C0                     	if	0	;tblptru may be non-zero
  2303  0013C0                     	endif
  2304  0013C0                     	if	0	;tblptru may be non-zero
  2305  0013C0                     	endif
  2306  0013C0  0008               	tblrd		*
  2307  0013C2  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2308  0013C6  0EBF               	movlw	191
  2309  0013C8  6E6A               	movwf	??_vfpfcnvrt& (0+255),c
  2310  0013CA  0EFF               	movlw	255
  2311  0013CC  6E6B               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2312  0013CE  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2313  0013D2  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  0013D6  CFDE FFF6          	movff	postinc2,tblptrl
  2315  0013DA  CFDD FFF7          	movff	postdec2,tblptrh
  2316  0013DE                     	if	0	;tblptru may be non-zero
  2317  0013DE                     	endif
  2318  0013DE                     	if	0	;tblptru may be non-zero
  2319  0013DE                     	endif
  2320  0013DE  0008               	tblrd		*
  2321  0013E0  50F5               	movf	tablat,w,c
  2322  0013E2  6E6C               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2323  0013E4  6A6D               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2324  0013E6  506A               	movf	??_vfpfcnvrt,w,c
  2325  0013E8  266C               	addwf	??_vfpfcnvrt+2,f,c
  2326  0013EA  506B               	movf	??_vfpfcnvrt+1,w,c
  2327  0013EC  226D               	addwfc	??_vfpfcnvrt+3,f,c
  2328  0013EE  506D               	movf	??_vfpfcnvrt+3,w,c
  2329  0013F0  E106               	bnz	u8130
  2330  0013F2  0E1A               	movlw	26
  2331  0013F4  5C6C               	subwf	??_vfpfcnvrt+2,w,c
  2332  0013F6  B0D8               	btfsc	status,0,c
  2333  0013F8  D002               	goto	u8130
  2334  0013FA  0E01               	movlw	1
  2335  0013FC  D001               	goto	u8140
  2336  0013FE                     u8130:
  2337  0013FE  0E00               	movlw	0
  2338  001400                     u8140:
  2339  001400  0100               	movlb	0	; () banked
  2340  001402  6FBE               	movwf	_vfpfcnvrt$648& (0+255),b
  2341  001404  6BBF               	clrf	(_vfpfcnvrt$648+1)& (0+255),b
  2342                           
  2343                           ; BSR set to: 0
  2344  001406  51BE               	movf	_vfpfcnvrt$648& (0+255),w,b
  2345  001408  11BF               	iorwf	(_vfpfcnvrt$648+1)& (0+255),w,b
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2349                           
  2350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2354  00140A  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2355  00140E  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2356  001412  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2357  001416  0E04               	movlw	4
  2358  001418  26DE               	addwf	postinc2,f,c
  2359  00141A  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2360  00141E  0E00               	movlw	0
  2361  001420  22DD               	addwfc	postdec2,f,c
  2362  001422  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2363  001426  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2364  00142A  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2365  00142E  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2366  001432  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2367  001436  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2371                           
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2373  00143A  0E02               	movlw	2
  2374  00143C  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2375  001440  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2376  001444  26DE               	addwf	postinc2,f,c
  2377  001446  0E00               	movlw	0
  2378  001448  22DD               	addwfc	postdec2,f,c
  2379  00144A  D783               	goto	l5753
  2380  00144C                     l5773:
  2381                           
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2383  00144C  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2384  001450  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2385  001454  CFDE FFF6          	movff	postinc2,tblptrl
  2386  001458  CFDD FFF7          	movff	postdec2,tblptrh
  2387  00145C                     	if	0	;tblptru may be non-zero
  2388  00145C                     	endif
  2389  00145C                     	if	0	;tblptru may be non-zero
  2390  00145C                     	endif
  2391  00145C  0008               	tblrd		*
  2392  00145E  50F5               	movf	tablat,w,c
  2393  001460  0A75               	xorlw	117
  2394  001462  A4D8               	btfss	status,2,c
  2395  001464  D041               	goto	l5781
  2396                           
  2397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2398  001466  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2399  00146A  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2400  00146E  2ADE               	incf	postinc2,f,c
  2401  001470  0E00               	movlw	0
  2402  001472  22DD               	addwfc	postdec2,f,c
  2403                           
  2404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2405  001474  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2406  001478  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2407  00147C  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2408  001480  0E02               	movlw	2
  2409  001482  26DE               	addwf	postinc2,f,c
  2410  001484  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2411  001488  0E00               	movlw	0
  2412  00148A  22DD               	addwfc	postdec2,f,c
  2413  00148C  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2414  001490  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2415  001494  CFDE F06C          	movff	postinc2,??_vfpfcnvrt+2
  2416  001498  CFDD F06D          	movff	postdec2,??_vfpfcnvrt+3
  2417  00149C  C06C  F0C0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2418  0014A0  C06D  F0C1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2419  0014A4  0100               	movlb	0	; () banked
  2420  0014A6  6BC2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2421  0014A8  6BC3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2422  0014AA  6BC4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2423  0014AC  6BC5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2424  0014AE  6BC6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2425  0014B0  6BC7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2429  0014B2  C064  F01F         	movff	vfpfcnvrt@fp,utoa@fp
  2430  0014B6  C065  F020         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2431  0014BA  C0C0  F021         	movff	vfpfcnvrt@llu,utoa@d
  2432  0014BE  C0C1  F022         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2433  0014C2  C0C2  F023         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2434  0014C6  C0C3  F024         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2435  0014CA  C0C4  F025         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2436  0014CE  C0C5  F026         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2437  0014D2  C0C6  F027         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2438  0014D6  C0C7  F028         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2439  0014DA  EC38  F011         	call	_utoa	;wreg free
  2440  0014DE  C01F  F064         	movff	?_utoa,?_vfpfcnvrt
  2441  0014E2  C020  F065         	movff	?_utoa+1,?_vfpfcnvrt+1
  2442  0014E6  0012               	return	
  2443  0014E8                     l5781:
  2444                           
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  2446  0014E8  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2447  0014EC  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2448  0014F0  CFDE F004          	movff	postinc2,strncmp@_l
  2449  0014F4  CFDD F005          	movff	postdec2,strncmp@_l+1
  2450  0014F8  0E57               	movlw	low STR_16
  2451  0014FA  6E06               	movwf	strncmp@_r,c
  2452  0014FC  0E06               	movlw	high STR_16
  2453  0014FE  6E07               	movwf	strncmp@_r+1,c
  2454  001500  0E00               	movlw	0
  2455  001502  6E09               	movwf	strncmp@n+1,c
  2456  001504  0E02               	movlw	2
  2457  001506  6E08               	movwf	strncmp@n,c
  2458  001508  EC4F  F013         	call	_strncmp	;wreg free
  2459  00150C  5004               	movf	?_strncmp,w,c
  2460  00150E  1005               	iorwf	?_strncmp+1,w,c
  2461  001510  A4D8               	btfss	status,2,c
  2462  001512  D02A               	goto	l5789
  2463                           
  2464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  2465  001514  0E02               	movlw	2
  2466  001516  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  00151A  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  00151E  26DE               	addwf	postinc2,f,c
  2469  001520  0E00               	movlw	0
  2470  001522  22DD               	addwfc	postdec2,f,c
  2471                           
  2472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  2473  001524  C068  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2474  001528  C069  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2475  00152C  CFDF F06A          	movff	indf2,??_vfpfcnvrt
  2476  001530  0E04               	movlw	4
  2477  001532  26DE               	addwf	postinc2,f,c
  2478  001534  CFDF F06B          	movff	indf2,??_vfpfcnvrt+1
  2479  001538  0E00               	movlw	0
  2480  00153A  22DD               	addwfc	postdec2,f,c
  2481  00153C  C06A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2482  001540  C06B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2483  001544  CFDE F06C          	movff	postinc2,??_vfpfcnvrt+2
  2484  001548  CFDE F06D          	movff	postinc2,??_vfpfcnvrt+3
  2485  00154C  CFDE F06E          	movff	postinc2,??_vfpfcnvrt+4
  2486  001550  CFDE F06F          	movff	postinc2,??_vfpfcnvrt+5
  2487  001554  506C               	movf	??_vfpfcnvrt+2,w,c
  2488  001556  0100               	movlb	0	; () banked
  2489  001558  6FC0               	movwf	vfpfcnvrt@llu& (0+255),b
  2490  00155A  506D               	movf	??_vfpfcnvrt+3,w,c
  2491  00155C  6FC1               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  2492  00155E  506E               	movf	??_vfpfcnvrt+4,w,c
  2493  001560  6FC2               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  2494  001562  506F               	movf	??_vfpfcnvrt+5,w,c
  2495  001564  6FC3               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  2496  001566  D7A1               	goto	L2
  2497  001568                     l5789:
  2498                           
  2499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2500  001568  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2501  00156C  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2502  001570  CFDE FFF6          	movff	postinc2,tblptrl
  2503  001574  CFDD FFF7          	movff	postdec2,tblptrh
  2504  001578                     	if	0	;tblptru may be non-zero
  2505  001578                     	endif
  2506  001578                     	if	0	;tblptru may be non-zero
  2507  001578                     	endif
  2508  001578  0008               	tblrd		*
  2509  00157A  50F5               	movf	tablat,w,c
  2510  00157C  0A25               	xorlw	37
  2511  00157E  A4D8               	btfss	status,2,c
  2512  001580  D016               	goto	l5799
  2513                           
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2515  001582  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2516  001586  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2517  00158A  2ADE               	incf	postinc2,f,c
  2518  00158C  0E00               	movlw	0
  2519  00158E  22DD               	addwfc	postdec2,f,c
  2520                           
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2522  001590  0E00               	movlw	0
  2523  001592  6E05               	movwf	fputc@c+1,c
  2524  001594  0E25               	movlw	37
  2525  001596  6E04               	movwf	fputc@c,c
  2526  001598  C064  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2527  00159C  C065  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2528  0015A0  EC11  F016         	call	_fputc	;wreg free
  2529  0015A4                     l5795:
  2530                           
  2531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2532  0015A4  0E00               	movlw	0
  2533  0015A6  6E65               	movwf	?_vfpfcnvrt+1,c
  2534  0015A8  0E01               	movlw	1
  2535  0015AA  6E64               	movwf	?_vfpfcnvrt,c
  2536  0015AC  0012               	return	
  2537  0015AE                     l5799:
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2540  0015AE  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2541  0015B2  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2542  0015B6  2ADE               	incf	postinc2,f,c
  2543  0015B8  0E00               	movlw	0
  2544  0015BA  22DD               	addwfc	postdec2,f,c
  2545                           
  2546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2547  0015BC  0E00               	movlw	0
  2548  0015BE  6E65               	movwf	?_vfpfcnvrt+1,c
  2549  0015C0  0E00               	movlw	0
  2550  0015C2  6E64               	movwf	?_vfpfcnvrt,c
  2551  0015C4  0012               	return	
  2552  0015C6                     l5805:
  2553                           
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2555  0015C6  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2556  0015CA  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2557  0015CE  CFDE FFF6          	movff	postinc2,tblptrl
  2558  0015D2  CFDD FFF7          	movff	postdec2,tblptrh
  2559  0015D6                     	if	0	;tblptru may be non-zero
  2560  0015D6                     	endif
  2561  0015D6                     	if	0	;tblptru may be non-zero
  2562  0015D6                     	endif
  2563  0015D6  0008               	tblrd		*
  2564  0015D8  50F5               	movf	tablat,w,c
  2565  0015DA  6E04               	movwf	fputc@c,c
  2566  0015DC  6A05               	clrf	fputc@c+1,c
  2567  0015DE  C064  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2568  0015E2  C065  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2569  0015E6  EC11  F016         	call	_fputc	;wreg free
  2570                           
  2571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2572  0015EA  C066  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2573  0015EE  C067  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2574  0015F2  2ADE               	incf	postinc2,f,c
  2575  0015F4  0E00               	movlw	0
  2576  0015F6  22DD               	addwfc	postdec2,f,c
  2577  0015F8  D7D5               	goto	l5795
  2578  0015FA                     __end_of_vfpfcnvrt:
  2579                           	opt callstack 0
  2580                           
  2581 ;; *************** function _utoa *****************
  2582 ;; Defined at:
  2583 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2586 ;;		 -> sprintf@f(6), 
  2587 ;;  d               8   32[COMRAM] unsigned long long 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  n               8   52[COMRAM] unsigned long long 
  2590 ;;  i               2   60[COMRAM] int 
  2591 ;;  w               2   50[COMRAM] int 
  2592 ;;  p               2   48[COMRAM] int 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2   30[COMRAM] int 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2602 ;;      Params:        10       0       0       0       0       0       0
  2603 ;;      Locals:        14       0       0       0       0       0       0
  2604 ;;      Temps:          8       0       0       0       0       0       0
  2605 ;;      Totals:        32       0       0       0       0       0       0
  2606 ;;Total ram usage:       32 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    6
  2609 ;; This function calls:
  2610 ;;		___lodiv
  2611 ;;		___lomod
  2612 ;;		_pad
  2613 ;; This function is called by:
  2614 ;;		_vfpfcnvrt
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text6
  2619  002270                     __ptext6:
  2620                           	opt callstack 0
  2621  002270                     _utoa:
  2622                           	opt callstack 21
  2623                           
  2624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  2625                           
  2626                           ;incstack = 0
  2627  002270  AE77               	btfss	_prec+1,7,c
  2628                           
  2629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  2630  002272  9278               	bcf	_flags,1,c
  2631                           
  2632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  2633  002274  BE77               	btfsc	_prec+1,7,c
  2634  002276  D005               	goto	u7760
  2635  002278  5077               	movf	_prec+1,w,c
  2636  00227A  E108               	bnz	l249
  2637  00227C  0476               	decf	_prec,w,c
  2638  00227E  B0D8               	btfsc	status,0,c
  2639  002280  D005               	goto	l249
  2640  002282                     u7760:
  2641  002282  0E00               	movlw	0
  2642  002284  6E32               	movwf	utoa@p+1,c
  2643  002286  0E01               	movlw	1
  2644  002288  6E31               	movwf	utoa@p,c
  2645  00228A  D004               	goto	l251
  2646  00228C                     l249:
  2647  00228C  C076  F031         	movff	_prec,utoa@p
  2648  002290  C077  F032         	movff	_prec+1,utoa@p+1
  2649  002294                     l251:
  2650                           
  2651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  2652  002294  C0F6  F033         	movff	_width,utoa@w
  2653  002298  C0F7  F034         	movff	_width+1,utoa@w+1
  2654                           
  2655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  2656  00229C  C021  F035         	movff	utoa@d,utoa@n
  2657  0022A0  C022  F036         	movff	utoa@d+1,utoa@n+1
  2658  0022A4  C023  F037         	movff	utoa@d+2,utoa@n+2
  2659  0022A8  C024  F038         	movff	utoa@d+3,utoa@n+3
  2660  0022AC  C025  F039         	movff	utoa@d+4,utoa@n+4
  2661  0022B0  C026  F03A         	movff	utoa@d+5,utoa@n+5
  2662  0022B4  C027  F03B         	movff	utoa@d+6,utoa@n+6
  2663  0022B8  C028  F03C         	movff	utoa@d+7,utoa@n+7
  2664                           
  2665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  2666  0022BC  0E00               	movlw	0
  2667  0022BE  6E3E               	movwf	utoa@i+1,c
  2668  0022C0  0E4F               	movlw	79
  2669  0022C2  6E3D               	movwf	utoa@i,c
  2670                           
  2671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  2672  0022C4  0E00               	movlw	0
  2673  0022C6  0101               	movlb	1	; () banked
  2674  0022C8  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2675                           
  2676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2677  0022CA  D076               	goto	l5581
  2678  0022CC                     l5571:
  2679                           
  2680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  2681  0022CC  063D               	decf	utoa@i,f,c
  2682  0022CE  A0D8               	btfss	status,0,c
  2683  0022D0  063E               	decf	utoa@i+1,f,c
  2684                           
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  2686  0022D2  0E00               	movlw	low _dbuf
  2687  0022D4  243D               	addwf	utoa@i,w,c
  2688  0022D6  6ED9               	movwf	fsr2l,c
  2689  0022D8  0E01               	movlw	high _dbuf
  2690  0022DA  203E               	addwfc	utoa@i+1,w,c
  2691  0022DC  6EDA               	movwf	fsr2h,c
  2692  0022DE  C035  F004         	movff	utoa@n,___lomod@dividend
  2693  0022E2  C036  F005         	movff	utoa@n+1,___lomod@dividend+1
  2694  0022E6  C037  F006         	movff	utoa@n+2,___lomod@dividend+2
  2695  0022EA  C038  F007         	movff	utoa@n+3,___lomod@dividend+3
  2696  0022EE  C039  F008         	movff	utoa@n+4,___lomod@dividend+4
  2697  0022F2  C03A  F009         	movff	utoa@n+5,___lomod@dividend+5
  2698  0022F6  C03B  F00A         	movff	utoa@n+6,___lomod@dividend+6
  2699  0022FA  C03C  F00B         	movff	utoa@n+7,___lomod@dividend+7
  2700  0022FE  0E0A               	movlw	10
  2701  002300  6E0C               	movwf	___lomod@divisor,c
  2702  002302  0E00               	movlw	0
  2703  002304  6E0D               	movwf	___lomod@divisor+1,c
  2704  002306  0E00               	movlw	0
  2705  002308  6E0E               	movwf	___lomod@divisor+2,c
  2706  00230A  0E00               	movlw	0
  2707  00230C  6E0F               	movwf	___lomod@divisor+3,c
  2708  00230E  0E00               	movlw	0
  2709  002310  6E10               	movwf	___lomod@divisor+4,c
  2710  002312  0E00               	movlw	0
  2711  002314  6E11               	movwf	___lomod@divisor+5,c
  2712  002316  0E00               	movlw	0
  2713  002318  6E12               	movwf	___lomod@divisor+6,c
  2714  00231A  0E00               	movlw	0
  2715  00231C  6E13               	movwf	___lomod@divisor+7,c
  2716  00231E  ECBA  F015         	call	___lomod	;wreg free
  2717  002322  C004  F029         	movff	?___lomod,??_utoa
  2718  002326  C005  F02A         	movff	?___lomod+1,??_utoa+1
  2719  00232A  C006  F02B         	movff	?___lomod+2,??_utoa+2
  2720  00232E  C007  F02C         	movff	?___lomod+3,??_utoa+3
  2721  002332  C008  F02D         	movff	?___lomod+4,??_utoa+4
  2722  002336  C009  F02E         	movff	?___lomod+5,??_utoa+5
  2723  00233A  C00A  F02F         	movff	?___lomod+6,??_utoa+6
  2724  00233E  C00B  F030         	movff	?___lomod+7,??_utoa+7
  2725  002342  5029               	movf	??_utoa,w,c
  2726  002344  0F30               	addlw	48
  2727  002346  6EDF               	movwf	indf2,c
  2728                           
  2729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  2730  002348  0631               	decf	utoa@p,f,c
  2731  00234A  A0D8               	btfss	status,0,c
  2732  00234C  0632               	decf	utoa@p+1,f,c
  2733                           
  2734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  2735  00234E  0633               	decf	utoa@w,f,c
  2736  002350  A0D8               	btfss	status,0,c
  2737  002352  0634               	decf	utoa@w+1,f,c
  2738                           
  2739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  2740  002354  C035  F004         	movff	utoa@n,___lodiv@dividend
  2741  002358  C036  F005         	movff	utoa@n+1,___lodiv@dividend+1
  2742  00235C  C037  F006         	movff	utoa@n+2,___lodiv@dividend+2
  2743  002360  C038  F007         	movff	utoa@n+3,___lodiv@dividend+3
  2744  002364  C039  F008         	movff	utoa@n+4,___lodiv@dividend+4
  2745  002368  C03A  F009         	movff	utoa@n+5,___lodiv@dividend+5
  2746  00236C  C03B  F00A         	movff	utoa@n+6,___lodiv@dividend+6
  2747  002370  C03C  F00B         	movff	utoa@n+7,___lodiv@dividend+7
  2748  002374  0E0A               	movlw	10
  2749  002376  6E0C               	movwf	___lodiv@divisor,c
  2750  002378  0E00               	movlw	0
  2751  00237A  6E0D               	movwf	___lodiv@divisor+1,c
  2752  00237C  0E00               	movlw	0
  2753  00237E  6E0E               	movwf	___lodiv@divisor+2,c
  2754  002380  0E00               	movlw	0
  2755  002382  6E0F               	movwf	___lodiv@divisor+3,c
  2756  002384  0E00               	movlw	0
  2757  002386  6E10               	movwf	___lodiv@divisor+4,c
  2758  002388  0E00               	movlw	0
  2759  00238A  6E11               	movwf	___lodiv@divisor+5,c
  2760  00238C  0E00               	movlw	0
  2761  00238E  6E12               	movwf	___lodiv@divisor+6,c
  2762  002390  0E00               	movlw	0
  2763  002392  6E13               	movwf	___lodiv@divisor+7,c
  2764  002394  EC2A  F014         	call	___lodiv	;wreg free
  2765  002398  C004  F035         	movff	?___lodiv,utoa@n
  2766  00239C  C005  F036         	movff	?___lodiv+1,utoa@n+1
  2767  0023A0  C006  F037         	movff	?___lodiv+2,utoa@n+2
  2768  0023A4  C007  F038         	movff	?___lodiv+3,utoa@n+3
  2769  0023A8  C008  F039         	movff	?___lodiv+4,utoa@n+4
  2770  0023AC  C009  F03A         	movff	?___lodiv+5,utoa@n+5
  2771  0023B0  C00A  F03B         	movff	?___lodiv+6,utoa@n+6
  2772  0023B4  C00B  F03C         	movff	?___lodiv+7,utoa@n+7
  2773  0023B8                     l5581:
  2774                           
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2776  0023B8  503D               	movf	utoa@i,w,c
  2777  0023BA  103E               	iorwf	utoa@i+1,w,c
  2778  0023BC  B4D8               	btfsc	status,2,c
  2779  0023BE  D01A               	goto	u7810
  2780  0023C0  5035               	movf	utoa@n,w,c
  2781  0023C2  1036               	iorwf	utoa@n+1,w,c
  2782  0023C4  1037               	iorwf	utoa@n+2,w,c
  2783  0023C6  1038               	iorwf	utoa@n+3,w,c
  2784  0023C8  1039               	iorwf	utoa@n+4,w,c
  2785  0023CA  103A               	iorwf	utoa@n+5,w,c
  2786  0023CC  103B               	iorwf	utoa@n+6,w,c
  2787  0023CE  103C               	iorwf	utoa@n+7,w,c
  2788  0023D0  A4D8               	btfss	status,2,c
  2789  0023D2  D77C               	goto	l5571
  2790  0023D4  BE32               	btfsc	utoa@p+1,7,c
  2791  0023D6  D005               	goto	u7790
  2792  0023D8  5032               	movf	utoa@p+1,w,c
  2793  0023DA  E102               	bnz	u7791
  2794  0023DC  0431               	decf	utoa@p,w,c
  2795  0023DE  B0D8               	btfsc	status,0,c
  2796  0023E0                     u7791:
  2797  0023E0  D775               	goto	l5571
  2798  0023E2                     u7790:
  2799  0023E2  BE34               	btfsc	utoa@w+1,7,c
  2800  0023E4  D007               	goto	u7810
  2801  0023E6  5034               	movf	utoa@w+1,w,c
  2802  0023E8  E103               	bnz	u7800
  2803  0023EA  0433               	decf	utoa@w,w,c
  2804  0023EC  A0D8               	btfss	status,0,c
  2805  0023EE  D002               	goto	u7810
  2806  0023F0                     u7800:
  2807  0023F0  B278               	btfsc	_flags,1,c
  2808  0023F2  D76C               	goto	l5571
  2809  0023F4                     u7810:
  2810                           
  2811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2812  0023F4  C01F  F014         	movff	utoa@fp,pad@fp
  2813  0023F8  C020  F015         	movff	utoa@fp+1,pad@fp+1
  2814  0023FC  0E00               	movlw	low _dbuf
  2815  0023FE  243D               	addwf	utoa@i,w,c
  2816  002400  6E16               	movwf	pad@buf,c
  2817  002402  0E01               	movlw	high _dbuf
  2818  002404  203E               	addwfc	utoa@i+1,w,c
  2819  002406  6E17               	movwf	pad@buf+1,c
  2820  002408  C033  F018         	movff	utoa@w,pad@p
  2821  00240C  C034  F019         	movff	utoa@w+1,pad@p+1
  2822  002410  EC61  F016         	call	_pad	;wreg free
  2823  002414  C014  F01F         	movff	?_pad,?_utoa
  2824  002418  C015  F020         	movff	?_pad+1,?_utoa+1
  2825  00241C  0012               	return		;funcret
  2826  00241E                     __end_of_utoa:
  2827                           	opt callstack 0
  2828                           
  2829 ;; *************** function ___lomod *****************
  2830 ;; Defined at:
  2831 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  dividend        8    3[COMRAM] unsigned long long 
  2834 ;;  divisor         8   11[COMRAM] unsigned long long 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  counter         1   19[COMRAM] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  8    3[COMRAM] unsigned long long 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2846 ;;      Params:        16       0       0       0       0       0       0
  2847 ;;      Locals:         1       0       0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0
  2849 ;;      Totals:        17       0       0       0       0       0       0
  2850 ;;Total ram usage:       17 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    2
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_utoa
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text7
  2861  002B74                     __ptext7:
  2862                           	opt callstack 0
  2863  002B74                     ___lomod:
  2864                           	opt callstack 24
  2865                           
  2866                           ;incstack = 0
  2867  002B74  500C               	movf	___lomod@divisor,w,c
  2868  002B76  100D               	iorwf	___lomod@divisor+1,w,c
  2869  002B78  100E               	iorwf	___lomod@divisor+2,w,c
  2870  002B7A  100F               	iorwf	___lomod@divisor+3,w,c
  2871  002B7C  1010               	iorwf	___lomod@divisor+4,w,c
  2872  002B7E  1011               	iorwf	___lomod@divisor+5,w,c
  2873  002B80  1012               	iorwf	___lomod@divisor+6,w,c
  2874  002B82  1013               	iorwf	___lomod@divisor+7,w,c
  2875  002B84  B4D8               	btfsc	status,2,c
  2876  002B86  D03C               	goto	l765
  2877  002B88  0E01               	movlw	1
  2878  002B8A  6E14               	movwf	___lomod@counter,c
  2879  002B8C  D00A               	goto	l5239
  2880  002B8E                     l5237:
  2881  002B8E  90D8               	bcf	status,0,c
  2882  002B90  360C               	rlcf	___lomod@divisor,f,c
  2883  002B92  360D               	rlcf	___lomod@divisor+1,f,c
  2884  002B94  360E               	rlcf	___lomod@divisor+2,f,c
  2885  002B96  360F               	rlcf	___lomod@divisor+3,f,c
  2886  002B98  3610               	rlcf	___lomod@divisor+4,f,c
  2887  002B9A  3611               	rlcf	___lomod@divisor+5,f,c
  2888  002B9C  3612               	rlcf	___lomod@divisor+6,f,c
  2889  002B9E  3613               	rlcf	___lomod@divisor+7,f,c
  2890  002BA0  2A14               	incf	___lomod@counter,f,c
  2891  002BA2                     l5239:
  2892  002BA2  AE13               	btfss	___lomod@divisor+7,7,c
  2893  002BA4  D7F4               	goto	l5237
  2894  002BA6                     u7190:
  2895  002BA6  500C               	movf	___lomod@divisor,w,c
  2896  002BA8  5C04               	subwf	___lomod@dividend,w,c
  2897  002BAA  500D               	movf	___lomod@divisor+1,w,c
  2898  002BAC  5805               	subwfb	___lomod@dividend+1,w,c
  2899  002BAE  500E               	movf	___lomod@divisor+2,w,c
  2900  002BB0  5806               	subwfb	___lomod@dividend+2,w,c
  2901  002BB2  500F               	movf	___lomod@divisor+3,w,c
  2902  002BB4  5807               	subwfb	___lomod@dividend+3,w,c
  2903  002BB6  5010               	movf	___lomod@divisor+4,w,c
  2904  002BB8  5808               	subwfb	___lomod@dividend+4,w,c
  2905  002BBA  5011               	movf	___lomod@divisor+5,w,c
  2906  002BBC  5809               	subwfb	___lomod@dividend+5,w,c
  2907  002BBE  5012               	movf	___lomod@divisor+6,w,c
  2908  002BC0  580A               	subwfb	___lomod@dividend+6,w,c
  2909  002BC2  5013               	movf	___lomod@divisor+7,w,c
  2910  002BC4  580B               	subwfb	___lomod@dividend+7,w,c
  2911  002BC6  A0D8               	btfss	status,0,c
  2912  002BC8  D010               	goto	l5245
  2913  002BCA  500C               	movf	___lomod@divisor,w,c
  2914  002BCC  5E04               	subwf	___lomod@dividend,f,c
  2915  002BCE  500D               	movf	___lomod@divisor+1,w,c
  2916  002BD0  5A05               	subwfb	___lomod@dividend+1,f,c
  2917  002BD2  500E               	movf	___lomod@divisor+2,w,c
  2918  002BD4  5A06               	subwfb	___lomod@dividend+2,f,c
  2919  002BD6  500F               	movf	___lomod@divisor+3,w,c
  2920  002BD8  5A07               	subwfb	___lomod@dividend+3,f,c
  2921  002BDA  5010               	movf	___lomod@divisor+4,w,c
  2922  002BDC  5A08               	subwfb	___lomod@dividend+4,f,c
  2923  002BDE  5011               	movf	___lomod@divisor+5,w,c
  2924  002BE0  5A09               	subwfb	___lomod@dividend+5,f,c
  2925  002BE2  5012               	movf	___lomod@divisor+6,w,c
  2926  002BE4  5A0A               	subwfb	___lomod@dividend+6,f,c
  2927  002BE6  5013               	movf	___lomod@divisor+7,w,c
  2928  002BE8  5A0B               	subwfb	___lomod@dividend+7,f,c
  2929  002BEA                     l5245:
  2930  002BEA  90D8               	bcf	status,0,c
  2931  002BEC  3213               	rrcf	___lomod@divisor+7,f,c
  2932  002BEE  3212               	rrcf	___lomod@divisor+6,f,c
  2933  002BF0  3211               	rrcf	___lomod@divisor+5,f,c
  2934  002BF2  3210               	rrcf	___lomod@divisor+4,f,c
  2935  002BF4  320F               	rrcf	___lomod@divisor+3,f,c
  2936  002BF6  320E               	rrcf	___lomod@divisor+2,f,c
  2937  002BF8  320D               	rrcf	___lomod@divisor+1,f,c
  2938  002BFA  320C               	rrcf	___lomod@divisor,f,c
  2939  002BFC  2E14               	decfsz	___lomod@counter,f,c
  2940  002BFE  D7D3               	goto	u7190
  2941  002C00                     l765:
  2942  002C00  C004  F004         	movff	___lomod@dividend,?___lomod
  2943  002C04  C005  F005         	movff	___lomod@dividend+1,?___lomod+1
  2944  002C08  C006  F006         	movff	___lomod@dividend+2,?___lomod+2
  2945  002C0C  C007  F007         	movff	___lomod@dividend+3,?___lomod+3
  2946  002C10  C008  F008         	movff	___lomod@dividend+4,?___lomod+4
  2947  002C14  C009  F009         	movff	___lomod@dividend+5,?___lomod+5
  2948  002C18  C00A  F00A         	movff	___lomod@dividend+6,?___lomod+6
  2949  002C1C  C00B  F00B         	movff	___lomod@dividend+7,?___lomod+7
  2950  002C20  0012               	return		;funcret
  2951  002C22                     __end_of___lomod:
  2952                           	opt callstack 0
  2953                           
  2954 ;; *************** function ___lodiv *****************
  2955 ;; Defined at:
  2956 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  dividend        8    3[COMRAM] unsigned long long 
  2959 ;;  divisor         8   11[COMRAM] unsigned long long 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  quotient        8   19[COMRAM] unsigned long long 
  2962 ;;  counter         1   27[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  8    3[COMRAM] unsigned long long 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2972 ;;      Params:        16       0       0       0       0       0       0
  2973 ;;      Locals:         9       0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0
  2975 ;;      Totals:        25       0       0       0       0       0       0
  2976 ;;Total ram usage:       25 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    2
  2979 ;; This function calls:
  2980 ;;		Nothing
  2981 ;; This function is called by:
  2982 ;;		_utoa
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text8
  2987  002854                     __ptext8:
  2988                           	opt callstack 0
  2989  002854                     ___lodiv:
  2990                           	opt callstack 24
  2991                           
  2992                           ;incstack = 0
  2993  002854  EE20  F014         	lfsr	2,___lodiv@quotient
  2994  002858  0E07               	movlw	7
  2995  00285A                     u7141:
  2996  00285A  6ADE               	clrf	postinc2,c
  2997  00285C  06E8               	decf	wreg,f,c
  2998  00285E  E2FD               	bc	u7141
  2999  002860  500C               	movf	___lodiv@divisor,w,c
  3000  002862  100D               	iorwf	___lodiv@divisor+1,w,c
  3001  002864  100E               	iorwf	___lodiv@divisor+2,w,c
  3002  002866  100F               	iorwf	___lodiv@divisor+3,w,c
  3003  002868  1010               	iorwf	___lodiv@divisor+4,w,c
  3004  00286A  1011               	iorwf	___lodiv@divisor+5,w,c
  3005  00286C  1012               	iorwf	___lodiv@divisor+6,w,c
  3006  00286E  1013               	iorwf	___lodiv@divisor+7,w,c
  3007  002870  B4D8               	btfsc	status,2,c
  3008  002872  D046               	goto	l755
  3009  002874  0E01               	movlw	1
  3010  002876  6E1C               	movwf	___lodiv@counter,c
  3011  002878  D00A               	goto	l5219
  3012  00287A                     l5217:
  3013  00287A  90D8               	bcf	status,0,c
  3014  00287C  360C               	rlcf	___lodiv@divisor,f,c
  3015  00287E  360D               	rlcf	___lodiv@divisor+1,f,c
  3016  002880  360E               	rlcf	___lodiv@divisor+2,f,c
  3017  002882  360F               	rlcf	___lodiv@divisor+3,f,c
  3018  002884  3610               	rlcf	___lodiv@divisor+4,f,c
  3019  002886  3611               	rlcf	___lodiv@divisor+5,f,c
  3020  002888  3612               	rlcf	___lodiv@divisor+6,f,c
  3021  00288A  3613               	rlcf	___lodiv@divisor+7,f,c
  3022  00288C  2A1C               	incf	___lodiv@counter,f,c
  3023  00288E                     l5219:
  3024  00288E  AE13               	btfss	___lodiv@divisor+7,7,c
  3025  002890  D7F4               	goto	l5217
  3026  002892                     u7160:
  3027  002892  90D8               	bcf	status,0,c
  3028  002894  3614               	rlcf	___lodiv@quotient,f,c
  3029  002896  3615               	rlcf	___lodiv@quotient+1,f,c
  3030  002898  3616               	rlcf	___lodiv@quotient+2,f,c
  3031  00289A  3617               	rlcf	___lodiv@quotient+3,f,c
  3032  00289C  3618               	rlcf	___lodiv@quotient+4,f,c
  3033  00289E  3619               	rlcf	___lodiv@quotient+5,f,c
  3034  0028A0  361A               	rlcf	___lodiv@quotient+6,f,c
  3035  0028A2  361B               	rlcf	___lodiv@quotient+7,f,c
  3036  0028A4  500C               	movf	___lodiv@divisor,w,c
  3037  0028A6  5C04               	subwf	___lodiv@dividend,w,c
  3038  0028A8  500D               	movf	___lodiv@divisor+1,w,c
  3039  0028AA  5805               	subwfb	___lodiv@dividend+1,w,c
  3040  0028AC  500E               	movf	___lodiv@divisor+2,w,c
  3041  0028AE  5806               	subwfb	___lodiv@dividend+2,w,c
  3042  0028B0  500F               	movf	___lodiv@divisor+3,w,c
  3043  0028B2  5807               	subwfb	___lodiv@dividend+3,w,c
  3044  0028B4  5010               	movf	___lodiv@divisor+4,w,c
  3045  0028B6  5808               	subwfb	___lodiv@dividend+4,w,c
  3046  0028B8  5011               	movf	___lodiv@divisor+5,w,c
  3047  0028BA  5809               	subwfb	___lodiv@dividend+5,w,c
  3048  0028BC  5012               	movf	___lodiv@divisor+6,w,c
  3049  0028BE  580A               	subwfb	___lodiv@dividend+6,w,c
  3050  0028C0  5013               	movf	___lodiv@divisor+7,w,c
  3051  0028C2  580B               	subwfb	___lodiv@dividend+7,w,c
  3052  0028C4  A0D8               	btfss	status,0,c
  3053  0028C6  D011               	goto	l5229
  3054  0028C8  500C               	movf	___lodiv@divisor,w,c
  3055  0028CA  5E04               	subwf	___lodiv@dividend,f,c
  3056  0028CC  500D               	movf	___lodiv@divisor+1,w,c
  3057  0028CE  5A05               	subwfb	___lodiv@dividend+1,f,c
  3058  0028D0  500E               	movf	___lodiv@divisor+2,w,c
  3059  0028D2  5A06               	subwfb	___lodiv@dividend+2,f,c
  3060  0028D4  500F               	movf	___lodiv@divisor+3,w,c
  3061  0028D6  5A07               	subwfb	___lodiv@dividend+3,f,c
  3062  0028D8  5010               	movf	___lodiv@divisor+4,w,c
  3063  0028DA  5A08               	subwfb	___lodiv@dividend+4,f,c
  3064  0028DC  5011               	movf	___lodiv@divisor+5,w,c
  3065  0028DE  5A09               	subwfb	___lodiv@dividend+5,f,c
  3066  0028E0  5012               	movf	___lodiv@divisor+6,w,c
  3067  0028E2  5A0A               	subwfb	___lodiv@dividend+6,f,c
  3068  0028E4  5013               	movf	___lodiv@divisor+7,w,c
  3069  0028E6  5A0B               	subwfb	___lodiv@dividend+7,f,c
  3070  0028E8  8014               	bsf	___lodiv@quotient,0,c
  3071  0028EA                     l5229:
  3072  0028EA  90D8               	bcf	status,0,c
  3073  0028EC  3213               	rrcf	___lodiv@divisor+7,f,c
  3074  0028EE  3212               	rrcf	___lodiv@divisor+6,f,c
  3075  0028F0  3211               	rrcf	___lodiv@divisor+5,f,c
  3076  0028F2  3210               	rrcf	___lodiv@divisor+4,f,c
  3077  0028F4  320F               	rrcf	___lodiv@divisor+3,f,c
  3078  0028F6  320E               	rrcf	___lodiv@divisor+2,f,c
  3079  0028F8  320D               	rrcf	___lodiv@divisor+1,f,c
  3080  0028FA  320C               	rrcf	___lodiv@divisor,f,c
  3081  0028FC  2E1C               	decfsz	___lodiv@counter,f,c
  3082  0028FE  D7C9               	goto	u7160
  3083  002900                     l755:
  3084  002900  C014  F004         	movff	___lodiv@quotient,?___lodiv
  3085  002904  C015  F005         	movff	___lodiv@quotient+1,?___lodiv+1
  3086  002908  C016  F006         	movff	___lodiv@quotient+2,?___lodiv+2
  3087  00290C  C017  F007         	movff	___lodiv@quotient+3,?___lodiv+3
  3088  002910  C018  F008         	movff	___lodiv@quotient+4,?___lodiv+4
  3089  002914  C019  F009         	movff	___lodiv@quotient+5,?___lodiv+5
  3090  002918  C01A  F00A         	movff	___lodiv@quotient+6,?___lodiv+6
  3091  00291C  C01B  F00B         	movff	___lodiv@quotient+7,?___lodiv+7
  3092  002920  0012               	return		;funcret
  3093  002922                     __end_of___lodiv:
  3094                           	opt callstack 0
  3095                           
  3096 ;; *************** function _strncmp *****************
  3097 ;; Defined at:
  3098 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  _l              2    3[COMRAM] PTR const unsigned char 
  3101 ;;		 -> vfpfcnvrt@ct(3), STR_2(33), 
  3102 ;;  _r              2    5[COMRAM] PTR const unsigned char 
  3103 ;;		 -> STR_18(3), STR_13(3), 
  3104 ;;  n               2    7[COMRAM] unsigned int 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  r               2   12[COMRAM] PTR const unsigned char 
  3107 ;;		 -> STR_18(3), STR_13(3), 
  3108 ;;  l               2   10[COMRAM] PTR const unsigned char 
  3109 ;;		 -> vfpfcnvrt@ct(3), STR_2(33), 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    3[COMRAM] int 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3119 ;;      Params:         6       0       0       0       0       0       0
  3120 ;;      Locals:         4       0       0       0       0       0       0
  3121 ;;      Temps:          1       0       0       0       0       0       0
  3122 ;;      Totals:        11       0       0       0       0       0       0
  3123 ;;Total ram usage:       11 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    2
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_vfpfcnvrt
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text9
  3134  00269E                     __ptext9:
  3135                           	opt callstack 0
  3136  00269E                     _strncmp:
  3137                           	opt callstack 25
  3138                           
  3139                           ;incstack = 0
  3140  00269E  C004  F00B         	movff	strncmp@_l,strncmp@l
  3141  0026A2  C005  F00C         	movff	strncmp@_l+1,strncmp@l+1
  3142  0026A6  C006  F00D         	movff	strncmp@_r,strncmp@r
  3143  0026AA  C007  F00E         	movff	strncmp@_r+1,strncmp@r+1
  3144  0026AE  0608               	decf	strncmp@n,f,c
  3145  0026B0  A0D8               	btfss	status,0,c
  3146  0026B2  0609               	decf	strncmp@n+1,f,c
  3147  0026B4  2808               	incf	strncmp@n,w,c
  3148  0026B6  E10F               	bnz	l5645
  3149  0026B8  2809               	incf	strncmp@n+1,w,c
  3150  0026BA  A4D8               	btfss	status,2,c
  3151  0026BC  D00C               	goto	l5645
  3152  0026BE  0E00               	movlw	0
  3153  0026C0  6E05               	movwf	?_strncmp+1,c
  3154  0026C2  0E00               	movlw	0
  3155  0026C4  6E04               	movwf	?_strncmp,c
  3156  0026C6  0012               	return	
  3157  0026C8                     l5643:
  3158  0026C8  4A0B               	infsnz	strncmp@l,f,c
  3159  0026CA  2A0C               	incf	strncmp@l+1,f,c
  3160  0026CC  4A0D               	infsnz	strncmp@r,f,c
  3161  0026CE  2A0E               	incf	strncmp@r+1,f,c
  3162  0026D0  0608               	decf	strncmp@n,f,c
  3163  0026D2  A0D8               	btfss	status,0,c
  3164  0026D4  0609               	decf	strncmp@n+1,f,c
  3165  0026D6                     l5645:
  3166  0026D6  C00B  FFF6         	movff	strncmp@l,tblptrl
  3167  0026DA  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  3168  0026DE  6AF8               	clrf	tblptru,c
  3169  0026E0  0E05               	movlw	(high __ramtop+-1)
  3170  0026E2  64F7               	cpfsgt	tblptrh,c
  3171  0026E4  D003               	bra	u7907
  3172  0026E6  0008               	tblrd		*
  3173  0026E8  50F5               	movf	tablat,w,c
  3174  0026EA  D005               	bra	u7900
  3175  0026EC                     u7907:
  3176  0026EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3177  0026F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3178  0026F4  50E7               	movf	indf1,w,c
  3179  0026F6                     u7900:
  3180  0026F6  0900               	iorlw	0
  3181  0026F8  B4D8               	btfsc	status,2,c
  3182  0026FA  D027               	goto	u7940
  3183  0026FC  C00D  FFF6         	movff	strncmp@r,tblptrl
  3184  002700  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  3185  002704                     	if	0	;tblptru may be non-zero
  3186  002704                     	endif
  3187  002704                     	if	0	;tblptru may be non-zero
  3188  002704                     	endif
  3189  002704  0008               	tblrd		*
  3190  002706  50F5               	movf	tablat,w,c
  3191  002708  0900               	iorlw	0
  3192  00270A  B4D8               	btfsc	status,2,c
  3193  00270C  D01E               	goto	u7940
  3194  00270E  5008               	movf	strncmp@n,w,c
  3195  002710  1009               	iorwf	strncmp@n+1,w,c
  3196  002712  B4D8               	btfsc	status,2,c
  3197  002714  D01A               	goto	u7940
  3198  002716  C00D  FFF6         	movff	strncmp@r,tblptrl
  3199  00271A  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  3200  00271E                     	if	0	;tblptru may be non-zero
  3201  00271E                     	endif
  3202  00271E                     	if	0	;tblptru may be non-zero
  3203  00271E                     	endif
  3204  00271E  0008               	tblrd		*
  3205  002720  CFF5 F00A          	movff	tablat,??_strncmp
  3206  002724  C00B  FFF6         	movff	strncmp@l,tblptrl
  3207  002728  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  3208  00272C  6AF8               	clrf	tblptru,c
  3209  00272E  0E05               	movlw	(high __ramtop+-1)
  3210  002730  64F7               	cpfsgt	tblptrh,c
  3211  002732  D003               	bra	u7947
  3212  002734  0008               	tblrd		*
  3213  002736  50F5               	movf	tablat,w,c
  3214  002738  D005               	bra	u7945
  3215  00273A                     u7947:
  3216  00273A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3217  00273E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3218  002742  50E7               	movf	indf1,w,c
  3219  002744                     u7945:
  3220  002744  180A               	xorwf	??_strncmp,w,c
  3221  002746  B4D8               	btfsc	status,2,c
  3222  002748  D7BF               	goto	l5643
  3223  00274A                     u7940:
  3224  00274A  C00B  FFF6         	movff	strncmp@l,tblptrl
  3225  00274E  C00C  FFF7         	movff	strncmp@l+1,tblptrh
  3226  002752  6AF8               	clrf	tblptru,c
  3227  002754  0E05               	movlw	(high __ramtop+-1)
  3228  002756  64F7               	cpfsgt	tblptrh,c
  3229  002758  D003               	bra	u7957
  3230  00275A  0008               	tblrd		*
  3231  00275C  50F5               	movf	tablat,w,c
  3232  00275E  D005               	bra	u7950
  3233  002760                     u7957:
  3234  002760  CFF6 FFE1          	movff	tblptrl,fsr1l
  3235  002764  CFF7 FFE2          	movff	tblptrh,fsr1h
  3236  002768  50E7               	movf	indf1,w,c
  3237  00276A                     u7950:
  3238  00276A  6E0A               	movwf	??_strncmp& (0+255),c
  3239  00276C  C00D  FFF6         	movff	strncmp@r,tblptrl
  3240  002770  C00E  FFF7         	movff	strncmp@r+1,tblptrh
  3241  002774                     	if	0	;tblptru may be non-zero
  3242  002774                     	endif
  3243  002774                     	if	0	;tblptru may be non-zero
  3244  002774                     	endif
  3245  002774  0008               	tblrd		*
  3246  002776  50F5               	movf	tablat,w,c
  3247  002778  5C0A               	subwf	??_strncmp,w,c
  3248  00277A  6E04               	movwf	?_strncmp,c
  3249  00277C  6A05               	clrf	?_strncmp+1,c
  3250  00277E  A0D8               	btfss	status,0,c
  3251  002780  0605               	decf	?_strncmp+1,f,c
  3252  002782  0012               	return		;funcret
  3253  002784                     __end_of_strncmp:
  3254                           	opt callstack 0
  3255                           
  3256 ;; *************** function _efgtoa *****************
  3257 ;; Defined at:
  3258 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  3261 ;;		 -> sprintf@f(6), 
  3262 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  3263 ;;  c               1   93[COMRAM] unsigned char 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  u               4   52[BANK0 ] unsigned char 
  3266 ;;  g               4   44[BANK0 ] unsigned char 
  3267 ;;  l               4   38[BANK0 ] unsigned char 
  3268 ;;  h               4   34[BANK0 ] unsigned char 
  3269 ;;  ou              4    0[BANK0 ] unsigned char 
  3270 ;;  n               2   50[BANK0 ] int 
  3271 ;;  e               2   48[BANK0 ] int 
  3272 ;;  i               2   42[BANK0 ] int 
  3273 ;;  w               2   31[BANK0 ] int 
  3274 ;;  p               2   28[BANK0 ] int 
  3275 ;;  sign            2   26[BANK0 ] int 
  3276 ;;  d               2   24[BANK0 ] int 
  3277 ;;  ne              2   22[BANK0 ] int 
  3278 ;;  m               2   20[BANK0 ] int 
  3279 ;;  pp              2   18[BANK0 ] int 
  3280 ;;  t               2   16[BANK0 ] int 
  3281 ;;  mode            1   33[BANK0 ] unsigned char 
  3282 ;;  nmode           1   30[BANK0 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  2   87[COMRAM] int 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3292 ;;      Params:         7       0       0       0       0       0       0
  3293 ;;      Locals:         0      56       0       0       0       0       0
  3294 ;;      Temps:          5       0       0       0       0       0       0
  3295 ;;      Totals:        12      56       0       0       0       0       0
  3296 ;;Total ram usage:       68 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    6
  3299 ;; This function calls:
  3300 ;;		___awdiv
  3301 ;;		___awmod
  3302 ;;		___fladd
  3303 ;;		___fldiv
  3304 ;;		___fleq
  3305 ;;		___flge
  3306 ;;		___flmul
  3307 ;;		___flneg
  3308 ;;		___flsub
  3309 ;;		___fltol
  3310 ;;		___fpclassifyf
  3311 ;;		_floorf
  3312 ;;		_isupper
  3313 ;;		_pad
  3314 ;;		_strcpy
  3315 ;;		_tolower
  3316 ;; This function is called by:
  3317 ;;		_vfpfcnvrt
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text10
  3322  00065C                     __ptext10:
  3323                           	opt callstack 0
  3324  00065C                     _efgtoa:
  3325                           	opt callstack 21
  3326                           
  3327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3328                           
  3329                           ;incstack = 0
  3330  00065C  0E00               	movlw	0
  3331  00065E  0100               	movlb	0	; () banked
  3332  000660  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3333  000662  0E00               	movlw	0
  3334  000664  6F9A               	movwf	efgtoa@sign& (0+255),b
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3338  000666  C05A  F0AC         	movff	efgtoa@f,efgtoa@g
  3339  00066A  C05B  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  3340  00066E  C05C  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  3341  000672  C05D  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3345  000676  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  3346  000678  D016               	goto	l5271
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3350  00067A  0E00               	movlw	0
  3351  00067C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3352  00067E  0E01               	movlw	1
  3353  000680  6F9A               	movwf	efgtoa@sign& (0+255),b
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3357  000682  C0AC  F004         	movff	efgtoa@g,___flneg@f1
  3358  000686  C0AD  F005         	movff	efgtoa@g+1,___flneg@f1+1
  3359  00068A  C0AE  F006         	movff	efgtoa@g+2,___flneg@f1+2
  3360  00068E  C0AF  F007         	movff	efgtoa@g+3,___flneg@f1+3
  3361  000692  EC49  F019         	call	___flneg	;wreg free
  3362  000696  C004  F0AC         	movff	?___flneg,efgtoa@g
  3363  00069A  C005  F0AD         	movff	?___flneg+1,efgtoa@g+1
  3364  00069E  C006  F0AE         	movff	?___flneg+2,efgtoa@g+2
  3365  0006A2  C007  F0AF         	movff	?___flneg+3,efgtoa@g+3
  3366  0006A6                     l5271:
  3367                           
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3369  0006A6  0E00               	movlw	0
  3370  0006A8  0100               	movlb	0	; () banked
  3371  0006AA  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  3372  0006AC  0E00               	movlw	0
  3373  0006AE  6FB2               	movwf	efgtoa@n& (0+255),b
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3377  0006B0  C0F6  F09F         	movff	_width,efgtoa@w
  3378  0006B4  C0F7  F0A0         	movff	_width+1,efgtoa@w+1
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3382  0006B8  519A               	movf	efgtoa@sign& (0+255),w,b
  3383  0006BA  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3384  0006BC  A4D8               	btfss	status,2,c
  3385  0006BE  D002               	goto	u7250
  3386                           
  3387                           ; BSR set to: 0
  3388  0006C0  A478               	btfss	_flags,2,c
  3389  0006C2  D013               	goto	l5291
  3390  0006C4                     u7250:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3394  0006C4  519A               	movf	efgtoa@sign& (0+255),w,b
  3395  0006C6  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3396  0006C8  A4D8               	btfss	status,2,c
  3397  0006CA  D004               	goto	l5283
  3398                           
  3399                           ; BSR set to: 0
  3400  0006CC  0E00               	movlw	0
  3401  0006CE  6F85               	movwf	(_efgtoa$610+1)& (0+255),b
  3402  0006D0  0E2B               	movlw	43
  3403  0006D2  D003               	goto	L3
  3404  0006D4                     l5283:
  3405                           
  3406                           ; BSR set to: 0
  3407  0006D4  0E00               	movlw	0
  3408  0006D6  6F85               	movwf	(_efgtoa$610+1)& (0+255),b
  3409  0006D8  0E2D               	movlw	45
  3410  0006DA                     L3:
  3411  0006DA  6F84               	movwf	_efgtoa$610& (0+255),b
  3412                           
  3413                           ; BSR set to: 0
  3414  0006DC  C084  F100         	movff	_efgtoa$610,_dbuf
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3418  0006E0  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3419  0006E2  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3423  0006E4  079F               	decf	efgtoa@w& (0+255),f,b
  3424  0006E6  A0D8               	btfss	status,0,c
  3425  0006E8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3426  0006EA                     l5291:
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3430  0006EA  C0AC  F004         	movff	efgtoa@g,___fpclassifyf@x
  3431  0006EE  C0AD  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3432  0006F2  C0AE  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3433  0006F6  C0AF  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3434  0006FA  EC91  F014         	call	___fpclassifyf	;wreg free
  3435  0006FE  0404               	decf	?___fpclassifyf,w,c
  3436  000700  1005               	iorwf	?___fpclassifyf+1,w,c
  3437  000702  A4D8               	btfss	status,2,c
  3438  000704  D04C               	goto	l5309
  3439  000706  0EBF               	movlw	191
  3440  000708  6E5F               	movwf	??_efgtoa& (0+255),c
  3441  00070A  0EFF               	movlw	255
  3442  00070C  6E60               	movwf	(??_efgtoa+1)& (0+255),c
  3443  00070E  505E               	movf	efgtoa@c,w,c
  3444  000710  6E61               	movwf	(??_efgtoa+2)& (0+255),c
  3445  000712  6A62               	clrf	(??_efgtoa+3)& (0+255),c
  3446  000714  505F               	movf	??_efgtoa,w,c
  3447  000716  2661               	addwf	??_efgtoa+2,f,c
  3448  000718  5060               	movf	??_efgtoa+1,w,c
  3449  00071A  2262               	addwfc	??_efgtoa+3,f,c
  3450  00071C  5062               	movf	??_efgtoa+3,w,c
  3451  00071E  E106               	bnz	u7280
  3452  000720  0E1A               	movlw	26
  3453  000722  5C61               	subwf	??_efgtoa+2,w,c
  3454  000724  B0D8               	btfsc	status,0,c
  3455  000726  D002               	goto	u7280
  3456  000728  0E01               	movlw	1
  3457  00072A  D001               	goto	u7290
  3458  00072C                     u7280:
  3459  00072C  0E00               	movlw	0
  3460  00072E                     u7290:
  3461  00072E  0100               	movlb	0	; () banked
  3462  000730  6F86               	movwf	_efgtoa$611& (0+255),b
  3463  000732  6B87               	clrf	(_efgtoa$611+1)& (0+255),b
  3464                           
  3465                           ; BSR set to: 0
  3466  000734  5186               	movf	_efgtoa$611& (0+255),w,b
  3467  000736  1187               	iorwf	(_efgtoa$611+1)& (0+255),w,b
  3468  000738  B4D8               	btfsc	status,2,c
  3469  00073A  D00D               	goto	l5301
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3473  00073C  0E00               	movlw	low _dbuf
  3474  00073E  25B2               	addwf	efgtoa@n& (0+255),w,b
  3475  000740  6E04               	movwf	strcpy@dest,c
  3476  000742  0E01               	movlw	high _dbuf
  3477  000744  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3478  000746  6E05               	movwf	strcpy@dest+1,c
  3479  000748  0E44               	movlw	low STR_3
  3480  00074A  6E06               	movwf	strcpy@src,c
  3481  00074C  0E06               	movlw	high STR_3
  3482  00074E  6E07               	movwf	strcpy@src+1,c
  3483  000750  EC54  F018         	call	_strcpy	;wreg free
  3484                           
  3485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3486  000754  D00C               	goto	l5303
  3487  000756                     l5301:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3491  000756  0E00               	movlw	low _dbuf
  3492  000758  25B2               	addwf	efgtoa@n& (0+255),w,b
  3493  00075A  6E04               	movwf	strcpy@dest,c
  3494  00075C  0E01               	movlw	high _dbuf
  3495  00075E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3496  000760  6E05               	movwf	strcpy@dest+1,c
  3497  000762  0E4C               	movlw	low STR_4
  3498  000764  6E06               	movwf	strcpy@src,c
  3499  000766  0E06               	movlw	high STR_4
  3500  000768  6E07               	movwf	strcpy@src+1,c
  3501  00076A  EC54  F018         	call	_strcpy	;wreg free
  3502  00076E                     l5303:
  3503                           
  3504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3505  00076E  0100               	movlb	0	; () banked
  3506  000770  0EFD               	movlw	253
  3507  000772  279F               	addwf	efgtoa@w& (0+255),f,b
  3508  000774  0EFF               	movlw	255
  3509  000776  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3510  000778                     l5305:
  3511                           
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3513  000778  C058  F014         	movff	efgtoa@fp,pad@fp
  3514  00077C  C059  F015         	movff	efgtoa@fp+1,pad@fp+1
  3515  000780  0E00               	movlw	low _dbuf
  3516  000782  6E16               	movwf	pad@buf,c
  3517  000784  0E01               	movlw	high _dbuf
  3518  000786  6E17               	movwf	pad@buf+1,c
  3519  000788  C09F  F018         	movff	efgtoa@w,pad@p
  3520  00078C  C0A0  F019         	movff	efgtoa@w+1,pad@p+1
  3521  000790  EC61  F016         	call	_pad	;wreg free
  3522  000794  C014  F058         	movff	?_pad,?_efgtoa
  3523  000798  C015  F059         	movff	?_pad+1,?_efgtoa+1
  3524  00079C  0012               	return	
  3525  00079E                     l5309:
  3526                           
  3527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3528  00079E  C0AC  F004         	movff	efgtoa@g,___fpclassifyf@x
  3529  0007A2  C0AD  F005         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3530  0007A6  C0AE  F006         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3531  0007AA  C0AF  F007         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3532  0007AE  EC91  F014         	call	___fpclassifyf	;wreg free
  3533  0007B2  5004               	movf	?___fpclassifyf,w,c
  3534  0007B4  1005               	iorwf	?___fpclassifyf+1,w,c
  3535  0007B6  A4D8               	btfss	status,2,c
  3536  0007B8  D035               	goto	l5327
  3537  0007BA  0EBF               	movlw	191
  3538  0007BC  6E5F               	movwf	??_efgtoa& (0+255),c
  3539  0007BE  0EFF               	movlw	255
  3540  0007C0  6E60               	movwf	(??_efgtoa+1)& (0+255),c
  3541  0007C2  505E               	movf	efgtoa@c,w,c
  3542  0007C4  6E61               	movwf	(??_efgtoa+2)& (0+255),c
  3543  0007C6  6A62               	clrf	(??_efgtoa+3)& (0+255),c
  3544  0007C8  505F               	movf	??_efgtoa,w,c
  3545  0007CA  2661               	addwf	??_efgtoa+2,f,c
  3546  0007CC  5060               	movf	??_efgtoa+1,w,c
  3547  0007CE  2262               	addwfc	??_efgtoa+3,f,c
  3548  0007D0  5062               	movf	??_efgtoa+3,w,c
  3549  0007D2  E106               	bnz	u7320
  3550  0007D4  0E1A               	movlw	26
  3551  0007D6  5C61               	subwf	??_efgtoa+2,w,c
  3552  0007D8  B0D8               	btfsc	status,0,c
  3553  0007DA  D002               	goto	u7320
  3554  0007DC  0E01               	movlw	1
  3555  0007DE  D001               	goto	u7330
  3556  0007E0                     u7320:
  3557  0007E0  0E00               	movlw	0
  3558  0007E2                     u7330:
  3559  0007E2  0100               	movlb	0	; () banked
  3560  0007E4  6F88               	movwf	_efgtoa$616& (0+255),b
  3561  0007E6  6B89               	clrf	(_efgtoa$616+1)& (0+255),b
  3562                           
  3563                           ; BSR set to: 0
  3564  0007E8  5188               	movf	_efgtoa$616& (0+255),w,b
  3565  0007EA  1189               	iorwf	(_efgtoa$616+1)& (0+255),w,b
  3566  0007EC  B4D8               	btfsc	status,2,c
  3567  0007EE  D00D               	goto	l5319
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3571  0007F0  0E00               	movlw	low _dbuf
  3572  0007F2  25B2               	addwf	efgtoa@n& (0+255),w,b
  3573  0007F4  6E04               	movwf	strcpy@dest,c
  3574  0007F6  0E01               	movlw	high _dbuf
  3575  0007F8  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3576  0007FA  6E05               	movwf	strcpy@dest+1,c
  3577  0007FC  0E48               	movlw	low STR_7
  3578  0007FE  6E06               	movwf	strcpy@src,c
  3579  000800  0E06               	movlw	high STR_7
  3580  000802  6E07               	movwf	strcpy@src+1,c
  3581  000804  EC54  F018         	call	_strcpy	;wreg free
  3582                           
  3583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3584  000808  D7B2               	goto	l5303
  3585  00080A                     l5319:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3589  00080A  0E00               	movlw	low _dbuf
  3590  00080C  25B2               	addwf	efgtoa@n& (0+255),w,b
  3591  00080E  6E04               	movwf	strcpy@dest,c
  3592  000810  0E01               	movlw	high _dbuf
  3593  000812  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3594  000814  6E05               	movwf	strcpy@dest+1,c
  3595  000816  0E50               	movlw	low STR_8
  3596  000818  6E06               	movwf	strcpy@src,c
  3597  00081A  0E06               	movlw	high STR_8
  3598  00081C  6E07               	movwf	strcpy@src+1,c
  3599  00081E  EC54  F018         	call	_strcpy	;wreg free
  3600  000822  D7A5               	goto	l5303
  3601  000824                     l5327:
  3602                           
  3603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3604  000824  0E00               	movlw	0
  3605  000826  0100               	movlb	0	; () banked
  3606  000828  6FB4               	movwf	efgtoa@u& (0+255),b
  3607  00082A  0E00               	movlw	0
  3608  00082C  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3609  00082E  0E80               	movlw	128
  3610  000830  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3611  000832  0E3F               	movlw	63
  3612  000834  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3613                           
  3614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3615  000836  0E00               	movlw	0
  3616  000838  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3617  00083A  0E00               	movlw	0
  3618  00083C  6FB0               	movwf	efgtoa@e& (0+255),b
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3622  00083E  C0AC  F004         	movff	efgtoa@g,___fleq@ff1
  3623  000842  C0AD  F005         	movff	efgtoa@g+1,___fleq@ff1+1
  3624  000846  C0AE  F006         	movff	efgtoa@g+2,___fleq@ff1+2
  3625  00084A  C0AF  F007         	movff	efgtoa@g+3,___fleq@ff1+3
  3626  00084E  0E00               	movlw	0
  3627  000850  6E08               	movwf	___fleq@ff2,c
  3628  000852  0E00               	movlw	0
  3629  000854  6E09               	movwf	___fleq@ff2+1,c
  3630  000856  0E00               	movlw	0
  3631  000858  6E0A               	movwf	___fleq@ff2+2,c
  3632  00085A  0E00               	movlw	0
  3633  00085C  6E0B               	movwf	___fleq@ff2+3,c
  3634  00085E  ECAC  F016         	call	___fleq	;wreg free
  3635  000862  A0D8               	btfss	status,0,c
  3636  000864  D01E               	goto	l5337
  3637  000866  D076               	goto	u7370
  3638  000868                     l5333:
  3639                           
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3641  000868  C0B4  F012         	movff	efgtoa@u,___flmul@b
  3642  00086C  C0B5  F013         	movff	efgtoa@u+1,___flmul@b+1
  3643  000870  C0B6  F014         	movff	efgtoa@u+2,___flmul@b+2
  3644  000874  C0B7  F015         	movff	efgtoa@u+3,___flmul@b+3
  3645  000878  0E00               	movlw	0
  3646  00087A  6E16               	movwf	___flmul@a,c
  3647  00087C  0E00               	movlw	0
  3648  00087E  6E17               	movwf	___flmul@a+1,c
  3649  000880  0E20               	movlw	32
  3650  000882  6E18               	movwf	___flmul@a+2,c
  3651  000884  0E41               	movlw	65
  3652  000886  6E19               	movwf	___flmul@a+3,c
  3653  000888  ECFD  F00A         	call	___flmul	;wreg free
  3654  00088C  C012  F0B4         	movff	?___flmul,efgtoa@u
  3655  000890  C013  F0B5         	movff	?___flmul+1,efgtoa@u+1
  3656  000894  C014  F0B6         	movff	?___flmul+2,efgtoa@u+2
  3657  000898  C015  F0B7         	movff	?___flmul+3,efgtoa@u+3
  3658                           
  3659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3660  00089C  0100               	movlb	0	; () banked
  3661  00089E  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  3662  0008A0  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3663  0008A2                     l5337:
  3664                           
  3665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3666  0008A2  C0AC  F02B         	movff	efgtoa@g,___flge@ff1
  3667  0008A6  C0AD  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  3668  0008AA  C0AE  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  3669  0008AE  C0AF  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  3670  0008B2  0E00               	movlw	0
  3671  0008B4  6E16               	movwf	___flmul@a,c
  3672  0008B6  0E00               	movlw	0
  3673  0008B8  6E17               	movwf	___flmul@a+1,c
  3674  0008BA  0E20               	movlw	32
  3675  0008BC  6E18               	movwf	___flmul@a+2,c
  3676  0008BE  0E41               	movlw	65
  3677  0008C0  6E19               	movwf	___flmul@a+3,c
  3678  0008C2  C0B4  F012         	movff	efgtoa@u,___flmul@b
  3679  0008C6  C0B5  F013         	movff	efgtoa@u+1,___flmul@b+1
  3680  0008CA  C0B6  F014         	movff	efgtoa@u+2,___flmul@b+2
  3681  0008CE  C0B7  F015         	movff	efgtoa@u+3,___flmul@b+3
  3682  0008D2  ECFD  F00A         	call	___flmul	;wreg free
  3683  0008D6  C012  F02F         	movff	?___flmul,___flge@ff2
  3684  0008DA  C013  F030         	movff	?___flmul+1,___flge@ff2+1
  3685  0008DE  C014  F031         	movff	?___flmul+2,___flge@ff2+2
  3686  0008E2  C015  F032         	movff	?___flmul+3,___flge@ff2+3
  3687  0008E6  ECC2  F013         	call	___flge	;wreg free
  3688  0008EA  A0D8               	btfss	status,0,c
  3689  0008EC  D01F               	goto	l5343
  3690  0008EE  D7BC               	goto	l5333
  3691  0008F0                     l5339:
  3692                           
  3693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3694  0008F0  C0B4  F02B         	movff	efgtoa@u,___fldiv@b
  3695  0008F4  C0B5  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  3696  0008F8  C0B6  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  3697  0008FC  C0B7  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  3698  000900  0E00               	movlw	0
  3699  000902  6E2F               	movwf	___fldiv@a,c
  3700  000904  0E00               	movlw	0
  3701  000906  6E30               	movwf	___fldiv@a+1,c
  3702  000908  0E20               	movlw	32
  3703  00090A  6E31               	movwf	___fldiv@a+2,c
  3704  00090C  0E41               	movlw	65
  3705  00090E  6E32               	movwf	___fldiv@a+3,c
  3706  000910  EC2C  F00E         	call	___fldiv	;wreg free
  3707  000914  C02B  F0B4         	movff	?___fldiv,efgtoa@u
  3708  000918  C02C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3709  00091C  C02D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3710  000920  C02E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3711                           
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3713  000924  0100               	movlb	0	; () banked
  3714  000926  07B0               	decf	efgtoa@e& (0+255),f,b
  3715  000928  A0D8               	btfss	status,0,c
  3716  00092A  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  3717  00092C                     l5343:
  3718                           
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3720  00092C  C0AC  F02B         	movff	efgtoa@g,___flge@ff1
  3721  000930  C0AD  F02C         	movff	efgtoa@g+1,___flge@ff1+1
  3722  000934  C0AE  F02D         	movff	efgtoa@g+2,___flge@ff1+2
  3723  000938  C0AF  F02E         	movff	efgtoa@g+3,___flge@ff1+3
  3724  00093C  C0B4  F02F         	movff	efgtoa@u,___flge@ff2
  3725  000940  C0B5  F030         	movff	efgtoa@u+1,___flge@ff2+1
  3726  000944  C0B6  F031         	movff	efgtoa@u+2,___flge@ff2+2
  3727  000948  C0B7  F032         	movff	efgtoa@u+3,___flge@ff2+3
  3728  00094C  ECC2  F013         	call	___flge	;wreg free
  3729  000950  A0D8               	btfss	status,0,c
  3730  000952  D7CE               	goto	l5339
  3731  000954                     u7370:
  3732                           
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3734  000954  C05E  F00A         	movff	efgtoa@c,tolower@c
  3735  000958  6A0B               	clrf	tolower@c+1,c
  3736  00095A  EC7D  F018         	call	_tolower	;wreg free
  3737  00095E  500A               	movf	?_tolower,w,c
  3738  000960  0100               	movlb	0	; () banked
  3739  000962  6FA1               	movwf	efgtoa@mode& (0+255),b
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3743  000964  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3747  000968  0E67               	movlw	103
  3748  00096A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3749  00096C  A4D8               	btfss	status,2,c
  3750  00096E  D019               	goto	l5359
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3754  000970  5076               	movf	_prec,w,c
  3755  000972  1077               	iorwf	_prec+1,w,c
  3756  000974  A4D8               	btfss	status,2,c
  3757  000976  D004               	goto	l5355
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3761  000978  0E00               	movlw	0
  3762  00097A  6E77               	movwf	_prec+1,c
  3763  00097C  0E01               	movlw	1
  3764  00097E  6E76               	movwf	_prec,c
  3765  000980                     l5355:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3769  000980  BE77               	btfsc	_prec+1,7,c
  3770  000982  D005               	goto	u7400
  3771  000984  5077               	movf	_prec+1,w,c
  3772  000986  E108               	bnz	l189
  3773  000988  0476               	decf	_prec,w,c
  3774  00098A  B0D8               	btfsc	status,0,c
  3775  00098C  D005               	goto	l189
  3776  00098E                     u7400:
  3777                           
  3778                           ; BSR set to: 0
  3779  00098E  0E00               	movlw	0
  3780  000990  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  3781  000992  0E06               	movlw	6
  3782  000994  6F9C               	movwf	efgtoa@p& (0+255),b
  3783  000996  D008               	goto	l5365
  3784  000998                     l189:
  3785                           
  3786                           ; BSR set to: 0
  3787  000998  C076  F09C         	movff	_prec,efgtoa@p
  3788  00099C  C077  F09D         	movff	_prec+1,efgtoa@p+1
  3789  0009A0  D003               	goto	l5365
  3790  0009A2                     l5359:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3794  0009A2  AE77               	btfss	_prec+1,7,c
  3795  0009A4  D7F9               	goto	l189
  3796  0009A6  D7F3               	goto	u7400
  3797  0009A8                     l5365:
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3801  0009A8  0E67               	movlw	103
  3802  0009AA  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3803  0009AC  A4D8               	btfss	status,2,c
  3804  0009AE  D022               	goto	l5375
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3808  0009B0  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3809  0009B2  D006               	goto	u7430
  3810  0009B4  0EFC               	movlw	252
  3811  0009B6  5DB0               	subwf	efgtoa@e& (0+255),w,b
  3812  0009B8  0EFF               	movlw	255
  3813  0009BA  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3814  0009BC  A0D8               	btfss	status,0,c
  3815  0009BE  D018               	goto	l5373
  3816  0009C0                     u7430:
  3817                           
  3818                           ; BSR set to: 0
  3819  0009C0  0EFF               	movlw	255
  3820  0009C2  6E5F               	movwf	??_efgtoa& (0+255),c
  3821  0009C4  0EFF               	movlw	255
  3822  0009C6  6E60               	movwf	(??_efgtoa+1)& (0+255),c
  3823  0009C8  C09C  F061         	movff	efgtoa@p,??_efgtoa+2
  3824  0009CC  C09D  F062         	movff	efgtoa@p+1,??_efgtoa+3
  3825  0009D0  505F               	movf	??_efgtoa,w,c
  3826  0009D2  2661               	addwf	??_efgtoa+2,f,c
  3827  0009D4  5060               	movf	??_efgtoa+1,w,c
  3828  0009D6  2262               	addwfc	??_efgtoa+3,f,c
  3829  0009D8  51B0               	movf	efgtoa@e& (0+255),w,b
  3830  0009DA  5C61               	subwf	??_efgtoa+2,w,c
  3831  0009DC  5062               	movf	??_efgtoa+3,w,c
  3832  0009DE  0A80               	xorlw	128
  3833  0009E0  6E63               	movwf	(??_efgtoa+4)& (0+255),c
  3834  0009E2  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3835  0009E4  0A80               	xorlw	128
  3836  0009E6  5863               	subwfb	(??_efgtoa+4)& (0+255),w,c
  3837  0009E8  A0D8               	btfss	status,0,c
  3838  0009EA  D002               	goto	l5373
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3842  0009EC  0E66               	movlw	102
  3843  0009EE  D001               	goto	L4
  3844  0009F0                     l5373:
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3848  0009F0  0E65               	movlw	101
  3849  0009F2                     L4:
  3850  0009F2  6F9E               	movwf	efgtoa@nmode& (0+255),b
  3851  0009F4                     l5375:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3855  0009F4  C09C  F094         	movff	efgtoa@p,efgtoa@m
  3856  0009F8  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3860  0009FC  0E67               	movlw	103
  3861  0009FE  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3862  000A00  A4D8               	btfss	status,2,c
  3863  000A02  D005               	goto	u7470
  3864                           
  3865                           ; BSR set to: 0
  3866  000A04  0E66               	movlw	102
  3867  000A06  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3868  000A08  B4D8               	btfsc	status,2,c
  3869                           
  3870                           ; BSR set to: 0
  3871  000A0A  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3872  000A0C  D002               	goto	l5385
  3873  000A0E                     u7470:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3877  000A0E  4B94               	infsnz	efgtoa@m& (0+255),f,b
  3878  000A10  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  3879  000A12                     l5385:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3883  000A12  0E66               	movlw	102
  3884  000A14  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3885  000A16  A4D8               	btfss	status,2,c
  3886  000A18  D016               	goto	l5395
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3890  000A1A  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3891  000A1C  D00C               	goto	l5391
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3895  000A1E  0E00               	movlw	0
  3896  000A20  6FB4               	movwf	efgtoa@u& (0+255),b
  3897  000A22  0E00               	movlw	0
  3898  000A24  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3899  000A26  0E80               	movlw	128
  3900  000A28  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3901  000A2A  0E3F               	movlw	63
  3902  000A2C  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3903                           
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3905  000A2E  0E00               	movlw	0
  3906  000A30  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3907  000A32  0E00               	movlw	0
  3908  000A34  6FB0               	movwf	efgtoa@e& (0+255),b
  3909  000A36                     l5391:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3913  000A36  0E67               	movlw	103
  3914  000A38  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3915  000A3A  B4D8               	btfsc	status,2,c
  3916  000A3C  D004               	goto	l5395
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3920  000A3E  51B0               	movf	efgtoa@e& (0+255),w,b
  3921  000A40  2794               	addwf	efgtoa@m& (0+255),f,b
  3922  000A42  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3923  000A44  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3924  000A46                     l5395:
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3928  000A46  0E00               	movlw	0
  3929  000A48  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3930  000A4A  0E00               	movlw	0
  3931  000A4C  6FAA               	movwf	efgtoa@i& (0+255),b
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3935  000A4E  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  3936  000A52  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  3937  000A56  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  3938  000A5A  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3942  000A5E  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  3943  000A62  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  3944  000A66  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  3945  000A6A  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  3946                           
  3947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3948  000A6E  D07B               	goto	l5409
  3949  000A70                     l5401:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3953  000A70  C0A2  F02B         	movff	efgtoa@h,___fldiv@b
  3954  000A74  C0A3  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  3955  000A78  C0A4  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  3956  000A7C  C0A5  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  3957  000A80  C0B4  F02F         	movff	efgtoa@u,___fldiv@a
  3958  000A84  C0B5  F030         	movff	efgtoa@u+1,___fldiv@a+1
  3959  000A88  C0B6  F031         	movff	efgtoa@u+2,___fldiv@a+2
  3960  000A8C  C0B7  F032         	movff	efgtoa@u+3,___fldiv@a+3
  3961  000A90  EC2C  F00E         	call	___fldiv	;wreg free
  3962  000A94  C02B  F044         	movff	?___fldiv,floorf@x
  3963  000A98  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  3964  000A9C  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  3965  000AA0  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  3966  000AA4  EC5D  F010         	call	_floorf	;wreg free
  3967  000AA8  C044  F0A6         	movff	?_floorf,efgtoa@l
  3968  000AAC  C045  F0A7         	movff	?_floorf+1,efgtoa@l+1
  3969  000AB0  C046  F0A8         	movff	?_floorf+2,efgtoa@l+2
  3970  000AB4  C047  F0A9         	movff	?_floorf+3,efgtoa@l+3
  3971                           
  3972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3973  000AB8  C0A6  F004         	movff	efgtoa@l,___fltol@f1
  3974  000ABC  C0A7  F005         	movff	efgtoa@l+1,___fltol@f1+1
  3975  000AC0  C0A8  F006         	movff	efgtoa@l+2,___fltol@f1+2
  3976  000AC4  C0A9  F007         	movff	efgtoa@l+3,___fltol@f1+3
  3977  000AC8  EC5D  F015         	call	___fltol	;wreg free
  3978  000ACC  C004  F098         	movff	?___fltol,efgtoa@d
  3979  000AD0  C005  F099         	movff	?___fltol+1,efgtoa@d+1
  3980                           
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3982  000AD4  C0A2  F02B         	movff	efgtoa@h,___flsub@b
  3983  000AD8  C0A3  F02C         	movff	efgtoa@h+1,___flsub@b+1
  3984  000ADC  C0A4  F02D         	movff	efgtoa@h+2,___flsub@b+2
  3985  000AE0  C0A5  F02E         	movff	efgtoa@h+3,___flsub@b+3
  3986  000AE4  C0B4  F016         	movff	efgtoa@u,___flmul@a
  3987  000AE8  C0B5  F017         	movff	efgtoa@u+1,___flmul@a+1
  3988  000AEC  C0B6  F018         	movff	efgtoa@u+2,___flmul@a+2
  3989  000AF0  C0B7  F019         	movff	efgtoa@u+3,___flmul@a+3
  3990  000AF4  C0A6  F012         	movff	efgtoa@l,___flmul@b
  3991  000AF8  C0A7  F013         	movff	efgtoa@l+1,___flmul@b+1
  3992  000AFC  C0A8  F014         	movff	efgtoa@l+2,___flmul@b+2
  3993  000B00  C0A9  F015         	movff	efgtoa@l+3,___flmul@b+3
  3994  000B04  ECFD  F00A         	call	___flmul	;wreg free
  3995  000B08  C012  F02F         	movff	?___flmul,___flsub@a
  3996  000B0C  C013  F030         	movff	?___flmul+1,___flsub@a+1
  3997  000B10  C014  F031         	movff	?___flmul+2,___flsub@a+2
  3998  000B14  C015  F032         	movff	?___flmul+3,___flsub@a+3
  3999  000B18  ECA3  F018         	call	___flsub	;wreg free
  4000  000B1C  C02B  F0A2         	movff	?___flsub,efgtoa@h
  4001  000B20  C02C  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4002  000B24  C02D  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4003  000B28  C02E  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4004                           
  4005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  4006  000B2C  C0B4  F02B         	movff	efgtoa@u,___fldiv@b
  4007  000B30  C0B5  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  4008  000B34  C0B6  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  4009  000B38  C0B7  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  4010  000B3C  0E00               	movlw	0
  4011  000B3E  6E2F               	movwf	___fldiv@a,c
  4012  000B40  0E00               	movlw	0
  4013  000B42  6E30               	movwf	___fldiv@a+1,c
  4014  000B44  0E20               	movlw	32
  4015  000B46  6E31               	movwf	___fldiv@a+2,c
  4016  000B48  0E41               	movlw	65
  4017  000B4A  6E32               	movwf	___fldiv@a+3,c
  4018  000B4C  EC2C  F00E         	call	___fldiv	;wreg free
  4019  000B50  C02B  F0B4         	movff	?___fldiv,efgtoa@u
  4020  000B54  C02C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4021  000B58  C02D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4022  000B5C  C02E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4023                           
  4024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  4025  000B60  0100               	movlb	0	; () banked
  4026  000B62  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4027  000B64  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4028  000B66                     l5409:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  4032  000B66  5194               	movf	efgtoa@m& (0+255),w,b
  4033  000B68  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4034  000B6A  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4035  000B6C  0A80               	xorlw	128
  4036  000B6E  6E5F               	movwf	??_efgtoa& (0+255),c
  4037  000B70  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4038  000B72  0A80               	xorlw	128
  4039  000B74  585F               	subwfb	??_efgtoa& (0+255),w,c
  4040  000B76  A0D8               	btfss	status,0,c
  4041  000B78  D77B               	goto	l5401
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  4045  000B7A  C0B4  F012         	movff	efgtoa@u,___flmul@b
  4046  000B7E  C0B5  F013         	movff	efgtoa@u+1,___flmul@b+1
  4047  000B82  C0B6  F014         	movff	efgtoa@u+2,___flmul@b+2
  4048  000B86  C0B7  F015         	movff	efgtoa@u+3,___flmul@b+3
  4049  000B8A  0E00               	movlw	0
  4050  000B8C  6E16               	movwf	___flmul@a,c
  4051  000B8E  0E00               	movlw	0
  4052  000B90  6E17               	movwf	___flmul@a+1,c
  4053  000B92  0EA0               	movlw	160
  4054  000B94  6E18               	movwf	___flmul@a+2,c
  4055  000B96  0E40               	movlw	64
  4056  000B98  6E19               	movwf	___flmul@a+3,c
  4057  000B9A  ECFD  F00A         	call	___flmul	;wreg free
  4058  000B9E  C012  F0A6         	movff	?___flmul,efgtoa@l
  4059  000BA2  C013  F0A7         	movff	?___flmul+1,efgtoa@l+1
  4060  000BA6  C014  F0A8         	movff	?___flmul+2,efgtoa@l+2
  4061  000BAA  C015  F0A9         	movff	?___flmul+3,efgtoa@l+3
  4062                           
  4063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  4064  000BAE  C0A2  F02B         	movff	efgtoa@h,___flge@ff1
  4065  000BB2  C0A3  F02C         	movff	efgtoa@h+1,___flge@ff1+1
  4066  000BB6  C0A4  F02D         	movff	efgtoa@h+2,___flge@ff1+2
  4067  000BBA  C0A5  F02E         	movff	efgtoa@h+3,___flge@ff1+3
  4068  000BBE  C0A6  F02F         	movff	efgtoa@l,___flge@ff2
  4069  000BC2  C0A7  F030         	movff	efgtoa@l+1,___flge@ff2+1
  4070  000BC6  C0A8  F031         	movff	efgtoa@l+2,___flge@ff2+2
  4071  000BCA  C0A9  F032         	movff	efgtoa@l+3,___flge@ff2+3
  4072  000BCE  ECC2  F013         	call	___flge	;wreg free
  4073  000BD2  B0D8               	btfsc	status,0,c
  4074  000BD4  D003               	goto	l5417
  4075                           
  4076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  4077  000BD6  0E00               	movlw	0
  4078  000BD8  0100               	movlb	0	; () banked
  4079  000BDA  D018               	goto	L5
  4080  000BDC                     l5417:
  4081                           
  4082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  4083  000BDC  C0A2  F004         	movff	efgtoa@h,___fleq@ff1
  4084  000BE0  C0A3  F005         	movff	efgtoa@h+1,___fleq@ff1+1
  4085  000BE4  C0A4  F006         	movff	efgtoa@h+2,___fleq@ff1+2
  4086  000BE8  C0A5  F007         	movff	efgtoa@h+3,___fleq@ff1+3
  4087  000BEC  C0A6  F008         	movff	efgtoa@l,___fleq@ff2
  4088  000BF0  C0A7  F009         	movff	efgtoa@l+1,___fleq@ff2+1
  4089  000BF4  C0A8  F00A         	movff	efgtoa@l+2,___fleq@ff2+2
  4090  000BF8  C0A9  F00B         	movff	efgtoa@l+3,___fleq@ff2+3
  4091  000BFC  ECAC  F016         	call	___fleq	;wreg free
  4092  000C00  A0D8               	btfss	status,0,c
  4093  000C02  D00B               	goto	l5423
  4094  000C04  0100               	movlb	0	; () banked
  4095  000C06  B198               	btfsc	efgtoa@d& (0+255),0,b
  4096  000C08  D008               	goto	l5423
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  4100  000C0A  0E00               	movlw	0
  4101  000C0C                     L5:
  4102  000C0C  6FA6               	movwf	efgtoa@l& (0+255),b
  4103  000C0E  0E00               	movlw	0
  4104  000C10  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4105  000C12  0E00               	movlw	0
  4106  000C14  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4107  000C16  0E00               	movlw	0
  4108  000C18  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4109  000C1A                     l5423:
  4110                           
  4111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4112  000C1A  C0AC  F004         	movff	efgtoa@g,___fladd@b
  4113  000C1E  C0AD  F005         	movff	efgtoa@g+1,___fladd@b+1
  4114  000C22  C0AE  F006         	movff	efgtoa@g+2,___fladd@b+2
  4115  000C26  C0AF  F007         	movff	efgtoa@g+3,___fladd@b+3
  4116  000C2A  C0A6  F008         	movff	efgtoa@l,___fladd@a
  4117  000C2E  C0A7  F009         	movff	efgtoa@l+1,___fladd@a+1
  4118  000C32  C0A8  F00A         	movff	efgtoa@l+2,___fladd@a+2
  4119  000C36  C0A9  F00B         	movff	efgtoa@l+3,___fladd@a+3
  4120  000C3A  ECA6  F00C         	call	___fladd	;wreg free
  4121  000C3E  C004  F0A2         	movff	?___fladd,efgtoa@h
  4122  000C42  C005  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4123  000C46  C006  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4124  000C4A  C007  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4125                           
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4127  000C4E  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  4128  000C52  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4129  000C56  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4130  000C5A  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4131                           
  4132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4133  000C5E  0E65               	movlw	101
  4134  000C60  0100               	movlb	0	; () banked
  4135  000C62  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4136  000C64  B4D8               	btfsc	status,2,c
  4137  000C66  D005               	goto	l5431
  4138                           
  4139                           ; BSR set to: 0
  4140  000C68  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  4141  000C6C  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  4142  000C70  D004               	goto	l215
  4143  000C72                     l5431:
  4144                           
  4145                           ; BSR set to: 0
  4146  000C72  0E00               	movlw	0
  4147  000C74  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  4148  000C76  0E00               	movlw	0
  4149  000C78  6F96               	movwf	efgtoa@ne& (0+255),b
  4150  000C7A                     l215:
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4154  000C7A  0E00               	movlw	0
  4155  000C7C  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4156  000C7E  0E00               	movlw	0
  4157  000C80  6F92               	movwf	efgtoa@pp& (0+255),b
  4158                           
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4160  000C82  0E00               	movlw	0
  4161  000C84  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  4162  000C86  0E00               	movlw	0
  4163  000C88  6F90               	movwf	efgtoa@t& (0+255),b
  4164                           
  4165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4166  000C8A  0E00               	movlw	0
  4167  000C8C  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4168  000C8E  0E00               	movlw	0
  4169  000C90  6FAA               	movwf	efgtoa@i& (0+255),b
  4170                           
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4172  000C92  D0C7               	goto	l5481
  4173  000C94                     l5433:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4177  000C94  C0A2  F02B         	movff	efgtoa@h,___fldiv@b
  4178  000C98  C0A3  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  4179  000C9C  C0A4  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  4180  000CA0  C0A5  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  4181  000CA4  C0B4  F02F         	movff	efgtoa@u,___fldiv@a
  4182  000CA8  C0B5  F030         	movff	efgtoa@u+1,___fldiv@a+1
  4183  000CAC  C0B6  F031         	movff	efgtoa@u+2,___fldiv@a+2
  4184  000CB0  C0B7  F032         	movff	efgtoa@u+3,___fldiv@a+3
  4185  000CB4  EC2C  F00E         	call	___fldiv	;wreg free
  4186  000CB8  C02B  F044         	movff	?___fldiv,floorf@x
  4187  000CBC  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  4188  000CC0  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  4189  000CC4  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  4190  000CC8  EC5D  F010         	call	_floorf	;wreg free
  4191  000CCC  C044  F0A6         	movff	?_floorf,efgtoa@l
  4192  000CD0  C045  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4193  000CD4  C046  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4194  000CD8  C047  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4195                           
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4197  000CDC  C0A6  F004         	movff	efgtoa@l,___fltol@f1
  4198  000CE0  C0A7  F005         	movff	efgtoa@l+1,___fltol@f1+1
  4199  000CE4  C0A8  F006         	movff	efgtoa@l+2,___fltol@f1+2
  4200  000CE8  C0A9  F007         	movff	efgtoa@l+3,___fltol@f1+3
  4201  000CEC  EC5D  F015         	call	___fltol	;wreg free
  4202  000CF0  C004  F098         	movff	?___fltol,efgtoa@d
  4203  000CF4  C005  F099         	movff	?___fltol+1,efgtoa@d+1
  4204                           
  4205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4206  000CF8  B878               	btfsc	_flags,4,c
  4207  000CFA  D00D               	goto	l5445
  4208  000CFC  0100               	movlb	0	; () banked
  4209  000CFE  5198               	movf	efgtoa@d& (0+255),w,b
  4210  000D00  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4211  000D02  A4D8               	btfss	status,2,c
  4212  000D04  D008               	goto	l5445
  4213                           
  4214                           ; BSR set to: 0
  4215  000D06  0E67               	movlw	103
  4216  000D08  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4217  000D0A  B4D8               	btfsc	status,2,c
  4218                           
  4219                           ; BSR set to: 0
  4220  000D0C  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4221  000D0E  D003               	goto	l5445
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4225  000D10  4B90               	infsnz	efgtoa@t& (0+255),f,b
  4226  000D12  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  4227                           
  4228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4229  000D14  D03A               	goto	l5473
  4230  000D16                     l5445:
  4231                           
  4232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4233  000D16  0100               	movlb	0	; () banked
  4234  000D18  5192               	movf	efgtoa@pp& (0+255),w,b
  4235  000D1A  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4236  000D1C  B4D8               	btfsc	status,2,c
  4237                           
  4238                           ; BSR set to: 0
  4239  000D1E  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4240  000D20  D022               	goto	l5465
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4244  000D22  0E00               	movlw	low _dbuf
  4245  000D24  25B2               	addwf	efgtoa@n& (0+255),w,b
  4246  000D26  6ED9               	movwf	fsr2l,c
  4247  000D28  0E01               	movlw	high _dbuf
  4248  000D2A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4249  000D2C  6EDA               	movwf	fsr2h,c
  4250  000D2E  0E2E               	movlw	46
  4251  000D30  6EDF               	movwf	indf2,c
  4252                           
  4253                           ; BSR set to: 0
  4254  000D32  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4255  000D34  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4259  000D36  079F               	decf	efgtoa@w& (0+255),f,b
  4260  000D38  A0D8               	btfss	status,0,c
  4261  000D3A  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4265  000D3C  0E00               	movlw	0
  4266  000D3E  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4267  000D40  0E01               	movlw	1
  4268  000D42  6F92               	movwf	efgtoa@pp& (0+255),b
  4269  000D44  D010               	goto	l5465
  4270  000D46                     l5457:
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4274  000D46  0E00               	movlw	low _dbuf
  4275  000D48  25B2               	addwf	efgtoa@n& (0+255),w,b
  4276  000D4A  6ED9               	movwf	fsr2l,c
  4277  000D4C  0E01               	movlw	high _dbuf
  4278  000D4E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4279  000D50  6EDA               	movwf	fsr2h,c
  4280  000D52  0E30               	movlw	48
  4281  000D54  6EDF               	movwf	indf2,c
  4282                           
  4283                           ; BSR set to: 0
  4284  000D56  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4285  000D58  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4289  000D5A  079F               	decf	efgtoa@w& (0+255),f,b
  4290  000D5C  A0D8               	btfss	status,0,c
  4291  000D5E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4295  000D60  0790               	decf	efgtoa@t& (0+255),f,b
  4296  000D62  A0D8               	btfss	status,0,c
  4297  000D64  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  4298  000D66                     l5465:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4302  000D66  5190               	movf	efgtoa@t& (0+255),w,b
  4303  000D68  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4304  000D6A  A4D8               	btfss	status,2,c
  4305  000D6C  D7EC               	goto	l5457
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4309  000D6E  0E00               	movlw	low _dbuf
  4310  000D70  25B2               	addwf	efgtoa@n& (0+255),w,b
  4311  000D72  6ED9               	movwf	fsr2l,c
  4312  000D74  0E01               	movlw	high _dbuf
  4313  000D76  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4314  000D78  6EDA               	movwf	fsr2h,c
  4315  000D7A  5198               	movf	efgtoa@d& (0+255),w,b
  4316  000D7C  0F30               	addlw	48
  4317  000D7E  6EDF               	movwf	indf2,c
  4318                           
  4319                           ; BSR set to: 0
  4320  000D80  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4321  000D82  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4325  000D84  079F               	decf	efgtoa@w& (0+255),f,b
  4326  000D86  A0D8               	btfss	status,0,c
  4327  000D88  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4328  000D8A                     l5473:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4332  000D8A  C0A2  F02B         	movff	efgtoa@h,___flsub@b
  4333  000D8E  C0A3  F02C         	movff	efgtoa@h+1,___flsub@b+1
  4334  000D92  C0A4  F02D         	movff	efgtoa@h+2,___flsub@b+2
  4335  000D96  C0A5  F02E         	movff	efgtoa@h+3,___flsub@b+3
  4336  000D9A  C0B4  F016         	movff	efgtoa@u,___flmul@a
  4337  000D9E  C0B5  F017         	movff	efgtoa@u+1,___flmul@a+1
  4338  000DA2  C0B6  F018         	movff	efgtoa@u+2,___flmul@a+2
  4339  000DA6  C0B7  F019         	movff	efgtoa@u+3,___flmul@a+3
  4340  000DAA  C0A6  F012         	movff	efgtoa@l,___flmul@b
  4341  000DAE  C0A7  F013         	movff	efgtoa@l+1,___flmul@b+1
  4342  000DB2  C0A8  F014         	movff	efgtoa@l+2,___flmul@b+2
  4343  000DB6  C0A9  F015         	movff	efgtoa@l+3,___flmul@b+3
  4344  000DBA  ECFD  F00A         	call	___flmul	;wreg free
  4345  000DBE  C012  F02F         	movff	?___flmul,___flsub@a
  4346  000DC2  C013  F030         	movff	?___flmul+1,___flsub@a+1
  4347  000DC6  C014  F031         	movff	?___flmul+2,___flsub@a+2
  4348  000DCA  C015  F032         	movff	?___flmul+3,___flsub@a+3
  4349  000DCE  ECA3  F018         	call	___flsub	;wreg free
  4350  000DD2  C02B  F0A2         	movff	?___flsub,efgtoa@h
  4351  000DD6  C02C  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4352  000DDA  C02D  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4353  000DDE  C02E  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4354                           
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4356  000DE2  C0B4  F02B         	movff	efgtoa@u,___fldiv@b
  4357  000DE6  C0B5  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  4358  000DEA  C0B6  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  4359  000DEE  C0B7  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  4360  000DF2  0E00               	movlw	0
  4361  000DF4  6E2F               	movwf	___fldiv@a,c
  4362  000DF6  0E00               	movlw	0
  4363  000DF8  6E30               	movwf	___fldiv@a+1,c
  4364  000DFA  0E20               	movlw	32
  4365  000DFC  6E31               	movwf	___fldiv@a+2,c
  4366  000DFE  0E41               	movlw	65
  4367  000E00  6E32               	movwf	___fldiv@a+3,c
  4368  000E02  EC2C  F00E         	call	___fldiv	;wreg free
  4369  000E06  C02B  F0B4         	movff	?___fldiv,efgtoa@u
  4370  000E0A  C02C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4371  000E0E  C02D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4372  000E12  C02E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4373                           
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4375  000E16  0100               	movlb	0	; () banked
  4376  000E18  0796               	decf	efgtoa@ne& (0+255),f,b
  4377  000E1A  A0D8               	btfss	status,0,c
  4378  000E1C  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4382  000E1E  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4383  000E20  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4384  000E22                     l5481:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4388  000E22  5194               	movf	efgtoa@m& (0+255),w,b
  4389  000E24  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4390  000E26  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4391  000E28  0A80               	xorlw	128
  4392  000E2A  6E5F               	movwf	??_efgtoa& (0+255),c
  4393  000E2C  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4394  000E2E  0A80               	xorlw	128
  4395  000E30  585F               	subwfb	??_efgtoa& (0+255),w,c
  4396  000E32  B0D8               	btfsc	status,0,c
  4397  000E34  D008               	goto	u7640
  4398                           
  4399                           ; BSR set to: 0
  4400  000E36  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4401  000E38  D72D               	goto	l5433
  4402  000E3A  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  4403  000E3C  E104               	bnz	u7640
  4404  000E3E  0E4B               	movlw	75
  4405  000E40  5DB2               	subwf	efgtoa@n& (0+255),w,b
  4406  000E42  A0D8               	btfss	status,0,c
  4407  000E44  D727               	goto	l5433
  4408  000E46                     u7640:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4412  000E46  5192               	movf	efgtoa@pp& (0+255),w,b
  4413  000E48  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4414  000E4A  B4D8               	btfsc	status,2,c
  4415                           
  4416                           ; BSR set to: 0
  4417  000E4C  A878               	btfss	_flags,4,c
  4418  000E4E  D00A               	goto	l5493
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4422  000E50  0E00               	movlw	low _dbuf
  4423  000E52  25B2               	addwf	efgtoa@n& (0+255),w,b
  4424  000E54  6ED9               	movwf	fsr2l,c
  4425  000E56  0E01               	movlw	high _dbuf
  4426  000E58  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4427  000E5A  6EDA               	movwf	fsr2h,c
  4428  000E5C  0E2E               	movlw	46
  4429  000E5E  6EDF               	movwf	indf2,c
  4430                           
  4431                           ; BSR set to: 0
  4432  000E60  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4433  000E62  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4434  000E64                     l5493:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4438  000E64  0E00               	movlw	low _dbuf
  4439  000E66  25B2               	addwf	efgtoa@n& (0+255),w,b
  4440  000E68  6ED9               	movwf	fsr2l,c
  4441  000E6A  0E01               	movlw	high _dbuf
  4442  000E6C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4443  000E6E  6EDA               	movwf	fsr2h,c
  4444  000E70  0E00               	movlw	0
  4445  000E72  6EDF               	movwf	indf2,c
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4449  000E74  0E65               	movlw	101
  4450  000E76  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4451  000E78  A4D8               	btfss	status,2,c
  4452  000E7A  D47E               	goto	l5305
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4456  000E7C  0E00               	movlw	0
  4457  000E7E  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4458  000E80  0E4F               	movlw	79
  4459  000E82  6FAA               	movwf	efgtoa@i& (0+255),b
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4463  000E84  0E00               	movlw	low _dbuf
  4464  000E86  25AA               	addwf	efgtoa@i& (0+255),w,b
  4465  000E88  6ED9               	movwf	fsr2l,c
  4466  000E8A  0E01               	movlw	high _dbuf
  4467  000E8C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4468  000E8E  6EDA               	movwf	fsr2h,c
  4469  000E90  0E00               	movlw	0
  4470  000E92  6EDF               	movwf	indf2,c
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4474  000E94  0E00               	movlw	0
  4475  000E96  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4476  000E98  0E00               	movlw	0
  4477  000E9A  6F9A               	movwf	efgtoa@sign& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4481  000E9C  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4482  000E9E  D008               	goto	l5509
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4486  000EA0  0E00               	movlw	0
  4487  000EA2  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4488  000EA4  0E01               	movlw	1
  4489  000EA6  6F9A               	movwf	efgtoa@sign& (0+255),b
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4493  000EA8  6DB0               	negf	efgtoa@e& (0+255),b
  4494  000EAA  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  4495  000EAC  B0D8               	btfsc	status,0,c
  4496  000EAE  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4497  000EB0                     l5509:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4501  000EB0  0E00               	movlw	0
  4502  000EB2  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4503  000EB4  0E02               	movlw	2
  4504  000EB6  6F9C               	movwf	efgtoa@p& (0+255),b
  4505                           
  4506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4507  000EB8  D02B               	goto	l5521
  4508  000EBA                     l5511:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4512  000EBA  07AA               	decf	efgtoa@i& (0+255),f,b
  4513  000EBC  A0D8               	btfss	status,0,c
  4514  000EBE  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4518  000EC0  0E00               	movlw	low _dbuf
  4519  000EC2  25AA               	addwf	efgtoa@i& (0+255),w,b
  4520  000EC4  6ED9               	movwf	fsr2l,c
  4521  000EC6  0E01               	movlw	high _dbuf
  4522  000EC8  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4523  000ECA  6EDA               	movwf	fsr2h,c
  4524  000ECC  C0B0  F004         	movff	efgtoa@e,___awmod@dividend
  4525  000ED0  C0B1  F005         	movff	efgtoa@e+1,___awmod@dividend+1
  4526  000ED4  0E00               	movlw	0
  4527  000ED6  6E07               	movwf	___awmod@divisor+1,c
  4528  000ED8  0E0A               	movlw	10
  4529  000EDA  6E06               	movwf	___awmod@divisor,c
  4530  000EDC  EC71  F017         	call	___awmod	;wreg free
  4531  000EE0  5004               	movf	?___awmod,w,c
  4532  000EE2  0F30               	addlw	48
  4533  000EE4  6EDF               	movwf	indf2,c
  4534                           
  4535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4536  000EE6  C0B0  F004         	movff	efgtoa@e,___awdiv@dividend
  4537  000EEA  C0B1  F005         	movff	efgtoa@e+1,___awdiv@dividend+1
  4538  000EEE  0E00               	movlw	0
  4539  000EF0  6E07               	movwf	___awdiv@divisor+1,c
  4540  000EF2  0E0A               	movlw	10
  4541  000EF4  6E06               	movwf	___awdiv@divisor,c
  4542  000EF6  ECF1  F016         	call	___awdiv	;wreg free
  4543  000EFA  C004  F0B0         	movff	?___awdiv,efgtoa@e
  4544  000EFE  C005  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  4545                           
  4546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4547  000F02  0100               	movlb	0	; () banked
  4548  000F04  079C               	decf	efgtoa@p& (0+255),f,b
  4549  000F06  A0D8               	btfss	status,0,c
  4550  000F08  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4554  000F0A  079F               	decf	efgtoa@w& (0+255),f,b
  4555  000F0C  A0D8               	btfss	status,0,c
  4556  000F0E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4557  000F10                     l5521:
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4561  000F10  51B0               	movf	efgtoa@e& (0+255),w,b
  4562  000F12  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4563  000F14  A4D8               	btfss	status,2,c
  4564  000F16  D7D1               	goto	l5511
  4565                           
  4566                           ; BSR set to: 0
  4567  000F18  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4568  000F1A  D005               	goto	u7700
  4569  000F1C  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  4570  000F1E  E1CD               	bnz	l5511
  4571  000F20  059C               	decf	efgtoa@p& (0+255),w,b
  4572  000F22  B0D8               	btfsc	status,0,c
  4573  000F24  D7CA               	goto	l5511
  4574  000F26                     u7700:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4578  000F26  07AA               	decf	efgtoa@i& (0+255),f,b
  4579  000F28  A0D8               	btfss	status,0,c
  4580  000F2A  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4584  000F2C  519A               	movf	efgtoa@sign& (0+255),w,b
  4585  000F2E  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4586  000F30  A4D8               	btfss	status,2,c
  4587  000F32  D004               	goto	l5531
  4588                           
  4589                           ; BSR set to: 0
  4590  000F34  0E00               	movlw	0
  4591  000F36  6F8B               	movwf	(_efgtoa$620+1)& (0+255),b
  4592  000F38  0E2B               	movlw	43
  4593  000F3A  D003               	goto	L6
  4594  000F3C                     l5531:
  4595                           
  4596                           ; BSR set to: 0
  4597  000F3C  0E00               	movlw	0
  4598  000F3E  6F8B               	movwf	(_efgtoa$620+1)& (0+255),b
  4599  000F40  0E2D               	movlw	45
  4600  000F42                     L6:
  4601  000F42  6F8A               	movwf	_efgtoa$620& (0+255),b
  4602                           
  4603                           ; BSR set to: 0
  4604  000F44  0E00               	movlw	low _dbuf
  4605  000F46  25AA               	addwf	efgtoa@i& (0+255),w,b
  4606  000F48  6ED9               	movwf	fsr2l,c
  4607  000F4A  0E01               	movlw	high _dbuf
  4608  000F4C  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4609  000F4E  6EDA               	movwf	fsr2h,c
  4610  000F50  C08A  FFDF         	movff	_efgtoa$620,indf2
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4614  000F54  079F               	decf	efgtoa@w& (0+255),f,b
  4615  000F56  A0D8               	btfss	status,0,c
  4616  000F58  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4620  000F5A  07AA               	decf	efgtoa@i& (0+255),f,b
  4621  000F5C  A0D8               	btfss	status,0,c
  4622  000F5E  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4623                           
  4624                           ; BSR set to: 0
  4625  000F60  0EBF               	movlw	191
  4626  000F62  6E5F               	movwf	??_efgtoa& (0+255),c
  4627  000F64  0EFF               	movlw	255
  4628  000F66  6E60               	movwf	(??_efgtoa+1)& (0+255),c
  4629  000F68  505E               	movf	efgtoa@c,w,c
  4630  000F6A  6E61               	movwf	(??_efgtoa+2)& (0+255),c
  4631  000F6C  6A62               	clrf	(??_efgtoa+3)& (0+255),c
  4632  000F6E  505F               	movf	??_efgtoa,w,c
  4633  000F70  2661               	addwf	??_efgtoa+2,f,c
  4634  000F72  5060               	movf	??_efgtoa+1,w,c
  4635  000F74  2262               	addwfc	??_efgtoa+3,f,c
  4636  000F76  5062               	movf	??_efgtoa+3,w,c
  4637  000F78  E106               	bnz	u7720
  4638  000F7A  0E1A               	movlw	26
  4639  000F7C  5C61               	subwf	??_efgtoa+2,w,c
  4640  000F7E  B0D8               	btfsc	status,0,c
  4641  000F80  D002               	goto	u7720
  4642  000F82  0E01               	movlw	1
  4643  000F84  D001               	goto	u7730
  4644  000F86                     u7720:
  4645  000F86  0E00               	movlw	0
  4646  000F88                     u7730:
  4647  000F88  6F8E               	movwf	_efgtoa$622& (0+255),b
  4648  000F8A  6B8F               	clrf	(_efgtoa$622+1)& (0+255),b
  4649                           
  4650                           ; BSR set to: 0
  4651  000F8C  518E               	movf	_efgtoa$622& (0+255),w,b
  4652  000F8E  118F               	iorwf	(_efgtoa$622+1)& (0+255),w,b
  4653  000F90  A4D8               	btfss	status,2,c
  4654  000F92  D004               	goto	l5547
  4655                           
  4656                           ; BSR set to: 0
  4657  000F94  0E00               	movlw	0
  4658  000F96  6F8D               	movwf	(_efgtoa$621+1)& (0+255),b
  4659  000F98  0E65               	movlw	101
  4660  000F9A  D003               	goto	L7
  4661  000F9C                     l5547:
  4662                           
  4663                           ; BSR set to: 0
  4664  000F9C  0E00               	movlw	0
  4665  000F9E  6F8D               	movwf	(_efgtoa$621+1)& (0+255),b
  4666  000FA0  0E45               	movlw	69
  4667  000FA2                     L7:
  4668  000FA2  6F8C               	movwf	_efgtoa$621& (0+255),b
  4669                           
  4670                           ; BSR set to: 0
  4671  000FA4  0E00               	movlw	low _dbuf
  4672  000FA6  25AA               	addwf	efgtoa@i& (0+255),w,b
  4673  000FA8  6ED9               	movwf	fsr2l,c
  4674  000FAA  0E01               	movlw	high _dbuf
  4675  000FAC  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4676  000FAE  6EDA               	movwf	fsr2h,c
  4677  000FB0  C08C  FFDF         	movff	_efgtoa$621,indf2
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4681  000FB4  079F               	decf	efgtoa@w& (0+255),f,b
  4682  000FB6  A0D8               	btfss	status,0,c
  4683  000FB8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4687  000FBA  0E00               	movlw	low _dbuf
  4688  000FBC  25B2               	addwf	efgtoa@n& (0+255),w,b
  4689  000FBE  6E04               	movwf	strcpy@dest,c
  4690  000FC0  0E01               	movlw	high _dbuf
  4691  000FC2  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4692  000FC4  6E05               	movwf	strcpy@dest+1,c
  4693  000FC6  0E00               	movlw	low _dbuf
  4694  000FC8  25AA               	addwf	efgtoa@i& (0+255),w,b
  4695  000FCA  6E06               	movwf	strcpy@src,c
  4696  000FCC  0E01               	movlw	high _dbuf
  4697  000FCE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4698  000FD0  6E07               	movwf	strcpy@src+1,c
  4699  000FD2  EC54  F018         	call	_strcpy	;wreg free
  4700  000FD6  EFBC  F003         	goto	l5305
  4701  000FDA                     __end_of_efgtoa:
  4702                           	opt callstack 0
  4703                           
  4704 ;; *************** function _tolower *****************
  4705 ;; Defined at:
  4706 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  c               2    9[COMRAM] int 
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  2    9[COMRAM] int 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4720 ;;      Params:         2       0       0       0       0       0       0
  4721 ;;      Locals:         2       0       0       0       0       0       0
  4722 ;;      Temps:          4       0       0       0       0       0       0
  4723 ;;      Totals:         8       0       0       0       0       0       0
  4724 ;;Total ram usage:        8 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    3
  4727 ;; This function calls:
  4728 ;;		_isupper
  4729 ;; This function is called by:
  4730 ;;		_efgtoa
  4731 ;;		_vfpfcnvrt
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text11
  4736  0030FA                     __ptext11:
  4737                           	opt callstack 0
  4738  0030FA                     _tolower:
  4739                           	opt callstack 24
  4740                           
  4741                           ;incstack = 0
  4742  0030FA  0EBF               	movlw	191
  4743  0030FC  6E0C               	movwf	??_tolower& (0+255),c
  4744  0030FE  0EFF               	movlw	255
  4745  003100  6E0D               	movwf	(??_tolower+1)& (0+255),c
  4746  003102  C00A  F00E         	movff	tolower@c,??_tolower+2
  4747  003106  C00B  F00F         	movff	tolower@c+1,??_tolower+3
  4748  00310A  500C               	movf	??_tolower,w,c
  4749  00310C  260E               	addwf	??_tolower+2,f,c
  4750  00310E  500D               	movf	??_tolower+1,w,c
  4751  003110  220F               	addwfc	??_tolower+3,f,c
  4752  003112  500F               	movf	??_tolower+3,w,c
  4753  003114  E106               	bnz	u6290
  4754  003116  0E1A               	movlw	26
  4755  003118  5C0E               	subwf	??_tolower+2,w,c
  4756  00311A  B0D8               	btfsc	status,0,c
  4757  00311C  D002               	goto	u6290
  4758  00311E  0E01               	movlw	1
  4759  003120  D001               	goto	u6300
  4760  003122                     u6290:
  4761  003122  0E00               	movlw	0
  4762  003124                     u6300:
  4763  003124  6E10               	movwf	_tolower$1241,c
  4764  003126  6A11               	clrf	_tolower$1241+1,c
  4765  003128  5010               	movf	_tolower$1241,w,c
  4766  00312A  1011               	iorwf	_tolower$1241+1,w,c
  4767  00312C  B4D8               	btfsc	status,2,c
  4768  00312E  D006               	goto	l1119
  4769  003130  0E20               	movlw	32
  4770  003132  100A               	iorwf	tolower@c,w,c
  4771  003134  6E0A               	movwf	?_tolower,c
  4772  003136  500B               	movf	tolower@c+1,w,c
  4773  003138  6E0B               	movwf	?_tolower+1,c
  4774  00313A  0012               	return	
  4775  00313C                     l1119:
  4776  00313C  C00A  F00A         	movff	tolower@c,?_tolower
  4777  003140  C00B  F00B         	movff	tolower@c+1,?_tolower+1
  4778  003144  0012               	return		;funcret
  4779  003146                     __end_of_tolower:
  4780                           	opt callstack 0
  4781                           
  4782 ;; *************** function _isupper *****************
  4783 ;; Defined at:
  4784 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;  c               2    3[COMRAM] int 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  2    3[COMRAM] int 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4798 ;;      Params:         2       0       0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0       0       0
  4800 ;;      Temps:          4       0       0       0       0       0       0
  4801 ;;      Totals:         6       0       0       0       0       0       0
  4802 ;;Total ram usage:        6 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    2
  4805 ;; This function calls:
  4806 ;;		Nothing
  4807 ;; This function is called by:
  4808 ;;		_efgtoa
  4809 ;;		_vfpfcnvrt
  4810 ;;		_tolower
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text12
  4815  003232                     __ptext12:
  4816                           	opt callstack 0
  4817  003232                     _isupper:
  4818                           	opt callstack 24
  4819                           
  4820                           ;incstack = 0
  4821  003232  0EBF               	movlw	191
  4822  003234  6E06               	movwf	??_isupper& (0+255),c
  4823  003236  0EFF               	movlw	255
  4824  003238  6E07               	movwf	(??_isupper+1)& (0+255),c
  4825  00323A  C004  F008         	movff	isupper@c,??_isupper+2
  4826  00323E  C005  F009         	movff	isupper@c+1,??_isupper+3
  4827  003242  5006               	movf	??_isupper,w,c
  4828  003244  2608               	addwf	??_isupper+2,f,c
  4829  003246  5007               	movf	??_isupper+1,w,c
  4830  003248  2209               	addwfc	??_isupper+3,f,c
  4831  00324A  5009               	movf	??_isupper+3,w,c
  4832  00324C  E106               	bnz	u5750
  4833  00324E  0E1A               	movlw	26
  4834  003250  5C08               	subwf	??_isupper+2,w,c
  4835  003252  B0D8               	btfsc	status,0,c
  4836  003254  D002               	goto	u5750
  4837  003256  0E01               	movlw	1
  4838  003258  D001               	goto	u5760
  4839  00325A                     u5750:
  4840  00325A  0E00               	movlw	0
  4841  00325C                     u5760:
  4842  00325C  6E04               	movwf	?_isupper,c
  4843  00325E  6A05               	clrf	?_isupper+1,c
  4844  003260  0012               	return		;funcret
  4845  003262                     __end_of_isupper:
  4846                           	opt callstack 0
  4847                           
  4848 ;; *************** function _strcpy *****************
  4849 ;; Defined at:
  4850 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  dest            2    3[COMRAM] PTR unsigned char 
  4853 ;;		 -> dbuf(80), 
  4854 ;;  src             2    5[COMRAM] PTR const unsigned char 
  4855 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4856 ;;		 -> dbuf(80), 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  d               2   11[COMRAM] PTR unsigned char 
  4859 ;;		 -> dbuf(80), 
  4860 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4861 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4862 ;;		 -> dbuf(80), 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  2    3[COMRAM] PTR unsigned char 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4872 ;;      Params:         4       0       0       0       0       0       0
  4873 ;;      Locals:         4       0       0       0       0       0       0
  4874 ;;      Temps:          2       0       0       0       0       0       0
  4875 ;;      Totals:        10       0       0       0       0       0       0
  4876 ;;Total ram usage:       10 bytes
  4877 ;; Hardware stack levels used:    1
  4878 ;; Hardware stack levels required when called:    2
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_efgtoa
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text13
  4887  0030A8                     __ptext13:
  4888                           	opt callstack 0
  4889  0030A8                     _strcpy:
  4890                           	opt callstack 24
  4891                           
  4892                           ;incstack = 0
  4893  0030A8  C006  F00A         	movff	strcpy@src,strcpy@s
  4894  0030AC  C007  F00B         	movff	strcpy@src+1,strcpy@s+1
  4895  0030B0  C004  F00C         	movff	strcpy@dest,strcpy@d
  4896  0030B4  C005  F00D         	movff	strcpy@dest+1,strcpy@d+1
  4897  0030B8                     l4717:
  4898  0030B8  500A               	movf	strcpy@s,w,c
  4899  0030BA  6E08               	movwf	??_strcpy& (0+255),c
  4900  0030BC  500B               	movf	strcpy@s+1,w,c
  4901  0030BE  6E09               	movwf	(??_strcpy+1)& (0+255),c
  4902  0030C0  4A0A               	infsnz	strcpy@s,f,c
  4903  0030C2  2A0B               	incf	strcpy@s+1,f,c
  4904  0030C4  C008  FFF6         	movff	??_strcpy,tblptrl
  4905  0030C8  C009  FFF7         	movff	??_strcpy+1,tblptrh
  4906  0030CC  6AF8               	clrf	tblptru,c
  4907  0030CE  C00C  FFD9         	movff	strcpy@d,fsr2l
  4908  0030D2  C00D  FFDA         	movff	strcpy@d+1,fsr2h
  4909  0030D6  4A0C               	infsnz	strcpy@d,f,c
  4910  0030D8  2A0D               	incf	strcpy@d+1,f,c
  4911  0030DA  0E05               	movlw	(high __ramtop+-1)
  4912  0030DC  64F7               	cpfsgt	tblptrh,c
  4913  0030DE  D003               	bra	u6277
  4914  0030E0  0008               	tblrd		*
  4915  0030E2  50F5               	movf	tablat,w,c
  4916  0030E4  D005               	bra	u6270
  4917  0030E6                     u6277:
  4918  0030E6  CFF6 FFE1          	movff	tblptrl,fsr1l
  4919  0030EA  CFF7 FFE2          	movff	tblptrh,fsr1h
  4920  0030EE  50E7               	movf	indf1,w,c
  4921  0030F0                     u6270:
  4922  0030F0  6EDF               	movwf	indf2,c
  4923  0030F2  50DF               	movf	indf2,w,c
  4924  0030F4  B4D8               	btfsc	status,2,c
  4925  0030F6  0012               	return	
  4926  0030F8  D7DF               	goto	l4717
  4927  0030FA                     __end_of_strcpy:
  4928                           	opt callstack 0
  4929                           
  4930 ;; *************** function _pad *****************
  4931 ;; Defined at:
  4932 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  4935 ;;		 -> sprintf@f(6), 
  4936 ;;  buf             2   21[COMRAM] PTR unsigned char 
  4937 ;;		 -> dbuf(80), 
  4938 ;;  p               2   23[COMRAM] int 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  w               2   28[COMRAM] int 
  4941 ;;  i               2   26[COMRAM] int 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  2   19[COMRAM] int 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4951 ;;      Params:         6       0       0       0       0       0       0
  4952 ;;      Locals:         4       0       0       0       0       0       0
  4953 ;;      Temps:          1       0       0       0       0       0       0
  4954 ;;      Totals:        11       0       0       0       0       0       0
  4955 ;;Total ram usage:       11 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    5
  4958 ;; This function calls:
  4959 ;;		_fputc
  4960 ;;		_fputs
  4961 ;;		_strlen
  4962 ;; This function is called by:
  4963 ;;		_efgtoa
  4964 ;;		_utoa
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text14
  4969  002CC2                     __ptext14:
  4970                           	opt callstack 0
  4971  002CC2                     _pad:
  4972                           	opt callstack 21
  4973                           
  4974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4975                           
  4976                           ;incstack = 0
  4977  002CC2  A078               	btfss	_flags,0,c
  4978  002CC4  D00A               	goto	l4675
  4979                           
  4980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  4981  002CC6  C016  F00D         	movff	pad@buf,fputs@s
  4982  002CCA  C017  F00E         	movff	pad@buf+1,fputs@s+1
  4983  002CCE  C014  F00F         	movff	pad@fp,fputs@fp
  4984  002CD2  C015  F010         	movff	pad@fp+1,fputs@fp+1
  4985  002CD6  ECE5  F018         	call	_fputs	;wreg free
  4986  002CDA                     l4675:
  4987                           
  4988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  4989  002CDA  BE19               	btfsc	pad@p+1,7,c
  4990  002CDC  D005               	goto	l4679
  4991  002CDE  C018  F01D         	movff	pad@p,pad@w
  4992  002CE2  C019  F01E         	movff	pad@p+1,pad@w+1
  4993  002CE6  D004               	goto	l148
  4994  002CE8                     l4679:
  4995  002CE8  0E00               	movlw	0
  4996  002CEA  6E1E               	movwf	pad@w+1,c
  4997  002CEC  0E00               	movlw	0
  4998  002CEE  6E1D               	movwf	pad@w,c
  4999  002CF0                     l148:
  5000                           
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5002  002CF0  0E00               	movlw	0
  5003  002CF2  6E1C               	movwf	pad@i+1,c
  5004  002CF4  0E00               	movlw	0
  5005  002CF6  6E1B               	movwf	pad@i,c
  5006                           
  5007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5008  002CF8  D00C               	goto	l4685
  5009  002CFA                     l4681:
  5010                           
  5011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5012  002CFA  0E00               	movlw	0
  5013  002CFC  6E05               	movwf	fputc@c+1,c
  5014  002CFE  0E20               	movlw	32
  5015  002D00  6E04               	movwf	fputc@c,c
  5016  002D02  C014  F006         	movff	pad@fp,fputc@fp
  5017  002D06  C015  F007         	movff	pad@fp+1,fputc@fp+1
  5018  002D0A  EC11  F016         	call	_fputc	;wreg free
  5019                           
  5020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5021  002D0E  4A1B               	infsnz	pad@i,f,c
  5022  002D10  2A1C               	incf	pad@i+1,f,c
  5023  002D12                     l4685:
  5024                           
  5025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5026  002D12  501D               	movf	pad@w,w,c
  5027  002D14  5C1B               	subwf	pad@i,w,c
  5028  002D16  501C               	movf	pad@i+1,w,c
  5029  002D18  0A80               	xorlw	128
  5030  002D1A  6E1A               	movwf	??_pad& (0+255),c
  5031  002D1C  501E               	movf	pad@w+1,w,c
  5032  002D1E  0A80               	xorlw	128
  5033  002D20  581A               	subwfb	??_pad& (0+255),w,c
  5034  002D22  A0D8               	btfss	status,0,c
  5035  002D24  D7EA               	goto	l4681
  5036                           
  5037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5038  002D26  B078               	btfsc	_flags,0,c
  5039  002D28  D00A               	goto	l4689
  5040                           
  5041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5042  002D2A  C016  F00D         	movff	pad@buf,fputs@s
  5043  002D2E  C017  F00E         	movff	pad@buf+1,fputs@s+1
  5044  002D32  C014  F00F         	movff	pad@fp,fputs@fp
  5045  002D36  C015  F010         	movff	pad@fp+1,fputs@fp+1
  5046  002D3A  ECE5  F018         	call	_fputs	;wreg free
  5047  002D3E                     l4689:
  5048                           
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5050  002D3E  C016  F004         	movff	pad@buf,strlen@s
  5051  002D42  C017  F005         	movff	pad@buf+1,strlen@s+1
  5052  002D46  EC60  F019         	call	_strlen	;wreg free
  5053  002D4A  501D               	movf	pad@w,w,c
  5054  002D4C  2404               	addwf	?_strlen,w,c
  5055  002D4E  6E14               	movwf	?_pad,c
  5056  002D50  501E               	movf	pad@w+1,w,c
  5057  002D52  2005               	addwfc	?_strlen+1,w,c
  5058  002D54  6E15               	movwf	?_pad+1,c
  5059  002D56  0012               	return		;funcret
  5060  002D58                     __end_of_pad:
  5061                           	opt callstack 0
  5062                           
  5063 ;; *************** function _strlen *****************
  5064 ;; Defined at:
  5065 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  s               2    3[COMRAM] PTR const unsigned char 
  5068 ;;		 -> dbuf(80), 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  a               2    5[COMRAM] PTR const unsigned char 
  5071 ;;		 -> dbuf(80), 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2    3[COMRAM] unsigned int 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5081 ;;      Params:         2       0       0       0       0       0       0
  5082 ;;      Locals:         2       0       0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0
  5084 ;;      Totals:         4       0       0       0       0       0       0
  5085 ;;Total ram usage:        4 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    2
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_pad
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text15
  5096  0032C0                     __ptext15:
  5097                           	opt callstack 0
  5098  0032C0                     _strlen:
  5099                           	opt callstack 23
  5100                           
  5101                           ;incstack = 0
  5102  0032C0  C004  F006         	movff	strlen@s,strlen@a
  5103  0032C4  C005  F007         	movff	strlen@s+1,strlen@a+1
  5104  0032C8  D002               	goto	l4459
  5105  0032CA                     l4457:
  5106  0032CA  4A04               	infsnz	strlen@s,f,c
  5107  0032CC  2A05               	incf	strlen@s+1,f,c
  5108  0032CE                     l4459:
  5109  0032CE  C004  FFD9         	movff	strlen@s,fsr2l
  5110  0032D2  C005  FFDA         	movff	strlen@s+1,fsr2h
  5111  0032D6  50DF               	movf	indf2,w,c
  5112  0032D8  A4D8               	btfss	status,2,c
  5113  0032DA  D7F7               	goto	l4457
  5114  0032DC  5006               	movf	strlen@a,w,c
  5115  0032DE  5C04               	subwf	strlen@s,w,c
  5116  0032E0  6E04               	movwf	?_strlen,c
  5117  0032E2  5007               	movf	strlen@a+1,w,c
  5118  0032E4  5805               	subwfb	strlen@s+1,w,c
  5119  0032E6  6E05               	movwf	?_strlen+1,c
  5120  0032E8  0012               	return		;funcret
  5121  0032EA                     __end_of_strlen:
  5122                           	opt callstack 0
  5123                           
  5124 ;; *************** function _fputs *****************
  5125 ;; Defined at:
  5126 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  s               2   12[COMRAM] PTR const unsigned char 
  5129 ;;		 -> dbuf(80), 
  5130 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  5131 ;;		 -> sprintf@f(6), 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  i               2   17[COMRAM] int 
  5134 ;;  c               1   16[COMRAM] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  2   12[COMRAM] int 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5144 ;;      Params:         4       0       0       0       0       0       0
  5145 ;;      Locals:         3       0       0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0
  5147 ;;      Totals:         7       0       0       0       0       0       0
  5148 ;;Total ram usage:        7 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    4
  5151 ;; This function calls:
  5152 ;;		_fputc
  5153 ;; This function is called by:
  5154 ;;		_pad
  5155 ;; This function uses a non-reentrant model
  5156 ;;
  5157                           
  5158                           	psect	text16
  5159  0031CA                     __ptext16:
  5160                           	opt callstack 0
  5161  0031CA                     _fputs:
  5162                           	opt callstack 21
  5163                           
  5164                           ;incstack = 0
  5165  0031CA  0E00               	movlw	0
  5166  0031CC  6E13               	movwf	fputs@i+1,c
  5167  0031CE  0E00               	movlw	0
  5168  0031D0  6E12               	movwf	fputs@i,c
  5169  0031D2  D00B               	goto	l4453
  5170  0031D4                     l4449:
  5171  0031D4  C011  F004         	movff	fputs@c,fputc@c
  5172  0031D8  6A05               	clrf	fputc@c+1,c
  5173  0031DA  C00F  F006         	movff	fputs@fp,fputc@fp
  5174  0031DE  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  5175  0031E2  EC11  F016         	call	_fputc	;wreg free
  5176  0031E6  4A12               	infsnz	fputs@i,f,c
  5177  0031E8  2A13               	incf	fputs@i+1,f,c
  5178  0031EA                     l4453:
  5179  0031EA  5012               	movf	fputs@i,w,c
  5180  0031EC  240D               	addwf	fputs@s,w,c
  5181  0031EE  6ED9               	movwf	fsr2l,c
  5182  0031F0  5013               	movf	fputs@i+1,w,c
  5183  0031F2  200E               	addwfc	fputs@s+1,w,c
  5184  0031F4  6EDA               	movwf	fsr2h,c
  5185  0031F6  50DF               	movf	indf2,w,c
  5186  0031F8  6E11               	movwf	fputs@c,c
  5187  0031FA  5011               	movf	fputs@c,w,c
  5188  0031FC  B4D8               	btfsc	status,2,c
  5189  0031FE  0012               	return	
  5190  003200  D7E9               	goto	l4449
  5191  003202                     __end_of_fputs:
  5192                           	opt callstack 0
  5193                           
  5194 ;; *************** function _fputc *****************
  5195 ;; Defined at:
  5196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  c               2    3[COMRAM] int 
  5199 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  5200 ;;		 -> sprintf@f(6), 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;		None
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    3[COMRAM] int 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5212 ;;      Params:         4       0       0       0       0       0       0
  5213 ;;      Locals:         0       0       0       0       0       0       0
  5214 ;;      Temps:          5       0       0       0       0       0       0
  5215 ;;      Totals:         9       0       0       0       0       0       0
  5216 ;;Total ram usage:        9 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    3
  5219 ;; This function calls:
  5220 ;;		_putch
  5221 ;; This function is called by:
  5222 ;;		_pad
  5223 ;;		_vfpfcnvrt
  5224 ;;		_fputs
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text17
  5229  002C22                     __ptext17:
  5230                           	opt callstack 0
  5231  002C22                     _fputc:
  5232                           	opt callstack 21
  5233                           
  5234                           ;incstack = 0
  5235  002C22  5006               	movf	fputc@fp,w,c
  5236  002C24  1007               	iorwf	fputc@fp+1,w,c
  5237  002C26  B4D8               	btfsc	status,2,c
  5238  002C28  D004               	goto	u5700
  5239  002C2A  5006               	movf	fputc@fp,w,c
  5240  002C2C  1007               	iorwf	fputc@fp+1,w,c
  5241  002C2E  A4D8               	btfss	status,2,c
  5242  002C30  D004               	goto	l4439
  5243  002C32                     u5700:
  5244  002C32  5004               	movf	fputc@c,w,c
  5245  002C34  EC9B  F019         	call	_putch
  5246  002C38  0012               	return	
  5247  002C3A                     l4439:
  5248  002C3A  EE20 F004          	lfsr	2,4
  5249  002C3E  5006               	movf	fputc@fp,w,c
  5250  002C40  26D9               	addwf	fsr2l,f,c
  5251  002C42  5007               	movf	fputc@fp+1,w,c
  5252  002C44  22DA               	addwfc	fsr2h,f,c
  5253  002C46  50DE               	movf	postinc2,w,c
  5254  002C48  10DE               	iorwf	postinc2,w,c
  5255  002C4A  B4D8               	btfsc	status,2,c
  5256  002C4C  D016               	goto	u5720
  5257  002C4E  EE20 F004          	lfsr	2,4
  5258  002C52  5006               	movf	fputc@fp,w,c
  5259  002C54  26D9               	addwf	fsr2l,f,c
  5260  002C56  5007               	movf	fputc@fp+1,w,c
  5261  002C58  22DA               	addwfc	fsr2h,f,c
  5262  002C5A  EE10 F002          	lfsr	1,2
  5263  002C5E  5006               	movf	fputc@fp,w,c
  5264  002C60  26E1               	addwf	fsr1l,f,c
  5265  002C62  5007               	movf	fputc@fp+1,w,c
  5266  002C64  22E2               	addwfc	fsr1h,f,c
  5267  002C66  50DE               	movf	postinc2,w,c
  5268  002C68  5CE6               	subwf	postinc1,w,c
  5269  002C6A  50E6               	movf	postinc1,w,c
  5270  002C6C  0A80               	xorlw	128
  5271  002C6E  6E0C               	movwf	(??_fputc+4)& (0+255),c
  5272  002C70  50DE               	movf	postinc2,w,c
  5273  002C72  0A80               	xorlw	128
  5274  002C74  580C               	subwfb	(??_fputc+4)& (0+255),w,c
  5275  002C76  B0D8               	btfsc	status,0,c
  5276  002C78  0012               	return	
  5277  002C7A                     u5720:
  5278  002C7A  EE20 F002          	lfsr	2,2
  5279  002C7E  5006               	movf	fputc@fp,w,c
  5280  002C80  26D9               	addwf	fsr2l,f,c
  5281  002C82  5007               	movf	fputc@fp+1,w,c
  5282  002C84  22DA               	addwfc	fsr2h,f,c
  5283  002C86  CFDE F008          	movff	postinc2,??_fputc
  5284  002C8A  CFDD F009          	movff	postdec2,??_fputc+1
  5285  002C8E  C006  FFD9         	movff	fputc@fp,fsr2l
  5286  002C92  C007  FFDA         	movff	fputc@fp+1,fsr2h
  5287  002C96  CFDE F00A          	movff	postinc2,??_fputc+2
  5288  002C9A  CFDD F00B          	movff	postdec2,??_fputc+3
  5289  002C9E  5008               	movf	??_fputc,w,c
  5290  002CA0  240A               	addwf	??_fputc+2,w,c
  5291  002CA2  6ED9               	movwf	fsr2l,c
  5292  002CA4  5009               	movf	??_fputc+1,w,c
  5293  002CA6  200B               	addwfc	??_fputc+3,w,c
  5294  002CA8  6EDA               	movwf	fsr2h,c
  5295  002CAA  C004  FFDF         	movff	fputc@c,indf2
  5296  002CAE  EE20 F002          	lfsr	2,2
  5297  002CB2  5006               	movf	fputc@fp,w,c
  5298  002CB4  26D9               	addwf	fsr2l,f,c
  5299  002CB6  5007               	movf	fputc@fp+1,w,c
  5300  002CB8  22DA               	addwfc	fsr2h,f,c
  5301  002CBA  2ADE               	incf	postinc2,f,c
  5302  002CBC  0E00               	movlw	0
  5303  002CBE  22DD               	addwfc	postdec2,f,c
  5304  002CC0  0012               	return		;funcret
  5305  002CC2                     __end_of_fputc:
  5306                           	opt callstack 0
  5307                           
  5308 ;; *************** function _putch *****************
  5309 ;; Defined at:
  5310 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  c               1    wreg     unsigned char 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;  c               1    0[COMRAM] unsigned char 
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5324 ;;      Params:         0       0       0       0       0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0
  5326 ;;      Temps:          0       0       0       0       0       0       0
  5327 ;;      Totals:         0       0       0       0       0       0       0
  5328 ;;Total ram usage:        0 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:    2
  5331 ;; This function calls:
  5332 ;;		Nothing
  5333 ;; This function is called by:
  5334 ;;		_fputc
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text18
  5339  003336                     __ptext18:
  5340                           	opt callstack 0
  5341  003336                     _putch:
  5342                           	opt callstack 21
  5343                           
  5344                           ;incstack = 0
  5345  003336  0012               	return		;funcret
  5346  003338                     __end_of_putch:
  5347                           	opt callstack 0
  5348                           
  5349 ;; *************** function _floorf *****************
  5350 ;; Defined at:
  5351 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  x               4   67[COMRAM] float 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  u               4   83[COMRAM] struct .
  5356 ;;  m               4   77[COMRAM] unsigned long 
  5357 ;;  e               2   81[COMRAM] int 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  4   67[COMRAM] float 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5367 ;;      Params:         4       0       0       0       0       0       0
  5368 ;;      Locals:        10       0       0       0       0       0       0
  5369 ;;      Temps:          6       0       0       0       0       0       0
  5370 ;;      Totals:        20       0       0       0       0       0       0
  5371 ;;Total ram usage:       20 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    2
  5374 ;; This function calls:
  5375 ;;		Nothing
  5376 ;; This function is called by:
  5377 ;;		_efgtoa
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text19
  5382  0020BA                     __ptext19:
  5383                           	opt callstack 0
  5384  0020BA                     _floorf:
  5385                           	opt callstack 24
  5386                           
  5387                           ;incstack = 0
  5388  0020BA  C0E0  F054         	movff	floorf@F524,floorf@u
  5389  0020BE  C0E1  F055         	movff	floorf@F524+1,floorf@u+1
  5390  0020C2  C0E2  F056         	movff	floorf@F524+2,floorf@u+2
  5391  0020C6  C0E3  F057         	movff	floorf@F524+3,floorf@u+3
  5392  0020CA  C044  F054         	movff	floorf@x,floorf@u
  5393  0020CE  C045  F055         	movff	floorf@x+1,floorf@u+1
  5394  0020D2  C046  F056         	movff	floorf@x+2,floorf@u+2
  5395  0020D6  C047  F057         	movff	floorf@x+3,floorf@u+3
  5396  0020DA  0E81               	movlw	129
  5397  0020DC  6E48               	movwf	??_floorf& (0+255),c
  5398  0020DE  0EFF               	movlw	255
  5399  0020E0  6E49               	movwf	(??_floorf+1)& (0+255),c
  5400  0020E2  C054  F04A         	movff	floorf@u,??_floorf+2
  5401  0020E6  C055  F04B         	movff	floorf@u+1,??_floorf+3
  5402  0020EA  C056  F04C         	movff	floorf@u+2,??_floorf+4
  5403  0020EE  C057  F04D         	movff	floorf@u+3,??_floorf+5
  5404  0020F2  0E18               	movlw	24
  5405  0020F4  D005               	goto	u6320
  5406  0020F6                     u6325:
  5407  0020F6  90D8               	bcf	status,0,c
  5408  0020F8  324D               	rrcf	??_floorf+5,f,c
  5409  0020FA  324C               	rrcf	??_floorf+4,f,c
  5410  0020FC  324B               	rrcf	??_floorf+3,f,c
  5411  0020FE  324A               	rrcf	??_floorf+2,f,c
  5412  002100                     u6320:
  5413  002100  2EE8               	decfsz	wreg,f,c
  5414  002102  D7F9               	goto	u6325
  5415  002104  504A               	movf	??_floorf+2,w,c
  5416  002106  2448               	addwf	??_floorf,w,c
  5417  002108  6E52               	movwf	floorf@e,c
  5418  00210A  0E00               	movlw	0
  5419  00210C  2049               	addwfc	??_floorf+1,w,c
  5420  00210E  6E53               	movwf	floorf@e+1,c
  5421  002110  BE53               	btfsc	floorf@e+1,7,c
  5422  002112  D00F               	goto	l4735
  5423  002114  5053               	movf	floorf@e+1,w,c
  5424  002116  E104               	bnz	u6330
  5425  002118  0E17               	movlw	23
  5426  00211A  5C52               	subwf	floorf@e,w,c
  5427  00211C  A0D8               	btfss	status,0,c
  5428  00211E  D009               	goto	l4735
  5429  002120                     u6330:
  5430  002120  C044  F044         	movff	floorf@x,?_floorf
  5431  002124  C045  F045         	movff	floorf@x+1,?_floorf+1
  5432  002128  C046  F046         	movff	floorf@x+2,?_floorf+2
  5433  00212C  C047  F047         	movff	floorf@x+3,?_floorf+3
  5434  002130  0012               	return	
  5435  002132                     l4735:
  5436  002132  BE53               	btfsc	floorf@e+1,7,c
  5437  002134  D05E               	goto	l4745
  5438  002136  C052  F048         	movff	floorf@e,??_floorf
  5439  00213A  0EFF               	movlw	255
  5440  00213C  6E49               	movwf	(??_floorf+1)& (0+255),c
  5441  00213E  0EFF               	movlw	255
  5442  002140  6E4A               	movwf	(??_floorf+2)& (0+255),c
  5443  002142  0E7F               	movlw	127
  5444  002144  6E4B               	movwf	(??_floorf+3)& (0+255),c
  5445  002146  0E00               	movlw	0
  5446  002148  6E4C               	movwf	(??_floorf+4)& (0+255),c
  5447  00214A                     u6355:
  5448  00214A  6648               	tstfsz	??_floorf,c
  5449  00214C  D001               	goto	u6356
  5450  00214E  D007               	goto	u6357
  5451  002150                     u6356:
  5452  002150  344C               	rlcf	??_floorf+4,w,c
  5453  002152  324C               	rrcf	??_floorf+4,f,c
  5454  002154  324B               	rrcf	??_floorf+3,f,c
  5455  002156  324A               	rrcf	??_floorf+2,f,c
  5456  002158  3249               	rrcf	??_floorf+1,f,c
  5457  00215A  2E48               	decfsz	??_floorf,f,c
  5458  00215C  D7F6               	goto	u6355
  5459  00215E                     u6357:
  5460  00215E  C049  F04E         	movff	??_floorf+1,floorf@m
  5461  002162  C04A  F04F         	movff	??_floorf+2,floorf@m+1
  5462  002166  C04B  F050         	movff	??_floorf+3,floorf@m+2
  5463  00216A  C04C  F051         	movff	??_floorf+4,floorf@m+3
  5464  00216E  504E               	movf	floorf@m,w,c
  5465  002170  1454               	andwf	floorf@u,w,c
  5466  002172  6E48               	movwf	??_floorf& (0+255),c
  5467  002174  504F               	movf	floorf@m+1,w,c
  5468  002176  1455               	andwf	floorf@u+1,w,c
  5469  002178  6E49               	movwf	(??_floorf+1)& (0+255),c
  5470  00217A  5050               	movf	floorf@m+2,w,c
  5471  00217C  1456               	andwf	floorf@u+2,w,c
  5472  00217E  6E4A               	movwf	(??_floorf+2)& (0+255),c
  5473  002180  5051               	movf	floorf@m+3,w,c
  5474  002182  1457               	andwf	floorf@u+3,w,c
  5475  002184  6E4B               	movwf	(??_floorf+3)& (0+255),c
  5476  002186  5048               	movf	??_floorf,w,c
  5477  002188  1049               	iorwf	??_floorf+1,w,c
  5478  00218A  104A               	iorwf	??_floorf+2,w,c
  5479  00218C  104B               	iorwf	??_floorf+3,w,c
  5480  00218E  B4D8               	btfsc	status,2,c
  5481  002190  D7C7               	goto	u6330
  5482  002192  C054  F048         	movff	floorf@u,??_floorf
  5483  002196  C055  F049         	movff	floorf@u+1,??_floorf+1
  5484  00219A  C056  F04A         	movff	floorf@u+2,??_floorf+2
  5485  00219E  C057  F04B         	movff	floorf@u+3,??_floorf+3
  5486  0021A2  0E20               	movlw	32
  5487  0021A4  D005               	goto	u6370
  5488  0021A6                     u6375:
  5489  0021A6  90D8               	bcf	status,0,c
  5490  0021A8  324B               	rrcf	??_floorf+3,f,c
  5491  0021AA  324A               	rrcf	??_floorf+2,f,c
  5492  0021AC  3249               	rrcf	??_floorf+1,f,c
  5493  0021AE  3248               	rrcf	??_floorf,f,c
  5494  0021B0                     u6370:
  5495  0021B0  2EE8               	decfsz	wreg,f,c
  5496  0021B2  D7F9               	goto	u6375
  5497  0021B4  5048               	movf	??_floorf,w,c
  5498  0021B6  1049               	iorwf	??_floorf+1,w,c
  5499  0021B8  104A               	iorwf	??_floorf+2,w,c
  5500  0021BA  104B               	iorwf	??_floorf+3,w,c
  5501  0021BC  B4D8               	btfsc	status,2,c
  5502  0021BE  D008               	goto	l1039
  5503  0021C0  504E               	movf	floorf@m,w,c
  5504  0021C2  2654               	addwf	floorf@u,f,c
  5505  0021C4  504F               	movf	floorf@m+1,w,c
  5506  0021C6  2255               	addwfc	floorf@u+1,f,c
  5507  0021C8  5050               	movf	floorf@m+2,w,c
  5508  0021CA  2256               	addwfc	floorf@u+2,f,c
  5509  0021CC  5051               	movf	floorf@m+3,w,c
  5510  0021CE  2257               	addwfc	floorf@u+3,f,c
  5511  0021D0                     l1039:
  5512  0021D0  1C4E               	comf	floorf@m,w,c
  5513  0021D2  6E48               	movwf	??_floorf& (0+255),c
  5514  0021D4  1C4F               	comf	floorf@m+1,w,c
  5515  0021D6  6E49               	movwf	(??_floorf+1)& (0+255),c
  5516  0021D8  1C50               	comf	floorf@m+2,w,c
  5517  0021DA  6E4A               	movwf	(??_floorf+2)& (0+255),c
  5518  0021DC  1C51               	comf	floorf@m+3,w,c
  5519  0021DE  6E4B               	movwf	(??_floorf+3)& (0+255),c
  5520  0021E0  5048               	movf	??_floorf,w,c
  5521  0021E2  1654               	andwf	floorf@u,f,c
  5522  0021E4  5049               	movf	??_floorf+1,w,c
  5523  0021E6  1655               	andwf	floorf@u+1,f,c
  5524  0021E8  504A               	movf	??_floorf+2,w,c
  5525  0021EA  1656               	andwf	floorf@u+2,f,c
  5526  0021EC  504B               	movf	??_floorf+3,w,c
  5527  0021EE  1657               	andwf	floorf@u+3,f,c
  5528  0021F0  D036               	goto	l4753
  5529  0021F2                     l4745:
  5530  0021F2  C054  F048         	movff	floorf@u,??_floorf
  5531  0021F6  C055  F049         	movff	floorf@u+1,??_floorf+1
  5532  0021FA  C056  F04A         	movff	floorf@u+2,??_floorf+2
  5533  0021FE  C057  F04B         	movff	floorf@u+3,??_floorf+3
  5534  002202  0E20               	movlw	32
  5535  002204  D005               	goto	u6390
  5536  002206                     u6395:
  5537  002206  90D8               	bcf	status,0,c
  5538  002208  324B               	rrcf	??_floorf+3,f,c
  5539  00220A  324A               	rrcf	??_floorf+2,f,c
  5540  00220C  3249               	rrcf	??_floorf+1,f,c
  5541  00220E  3248               	rrcf	??_floorf,f,c
  5542  002210                     u6390:
  5543  002210  2EE8               	decfsz	wreg,f,c
  5544  002212  D7F9               	goto	u6395
  5545  002214  5048               	movf	??_floorf,w,c
  5546  002216  1049               	iorwf	??_floorf+1,w,c
  5547  002218  104A               	iorwf	??_floorf+2,w,c
  5548  00221A  104B               	iorwf	??_floorf+3,w,c
  5549  00221C  A4D8               	btfss	status,2,c
  5550  00221E  D008               	goto	l4749
  5551  002220  0E00               	movlw	0
  5552  002222  6E54               	movwf	floorf@u,c
  5553  002224  0E00               	movlw	0
  5554  002226  6E55               	movwf	floorf@u+1,c
  5555  002228  0E00               	movlw	0
  5556  00222A  6E56               	movwf	floorf@u+2,c
  5557  00222C  0E00               	movlw	0
  5558  00222E  D016               	goto	L8
  5559  002230                     l4749:
  5560  002230  90D8               	bcf	status,0,c
  5561  002232  3454               	rlcf	floorf@u,w,c
  5562  002234  6E48               	movwf	??_floorf& (0+255),c
  5563  002236  3455               	rlcf	floorf@u+1,w,c
  5564  002238  6E49               	movwf	(??_floorf+1)& (0+255),c
  5565  00223A  3456               	rlcf	floorf@u+2,w,c
  5566  00223C  6E4A               	movwf	(??_floorf+2)& (0+255),c
  5567  00223E  3457               	rlcf	floorf@u+3,w,c
  5568  002240  6E4B               	movwf	(??_floorf+3)& (0+255),c
  5569  002242  5048               	movf	??_floorf,w,c
  5570  002244  1049               	iorwf	??_floorf+1,w,c
  5571  002246  104A               	iorwf	??_floorf+2,w,c
  5572  002248  104B               	iorwf	??_floorf+3,w,c
  5573  00224A  B4D8               	btfsc	status,2,c
  5574  00224C  D008               	goto	l4753
  5575  00224E  0E00               	movlw	0
  5576  002250  6E54               	movwf	floorf@u,c
  5577  002252  0E00               	movlw	0
  5578  002254  6E55               	movwf	floorf@u+1,c
  5579  002256  0E80               	movlw	128
  5580  002258  6E56               	movwf	floorf@u+2,c
  5581  00225A  0EBF               	movlw	191
  5582  00225C                     L8:
  5583  00225C  6E57               	movwf	floorf@u+3,c
  5584  00225E                     l4753:
  5585  00225E  C054  F044         	movff	floorf@u,?_floorf
  5586  002262  C055  F045         	movff	floorf@u+1,?_floorf+1
  5587  002266  C056  F046         	movff	floorf@u+2,?_floorf+2
  5588  00226A  C057  F047         	movff	floorf@u+3,?_floorf+3
  5589  00226E  0012               	return		;funcret
  5590  002270                     __end_of_floorf:
  5591                           	opt callstack 0
  5592                           
  5593 ;; *************** function ___fpclassifyf *****************
  5594 ;; Defined at:
  5595 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  x               4    3[COMRAM] float 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  u               4   13[COMRAM] struct .
  5600 ;;  e               2   11[COMRAM] int 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  2    3[COMRAM] int 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5610 ;;      Params:         4       0       0       0       0       0       0
  5611 ;;      Locals:         6       0       0       0       0       0       0
  5612 ;;      Temps:          4       0       0       0       0       0       0
  5613 ;;      Totals:        14       0       0       0       0       0       0
  5614 ;;Total ram usage:       14 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    2
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_efgtoa
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text20
  5625  002922                     __ptext20:
  5626                           	opt callstack 0
  5627  002922                     ___fpclassifyf:
  5628                           	opt callstack 24
  5629                           
  5630                           ;incstack = 0
  5631  002922  C0E4  F00E         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5632  002926  C0E5  F00F         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5633  00292A  C0E6  F010         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5634  00292E  C0E7  F011         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5635  002932  C004  F00E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5636  002936  C005  F00F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5637  00293A  C006  F010         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5638  00293E  C007  F011         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5639  002942  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5640  002946  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5641  00294A  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5642  00294E  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5643  002952  0E18               	movlw	24
  5644  002954  D005               	goto	u6200
  5645  002956                     u6205:
  5646  002956  90D8               	bcf	status,0,c
  5647  002958  320B               	rrcf	??___fpclassifyf+3,f,c
  5648  00295A  320A               	rrcf	??___fpclassifyf+2,f,c
  5649  00295C  3209               	rrcf	??___fpclassifyf+1,f,c
  5650  00295E  3208               	rrcf	??___fpclassifyf,f,c
  5651  002960                     u6200:
  5652  002960  2EE8               	decfsz	wreg,f,c
  5653  002962  D7F9               	goto	u6205
  5654  002964  5008               	movf	??___fpclassifyf,w,c
  5655  002966  6E0C               	movwf	___fpclassifyf@e,c
  5656  002968  6A0D               	clrf	___fpclassifyf@e+1,c
  5657  00296A  500C               	movf	___fpclassifyf@e,w,c
  5658  00296C  100D               	iorwf	___fpclassifyf@e+1,w,c
  5659  00296E  A4D8               	btfss	status,2,c
  5660  002970  D019               	goto	l4705
  5661  002972  90D8               	bcf	status,0,c
  5662  002974  340E               	rlcf	___fpclassifyf@u,w,c
  5663  002976  6E08               	movwf	??___fpclassifyf& (0+255),c
  5664  002978  340F               	rlcf	___fpclassifyf@u+1,w,c
  5665  00297A  6E09               	movwf	(??___fpclassifyf+1)& (0+255),c
  5666  00297C  3410               	rlcf	___fpclassifyf@u+2,w,c
  5667  00297E  6E0A               	movwf	(??___fpclassifyf+2)& (0+255),c
  5668  002980  3411               	rlcf	___fpclassifyf@u+3,w,c
  5669  002982  6E0B               	movwf	(??___fpclassifyf+3)& (0+255),c
  5670  002984  5008               	movf	??___fpclassifyf,w,c
  5671  002986  1009               	iorwf	??___fpclassifyf+1,w,c
  5672  002988  100A               	iorwf	??___fpclassifyf+2,w,c
  5673  00298A  100B               	iorwf	??___fpclassifyf+3,w,c
  5674  00298C  A4D8               	btfss	status,2,c
  5675  00298E  D005               	goto	l4701
  5676  002990  0E00               	movlw	0
  5677  002992  6E05               	movwf	?___fpclassifyf+1,c
  5678  002994  0E02               	movlw	2
  5679  002996  6E04               	movwf	?___fpclassifyf,c
  5680  002998  0012               	return	
  5681  00299A                     l4701:
  5682  00299A  0E00               	movlw	0
  5683  00299C  6E05               	movwf	?___fpclassifyf+1,c
  5684  00299E  0E03               	movlw	3
  5685  0029A0  6E04               	movwf	?___fpclassifyf,c
  5686  0029A2  0012               	return	
  5687  0029A4                     l4705:
  5688  0029A4  280C               	incf	___fpclassifyf@e,w,c
  5689  0029A6  100D               	iorwf	___fpclassifyf@e+1,w,c
  5690  0029A8  A4D8               	btfss	status,2,c
  5691  0029AA  D01C               	goto	l4711
  5692  0029AC  C00E  F008         	movff	___fpclassifyf@u,??___fpclassifyf
  5693  0029B0  C00F  F009         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5694  0029B4  C010  F00A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5695  0029B8  C011  F00B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5696  0029BC  0E09               	movlw	9
  5697  0029BE                     u6245:
  5698  0029BE  90D8               	bcf	status,0,c
  5699  0029C0  3608               	rlcf	??___fpclassifyf,f,c
  5700  0029C2  3609               	rlcf	??___fpclassifyf+1,f,c
  5701  0029C4  360A               	rlcf	??___fpclassifyf+2,f,c
  5702  0029C6  360B               	rlcf	??___fpclassifyf+3,f,c
  5703  0029C8  2EE8               	decfsz	wreg,f,c
  5704  0029CA  D7F9               	goto	u6245
  5705  0029CC  5008               	movf	??___fpclassifyf,w,c
  5706  0029CE  1009               	iorwf	??___fpclassifyf+1,w,c
  5707  0029D0  100A               	iorwf	??___fpclassifyf+2,w,c
  5708  0029D2  100B               	iorwf	??___fpclassifyf+3,w,c
  5709  0029D4  A4D8               	btfss	status,2,c
  5710  0029D6  D002               	goto	u6250
  5711  0029D8  0E01               	movlw	1
  5712  0029DA  D001               	goto	u6260
  5713  0029DC                     u6250:
  5714  0029DC  0E00               	movlw	0
  5715  0029DE                     u6260:
  5716  0029DE  6E04               	movwf	?___fpclassifyf,c
  5717  0029E0  6A05               	clrf	?___fpclassifyf+1,c
  5718  0029E2  0012               	return	
  5719  0029E4                     l4711:
  5720  0029E4  0E00               	movlw	0
  5721  0029E6  6E05               	movwf	?___fpclassifyf+1,c
  5722  0029E8  0E04               	movlw	4
  5723  0029EA  6E04               	movwf	?___fpclassifyf,c
  5724  0029EC  0012               	return		;funcret
  5725  0029EE                     __end_of___fpclassifyf:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function ___fltol *****************
  5729 ;; Defined at:
  5730 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  f1              4    3[COMRAM] int 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  exp1            1   12[COMRAM] unsigned char 
  5735 ;;  sign1           1   11[COMRAM] unsigned char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  4    3[COMRAM] long 
  5738 ;; Registers used:
  5739 ;;		wreg, status,2, status,0
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5745 ;;      Params:         4       0       0       0       0       0       0
  5746 ;;      Locals:         2       0       0       0       0       0       0
  5747 ;;      Temps:          4       0       0       0       0       0       0
  5748 ;;      Totals:        10       0       0       0       0       0       0
  5749 ;;Total ram usage:       10 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    2
  5752 ;; This function calls:
  5753 ;;		Nothing
  5754 ;; This function is called by:
  5755 ;;		_efgtoa
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text21
  5760  002ABA                     __ptext21:
  5761                           	opt callstack 0
  5762  002ABA                     ___fltol:
  5763                           	opt callstack 24
  5764                           
  5765                           ;incstack = 0
  5766  002ABA  3406               	rlcf	___fltol@f1+2,w,c
  5767  002ABC  3407               	rlcf	___fltol@f1+3,w,c
  5768  002ABE  6E0D               	movwf	___fltol@exp1,c
  5769  002AC0  500D               	movf	___fltol@exp1,w,c
  5770  002AC2  A4D8               	btfss	status,2,c
  5771  002AC4  D009               	goto	l5173
  5772  002AC6                     u7070:
  5773  002AC6  0E00               	movlw	0
  5774  002AC8  6E04               	movwf	?___fltol,c
  5775  002ACA  0E00               	movlw	0
  5776  002ACC  6E05               	movwf	?___fltol+1,c
  5777  002ACE  0E00               	movlw	0
  5778  002AD0  6E06               	movwf	?___fltol+2,c
  5779  002AD2  0E00               	movlw	0
  5780  002AD4  6E07               	movwf	?___fltol+3,c
  5781  002AD6  0012               	return	
  5782  002AD8                     l5173:
  5783  002AD8  C004  F008         	movff	___fltol@f1,??___fltol
  5784  002ADC  C005  F009         	movff	___fltol@f1+1,??___fltol+1
  5785  002AE0  C006  F00A         	movff	___fltol@f1+2,??___fltol+2
  5786  002AE4  C007  F00B         	movff	___fltol@f1+3,??___fltol+3
  5787  002AE8  0E20               	movlw	32
  5788  002AEA  D005               	goto	u7080
  5789  002AEC                     u7085:
  5790  002AEC  90D8               	bcf	status,0,c
  5791  002AEE  320B               	rrcf	??___fltol+3,f,c
  5792  002AF0  320A               	rrcf	??___fltol+2,f,c
  5793  002AF2  3209               	rrcf	??___fltol+1,f,c
  5794  002AF4  3208               	rrcf	??___fltol,f,c
  5795  002AF6                     u7080:
  5796  002AF6  2EE8               	decfsz	wreg,f,c
  5797  002AF8  D7F9               	goto	u7085
  5798  002AFA  5008               	movf	??___fltol,w,c
  5799  002AFC  6E0C               	movwf	___fltol@sign1,c
  5800  002AFE  8E06               	bsf	___fltol@f1+2,7,c
  5801  002B00  0EFF               	movlw	255
  5802  002B02  1604               	andwf	___fltol@f1,f,c
  5803  002B04  0EFF               	movlw	255
  5804  002B06  1605               	andwf	___fltol@f1+1,f,c
  5805  002B08  0EFF               	movlw	255
  5806  002B0A  1606               	andwf	___fltol@f1+2,f,c
  5807  002B0C  0E00               	movlw	0
  5808  002B0E  1607               	andwf	___fltol@f1+3,f,c
  5809  002B10  0E96               	movlw	150
  5810  002B12  5E0D               	subwf	___fltol@exp1,f,c
  5811  002B14  AE0D               	btfss	___fltol@exp1,7,c
  5812  002B16  D00D               	goto	l5193
  5813  002B18  500D               	movf	___fltol@exp1,w,c
  5814  002B1A  0A80               	xorlw	128
  5815  002B1C  0F97               	addlw	151
  5816  002B1E  A0D8               	btfss	status,0,c
  5817  002B20  D7D2               	goto	u7070
  5818  002B22                     l5189:
  5819  002B22  90D8               	bcf	status,0,c
  5820  002B24  3207               	rrcf	___fltol@f1+3,f,c
  5821  002B26  3206               	rrcf	___fltol@f1+2,f,c
  5822  002B28  3205               	rrcf	___fltol@f1+1,f,c
  5823  002B2A  3204               	rrcf	___fltol@f1,f,c
  5824  002B2C  3E0D               	incfsz	___fltol@exp1,f,c
  5825  002B2E  D7F9               	goto	l5189
  5826  002B30  D00D               	goto	u7120
  5827  002B32                     l5193:
  5828  002B32  0E1F               	movlw	31
  5829  002B34  640D               	cpfsgt	___fltol@exp1,c
  5830  002B36  D007               	goto	l5201
  5831  002B38  D7C6               	goto	u7070
  5832  002B3A                     l5199:
  5833  002B3A  90D8               	bcf	status,0,c
  5834  002B3C  3604               	rlcf	___fltol@f1,f,c
  5835  002B3E  3605               	rlcf	___fltol@f1+1,f,c
  5836  002B40  3606               	rlcf	___fltol@f1+2,f,c
  5837  002B42  3607               	rlcf	___fltol@f1+3,f,c
  5838  002B44  060D               	decf	___fltol@exp1,f,c
  5839  002B46                     l5201:
  5840  002B46  500D               	movf	___fltol@exp1,w,c
  5841  002B48  A4D8               	btfss	status,2,c
  5842  002B4A  D7F7               	goto	l5199
  5843  002B4C                     u7120:
  5844  002B4C  500C               	movf	___fltol@sign1,w,c
  5845  002B4E  B4D8               	btfsc	status,2,c
  5846  002B50  D008               	goto	l5207
  5847  002B52  1E07               	comf	___fltol@f1+3,f,c
  5848  002B54  1E06               	comf	___fltol@f1+2,f,c
  5849  002B56  1E05               	comf	___fltol@f1+1,f,c
  5850  002B58  6C04               	negf	___fltol@f1,c
  5851  002B5A  0E00               	movlw	0
  5852  002B5C  2205               	addwfc	___fltol@f1+1,f,c
  5853  002B5E  2206               	addwfc	___fltol@f1+2,f,c
  5854  002B60  2207               	addwfc	___fltol@f1+3,f,c
  5855  002B62                     l5207:
  5856  002B62  C004  F004         	movff	___fltol@f1,?___fltol
  5857  002B66  C005  F005         	movff	___fltol@f1+1,?___fltol+1
  5858  002B6A  C006  F006         	movff	___fltol@f1+2,?___fltol+2
  5859  002B6E  C007  F007         	movff	___fltol@f1+3,?___fltol+3
  5860  002B72  0012               	return		;funcret
  5861  002B74                     __end_of___fltol:
  5862                           	opt callstack 0
  5863                           
  5864 ;; *************** function ___flsub *****************
  5865 ;; Defined at:
  5866 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  b               4   42[COMRAM] long 
  5869 ;;  a               4   46[COMRAM] long 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  4   42[COMRAM] long 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5881 ;;      Params:         8       0       0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0
  5884 ;;      Totals:         8       0       0       0       0       0       0
  5885 ;;Total ram usage:        8 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    3
  5888 ;; This function calls:
  5889 ;;		___fladd
  5890 ;; This function is called by:
  5891 ;;		_efgtoa
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text22
  5896  003146                     __ptext22:
  5897                           	opt callstack 0
  5898  003146                     ___flsub:
  5899                           	opt callstack 23
  5900                           
  5901                           ;incstack = 0
  5902  003146  0E00               	movlw	0
  5903  003148  1A2F               	xorwf	___flsub@a,f,c
  5904  00314A  0E00               	movlw	0
  5905  00314C  1A30               	xorwf	___flsub@a+1,f,c
  5906  00314E  0E00               	movlw	0
  5907  003150  1A31               	xorwf	___flsub@a+2,f,c
  5908  003152  0E80               	movlw	128
  5909  003154  1A32               	xorwf	___flsub@a+3,f,c
  5910  003156  C02B  F004         	movff	___flsub@b,___fladd@b
  5911  00315A  C02C  F005         	movff	___flsub@b+1,___fladd@b+1
  5912  00315E  C02D  F006         	movff	___flsub@b+2,___fladd@b+2
  5913  003162  C02E  F007         	movff	___flsub@b+3,___fladd@b+3
  5914  003166  C02F  F008         	movff	___flsub@a,___fladd@a
  5915  00316A  C030  F009         	movff	___flsub@a+1,___fladd@a+1
  5916  00316E  C031  F00A         	movff	___flsub@a+2,___fladd@a+2
  5917  003172  C032  F00B         	movff	___flsub@a+3,___fladd@a+3
  5918  003176  ECA6  F00C         	call	___fladd	;wreg free
  5919  00317A  C004  F02B         	movff	?___fladd,?___flsub
  5920  00317E  C005  F02C         	movff	?___fladd+1,?___flsub+1
  5921  003182  C006  F02D         	movff	?___fladd+2,?___flsub+2
  5922  003186  C007  F02E         	movff	?___fladd+3,?___flsub+3
  5923  00318A  0012               	return		;funcret
  5924  00318C                     __end_of___flsub:
  5925                           	opt callstack 0
  5926                           
  5927 ;; *************** function ___fladd *****************
  5928 ;; Defined at:
  5929 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5930 ;; Parameters:    Size  Location     Type
  5931 ;;  b               4    3[COMRAM] long 
  5932 ;;  a               4    7[COMRAM] long 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  grs             1   18[COMRAM] unsigned char 
  5935 ;;  bexp            1   17[COMRAM] unsigned char 
  5936 ;;  aexp            1   16[COMRAM] unsigned char 
  5937 ;;  signs           1   15[COMRAM] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  4    3[COMRAM] unsigned char 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5947 ;;      Params:         8       0       0       0       0       0       0
  5948 ;;      Locals:         4       0       0       0       0       0       0
  5949 ;;      Temps:          4       0       0       0       0       0       0
  5950 ;;      Totals:        16       0       0       0       0       0       0
  5951 ;;Total ram usage:       16 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    2
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_efgtoa
  5958 ;;		___flsub
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text23
  5963  00194C                     __ptext23:
  5964                           	opt callstack 0
  5965  00194C                     ___fladd:
  5966                           	opt callstack 23
  5967                           
  5968                           ;incstack = 0
  5969  00194C  5007               	movf	___fladd@b+3,w,c
  5970  00194E  0B80               	andlw	128
  5971  001950  6E10               	movwf	___fladd@signs,c
  5972  001952  5007               	movf	___fladd@b+3,w,c
  5973  001954  2407               	addwf	___fladd@b+3,w,c
  5974  001956  6E12               	movwf	___fladd@bexp,c
  5975  001958  BE06               	btfsc	___fladd@b+2,7,c
  5976  00195A  8012               	bsf	___fladd@bexp,0,c
  5977  00195C  5012               	movf	___fladd@bexp,w,c
  5978  00195E  B4D8               	btfsc	status,2,c
  5979  001960  D00D               	goto	l4485
  5980  001962  2812               	incf	___fladd@bexp,w,c
  5981  001964  A4D8               	btfss	status,2,c
  5982  001966  D008               	goto	l4481
  5983  001968  0E00               	movlw	0
  5984  00196A  6E04               	movwf	___fladd@b,c
  5985  00196C  0E00               	movlw	0
  5986  00196E  6E05               	movwf	___fladd@b+1,c
  5987  001970  0E00               	movlw	0
  5988  001972  6E06               	movwf	___fladd@b+2,c
  5989  001974  0E00               	movlw	0
  5990  001976  6E07               	movwf	___fladd@b+3,c
  5991  001978                     l4481:
  5992  001978  8E06               	bsf	___fladd@b+2,7,c
  5993  00197A  D006               	goto	L9
  5994  00197C                     l4485:
  5995  00197C  0E00               	movlw	0
  5996  00197E  6E04               	movwf	___fladd@b,c
  5997  001980  0E00               	movlw	0
  5998  001982  6E05               	movwf	___fladd@b+1,c
  5999  001984  0E00               	movlw	0
  6000  001986  6E06               	movwf	___fladd@b+2,c
  6001  001988                     L9:
  6002  001988  0E00               	movlw	0
  6003  00198A  6E07               	movwf	___fladd@b+3,c
  6004  00198C  500B               	movf	___fladd@a+3,w,c
  6005  00198E  0B80               	andlw	128
  6006  001990  6E11               	movwf	___fladd@aexp,c
  6007  001992  5010               	movf	___fladd@signs,w,c
  6008  001994  1811               	xorwf	___fladd@aexp,w,c
  6009  001996  A4D8               	btfss	status,2,c
  6010  001998  8C10               	bsf	___fladd@signs,6,c
  6011  00199A  500B               	movf	___fladd@a+3,w,c
  6012  00199C  240B               	addwf	___fladd@a+3,w,c
  6013  00199E  6E11               	movwf	___fladd@aexp,c
  6014  0019A0  BE0A               	btfsc	___fladd@a+2,7,c
  6015  0019A2  8011               	bsf	___fladd@aexp,0,c
  6016  0019A4  5011               	movf	___fladd@aexp,w,c
  6017  0019A6  B4D8               	btfsc	status,2,c
  6018  0019A8  D00D               	goto	l4509
  6019  0019AA  2811               	incf	___fladd@aexp,w,c
  6020  0019AC  A4D8               	btfss	status,2,c
  6021  0019AE  D008               	goto	l4505
  6022  0019B0  0E00               	movlw	0
  6023  0019B2  6E08               	movwf	___fladd@a,c
  6024  0019B4  0E00               	movlw	0
  6025  0019B6  6E09               	movwf	___fladd@a+1,c
  6026  0019B8  0E00               	movlw	0
  6027  0019BA  6E0A               	movwf	___fladd@a+2,c
  6028  0019BC  0E00               	movlw	0
  6029  0019BE  6E0B               	movwf	___fladd@a+3,c
  6030  0019C0                     l4505:
  6031  0019C0  8E0A               	bsf	___fladd@a+2,7,c
  6032  0019C2  D006               	goto	L10
  6033  0019C4                     l4509:
  6034  0019C4  0E00               	movlw	0
  6035  0019C6  6E08               	movwf	___fladd@a,c
  6036  0019C8  0E00               	movlw	0
  6037  0019CA  6E09               	movwf	___fladd@a+1,c
  6038  0019CC  0E00               	movlw	0
  6039  0019CE  6E0A               	movwf	___fladd@a+2,c
  6040  0019D0                     L10:
  6041  0019D0  0E00               	movlw	0
  6042  0019D2  6E0B               	movwf	___fladd@a+3,c
  6043  0019D4  5012               	movf	___fladd@bexp,w,c
  6044  0019D6  5C11               	subwf	___fladd@aexp,w,c
  6045  0019D8  B0D8               	btfsc	status,0,c
  6046  0019DA  D022               	goto	l4547
  6047  0019DC  AC10               	btfss	___fladd@signs,6,c
  6048  0019DE  D002               	goto	l4517
  6049  0019E0  0E80               	movlw	128
  6050  0019E2  1A10               	xorwf	___fladd@signs,f,c
  6051  0019E4                     l4517:
  6052  0019E4  C012  F013         	movff	___fladd@bexp,___fladd@grs
  6053  0019E8  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  6054  0019EC  C013  F011         	movff	___fladd@grs,___fladd@aexp
  6055  0019F0  C004  F013         	movff	___fladd@b,___fladd@grs
  6056  0019F4  C008  F004         	movff	___fladd@a,___fladd@b
  6057  0019F8  C013  F008         	movff	___fladd@grs,___fladd@a
  6058  0019FC  C005  F013         	movff	___fladd@b+1,___fladd@grs
  6059  001A00  C009  F005         	movff	___fladd@a+1,___fladd@b+1
  6060  001A04  C013  F009         	movff	___fladd@grs,___fladd@a+1
  6061  001A08  C006  F013         	movff	___fladd@b+2,___fladd@grs
  6062  001A0C  C00A  F006         	movff	___fladd@a+2,___fladd@b+2
  6063  001A10  C013  F00A         	movff	___fladd@grs,___fladd@a+2
  6064  001A14  C007  F013         	movff	___fladd@b+3,___fladd@grs
  6065  001A18  C00B  F007         	movff	___fladd@a+3,___fladd@b+3
  6066  001A1C  C013  F00B         	movff	___fladd@grs,___fladd@a+3
  6067  001A20                     l4547:
  6068  001A20  0E00               	movlw	0
  6069  001A22  6E13               	movwf	___fladd@grs,c
  6070  001A24  5012               	movf	___fladd@bexp,w,c
  6071  001A26  C011  F00C         	movff	___fladd@aexp,??___fladd
  6072  001A2A  6A0D               	clrf	(??___fladd+1)& (0+255),c
  6073  001A2C  5E0C               	subwf	??___fladd,f,c
  6074  001A2E  0E00               	movlw	0
  6075  001A30  5A0D               	subwfb	??___fladd+1,f,c
  6076  001A32  BE0D               	btfsc	??___fladd+1,7,c
  6077  001A34  D02C               	goto	l846
  6078  001A36  500D               	movf	??___fladd+1,w,c
  6079  001A38  E104               	bnz	u5860
  6080  001A3A  0E1A               	movlw	26
  6081  001A3C  5C0C               	subwf	??___fladd,w,c
  6082  001A3E  A0D8               	btfss	status,0,c
  6083  001A40  D026               	goto	l846
  6084  001A42                     u5860:
  6085  001A42  5004               	movf	___fladd@b,w,c
  6086  001A44  1005               	iorwf	___fladd@b+1,w,c
  6087  001A46  1006               	iorwf	___fladd@b+2,w,c
  6088  001A48  1007               	iorwf	___fladd@b+3,w,c
  6089  001A4A  B4D8               	btfsc	status,2,c
  6090  001A4C  D002               	goto	u5870
  6091  001A4E  0E01               	movlw	1
  6092  001A50  D001               	goto	u5880
  6093  001A52                     u5870:
  6094  001A52  0E00               	movlw	0
  6095  001A54                     u5880:
  6096  001A54  6E13               	movwf	___fladd@grs,c
  6097  001A56  0E00               	movlw	0
  6098  001A58  6E04               	movwf	___fladd@b,c
  6099  001A5A  0E00               	movlw	0
  6100  001A5C  6E05               	movwf	___fladd@b+1,c
  6101  001A5E  0E00               	movlw	0
  6102  001A60  6E06               	movwf	___fladd@b+2,c
  6103  001A62  0E00               	movlw	0
  6104  001A64  6E07               	movwf	___fladd@b+3,c
  6105  001A66  C011  F012         	movff	___fladd@aexp,___fladd@bexp
  6106  001A6A  D015               	goto	u5910
  6107  001A6C                     l847:
  6108  001A6C  A013               	btfss	___fladd@grs,0,c
  6109  001A6E  D005               	goto	l4559
  6110  001A70  90D8               	bcf	status,0,c
  6111  001A72  3013               	rrcf	___fladd@grs,w,c
  6112  001A74  0901               	iorlw	1
  6113  001A76  6E13               	movwf	___fladd@grs,c
  6114  001A78  D002               	goto	l4561
  6115  001A7A                     l4559:
  6116  001A7A  90D8               	bcf	status,0,c
  6117  001A7C  3213               	rrcf	___fladd@grs,f,c
  6118  001A7E                     l4561:
  6119  001A7E  B004               	btfsc	___fladd@b,0,c
  6120  001A80  8E13               	bsf	___fladd@grs,7,c
  6121  001A82  3407               	rlcf	___fladd@b+3,w,c
  6122  001A84  3207               	rrcf	___fladd@b+3,f,c
  6123  001A86  3206               	rrcf	___fladd@b+2,f,c
  6124  001A88  3205               	rrcf	___fladd@b+1,f,c
  6125  001A8A  3204               	rrcf	___fladd@b,f,c
  6126  001A8C  2A12               	incf	___fladd@bexp,f,c
  6127  001A8E                     l846:
  6128  001A8E  5011               	movf	___fladd@aexp,w,c
  6129  001A90  5C12               	subwf	___fladd@bexp,w,c
  6130  001A92  A0D8               	btfss	status,0,c
  6131  001A94  D7EB               	goto	l847
  6132  001A96                     u5910:
  6133  001A96  BC10               	btfsc	___fladd@signs,6,c
  6134  001A98  D028               	goto	l4593
  6135  001A9A  5012               	movf	___fladd@bexp,w,c
  6136  001A9C  A4D8               	btfss	status,2,c
  6137  001A9E  D009               	goto	l4575
  6138  001AA0  0E00               	movlw	0
  6139  001AA2  6E04               	movwf	?___fladd,c
  6140  001AA4  0E00               	movlw	0
  6141  001AA6  6E05               	movwf	?___fladd+1,c
  6142  001AA8  0E00               	movlw	0
  6143  001AAA  6E06               	movwf	?___fladd+2,c
  6144  001AAC  0E00               	movlw	0
  6145  001AAE  6E07               	movwf	?___fladd+3,c
  6146  001AB0  0012               	return	
  6147  001AB2                     l4575:
  6148  001AB2  5008               	movf	___fladd@a,w,c
  6149  001AB4  2604               	addwf	___fladd@b,f,c
  6150  001AB6  5009               	movf	___fladd@a+1,w,c
  6151  001AB8  2205               	addwfc	___fladd@b+1,f,c
  6152  001ABA  500A               	movf	___fladd@a+2,w,c
  6153  001ABC  2206               	addwfc	___fladd@b+2,f,c
  6154  001ABE  500B               	movf	___fladd@a+3,w,c
  6155  001AC0  2207               	addwfc	___fladd@b+3,f,c
  6156  001AC2  A007               	btfss	___fladd@b+3,0,c
  6157  001AC4  D071               	goto	u6040
  6158  001AC6  A013               	btfss	___fladd@grs,0,c
  6159  001AC8  D005               	goto	l4583
  6160  001ACA  90D8               	bcf	status,0,c
  6161  001ACC  3013               	rrcf	___fladd@grs,w,c
  6162  001ACE  0901               	iorlw	1
  6163  001AD0  6E13               	movwf	___fladd@grs,c
  6164  001AD2  D002               	goto	l4585
  6165  001AD4                     l4583:
  6166  001AD4  90D8               	bcf	status,0,c
  6167  001AD6  3213               	rrcf	___fladd@grs,f,c
  6168  001AD8                     l4585:
  6169  001AD8  B004               	btfsc	___fladd@b,0,c
  6170  001ADA  8E13               	bsf	___fladd@grs,7,c
  6171  001ADC  3407               	rlcf	___fladd@b+3,w,c
  6172  001ADE  3207               	rrcf	___fladd@b+3,f,c
  6173  001AE0  3206               	rrcf	___fladd@b+2,f,c
  6174  001AE2  3205               	rrcf	___fladd@b+1,f,c
  6175  001AE4  3204               	rrcf	___fladd@b,f,c
  6176  001AE6  2A12               	incf	___fladd@bexp,f,c
  6177  001AE8  D05F               	goto	u6040
  6178  001AEA                     l4593:
  6179  001AEA  5008               	movf	___fladd@a,w,c
  6180  001AEC  5C04               	subwf	___fladd@b,w,c
  6181  001AEE  5009               	movf	___fladd@a+1,w,c
  6182  001AF0  5805               	subwfb	___fladd@b+1,w,c
  6183  001AF2  500A               	movf	___fladd@a+2,w,c
  6184  001AF4  5806               	subwfb	___fladd@b+2,w,c
  6185  001AF6  5007               	movf	___fladd@b+3,w,c
  6186  001AF8  0A80               	xorlw	128
  6187  001AFA  6E0C               	movwf	??___fladd& (0+255),c
  6188  001AFC  500B               	movf	___fladd@a+3,w,c
  6189  001AFE  0A80               	xorlw	128
  6190  001B00  580C               	subwfb	??___fladd& (0+255),w,c
  6191  001B02  B0D8               	btfsc	status,0,c
  6192  001B04  D025               	goto	l4603
  6193  001B06  5004               	movf	___fladd@b,w,c
  6194  001B08  5C08               	subwf	___fladd@a,w,c
  6195  001B0A  6E0C               	movwf	??___fladd& (0+255),c
  6196  001B0C  5005               	movf	___fladd@b+1,w,c
  6197  001B0E  5809               	subwfb	___fladd@a+1,w,c
  6198  001B10  6E0D               	movwf	(??___fladd+1)& (0+255),c
  6199  001B12  5006               	movf	___fladd@b+2,w,c
  6200  001B14  580A               	subwfb	___fladd@a+2,w,c
  6201  001B16  6E0E               	movwf	(??___fladd+2)& (0+255),c
  6202  001B18  5007               	movf	___fladd@b+3,w,c
  6203  001B1A  580B               	subwfb	___fladd@a+3,w,c
  6204  001B1C  6E0F               	movwf	(??___fladd+3)& (0+255),c
  6205  001B1E  0EFF               	movlw	255
  6206  001B20  240C               	addwf	??___fladd,w,c
  6207  001B22  6E04               	movwf	___fladd@b,c
  6208  001B24  0EFF               	movlw	255
  6209  001B26  200D               	addwfc	??___fladd+1,w,c
  6210  001B28  6E05               	movwf	___fladd@b+1,c
  6211  001B2A  0EFF               	movlw	255
  6212  001B2C  200E               	addwfc	??___fladd+2,w,c
  6213  001B2E  6E06               	movwf	___fladd@b+2,c
  6214  001B30  0EFF               	movlw	255
  6215  001B32  200F               	addwfc	??___fladd+3,w,c
  6216  001B34  6E07               	movwf	___fladd@b+3,c
  6217  001B36  0E80               	movlw	128
  6218  001B38  1A10               	xorwf	___fladd@signs,f,c
  6219  001B3A  6C13               	negf	___fladd@grs,c
  6220  001B3C  5013               	movf	___fladd@grs,w,c
  6221  001B3E  A4D8               	btfss	status,2,c
  6222  001B40  D00F               	goto	l862
  6223  001B42  0E01               	movlw	1
  6224  001B44  2604               	addwf	___fladd@b,f,c
  6225  001B46  0E00               	movlw	0
  6226  001B48  2205               	addwfc	___fladd@b+1,f,c
  6227  001B4A  2206               	addwfc	___fladd@b+2,f,c
  6228  001B4C  2207               	addwfc	___fladd@b+3,f,c
  6229  001B4E  D008               	goto	l862
  6230  001B50                     l4603:
  6231  001B50  5008               	movf	___fladd@a,w,c
  6232  001B52  5E04               	subwf	___fladd@b,f,c
  6233  001B54  5009               	movf	___fladd@a+1,w,c
  6234  001B56  5A05               	subwfb	___fladd@b+1,f,c
  6235  001B58  500A               	movf	___fladd@a+2,w,c
  6236  001B5A  5A06               	subwfb	___fladd@b+2,f,c
  6237  001B5C  500B               	movf	___fladd@a+3,w,c
  6238  001B5E  5A07               	subwfb	___fladd@b+3,f,c
  6239  001B60                     l862:
  6240  001B60  5004               	movf	___fladd@b,w,c
  6241  001B62  1005               	iorwf	___fladd@b+1,w,c
  6242  001B64  1006               	iorwf	___fladd@b+2,w,c
  6243  001B66  1007               	iorwf	___fladd@b+3,w,c
  6244  001B68  A4D8               	btfss	status,2,c
  6245  001B6A  D01C               	goto	l4627
  6246  001B6C  5013               	movf	___fladd@grs,w,c
  6247  001B6E  A4D8               	btfss	status,2,c
  6248  001B70  D019               	goto	l4627
  6249  001B72  0E00               	movlw	0
  6250  001B74  6E04               	movwf	?___fladd,c
  6251  001B76  0E00               	movlw	0
  6252  001B78  6E05               	movwf	?___fladd+1,c
  6253  001B7A  0E00               	movlw	0
  6254  001B7C  6E06               	movwf	?___fladd+2,c
  6255  001B7E  0E00               	movlw	0
  6256  001B80  6E07               	movwf	?___fladd+3,c
  6257  001B82  0012               	return	
  6258  001B84                     l4611:
  6259  001B84  90D8               	bcf	status,0,c
  6260  001B86  3604               	rlcf	___fladd@b,f,c
  6261  001B88  3605               	rlcf	___fladd@b+1,f,c
  6262  001B8A  3606               	rlcf	___fladd@b+2,f,c
  6263  001B8C  3607               	rlcf	___fladd@b+3,f,c
  6264  001B8E  BE13               	btfsc	___fladd@grs,7,c
  6265  001B90  8004               	bsf	___fladd@b,0,c
  6266  001B92  A013               	btfss	___fladd@grs,0,c
  6267  001B94  D002               	goto	l4621
  6268  001B96  80D8               	bsf	status,0,c
  6269  001B98  D001               	goto	L11
  6270  001B9A                     l4621:
  6271  001B9A  90D8               	bcf	status,0,c
  6272  001B9C                     L11:
  6273  001B9C  3613               	rlcf	___fladd@grs,f,c
  6274  001B9E  5012               	movf	___fladd@bexp,w,c
  6275  001BA0  A4D8               	btfss	status,2,c
  6276  001BA2  0612               	decf	___fladd@bexp,f,c
  6277  001BA4                     l4627:
  6278  001BA4  AE06               	btfss	___fladd@b+2,7,c
  6279  001BA6  D7EE               	goto	l4611
  6280  001BA8                     u6040:
  6281  001BA8  0E00               	movlw	0
  6282  001BAA  6E11               	movwf	___fladd@aexp,c
  6283  001BAC  AE13               	btfss	___fladd@grs,7,c
  6284  001BAE  D00B               	goto	l871
  6285  001BB0  C013  F00C         	movff	___fladd@grs,??___fladd
  6286  001BB4  0E7F               	movlw	127
  6287  001BB6  160C               	andwf	??___fladd,f,c
  6288  001BB8  B4D8               	btfsc	status,2,c
  6289  001BBA  D003               	goto	l872
  6290  001BBC                     u6060:
  6291  001BBC  0E01               	movlw	1
  6292  001BBE  6E11               	movwf	___fladd@aexp,c
  6293  001BC0  D002               	goto	l871
  6294  001BC2                     l872:
  6295  001BC2  B004               	btfsc	___fladd@b,0,c
  6296  001BC4  D7FB               	goto	u6060
  6297  001BC6                     l871:
  6298  001BC6  5011               	movf	___fladd@aexp,w,c
  6299  001BC8  B4D8               	btfsc	status,2,c
  6300  001BCA  D020               	goto	l4647
  6301  001BCC  0E01               	movlw	1
  6302  001BCE  2604               	addwf	___fladd@b,f,c
  6303  001BD0  0E00               	movlw	0
  6304  001BD2  2205               	addwfc	___fladd@b+1,f,c
  6305  001BD4  2206               	addwfc	___fladd@b+2,f,c
  6306  001BD6  2207               	addwfc	___fladd@b+3,f,c
  6307  001BD8  A007               	btfss	___fladd@b+3,0,c
  6308  001BDA  D018               	goto	l4647
  6309  001BDC  C004  F00C         	movff	___fladd@b,??___fladd
  6310  001BE0  C005  F00D         	movff	___fladd@b+1,??___fladd+1
  6311  001BE4  C006  F00E         	movff	___fladd@b+2,??___fladd+2
  6312  001BE8  C007  F00F         	movff	___fladd@b+3,??___fladd+3
  6313  001BEC  340F               	rlcf	??___fladd+3,w,c
  6314  001BEE  320F               	rrcf	??___fladd+3,f,c
  6315  001BF0  320E               	rrcf	??___fladd+2,f,c
  6316  001BF2  320D               	rrcf	??___fladd+1,f,c
  6317  001BF4  320C               	rrcf	??___fladd,f,c
  6318  001BF6  C00C  F004         	movff	??___fladd,___fladd@b
  6319  001BFA  C00D  F005         	movff	??___fladd+1,___fladd@b+1
  6320  001BFE  C00E  F006         	movff	??___fladd+2,___fladd@b+2
  6321  001C02  C00F  F007         	movff	??___fladd+3,___fladd@b+3
  6322  001C06  2812               	incf	___fladd@bexp,w,c
  6323  001C08  A4D8               	btfss	status,2,c
  6324  001C0A  2A12               	incf	___fladd@bexp,f,c
  6325  001C0C                     l4647:
  6326  001C0C  2812               	incf	___fladd@bexp,w,c
  6327  001C0E  B4D8               	btfsc	status,2,c
  6328  001C10  D003               	goto	u6120
  6329  001C12  5012               	movf	___fladd@bexp,w,c
  6330  001C14  A4D8               	btfss	status,2,c
  6331  001C16  D00D               	goto	l4655
  6332  001C18                     u6120:
  6333  001C18  0E00               	movlw	0
  6334  001C1A  6E04               	movwf	___fladd@b,c
  6335  001C1C  0E00               	movlw	0
  6336  001C1E  6E05               	movwf	___fladd@b+1,c
  6337  001C20  0E00               	movlw	0
  6338  001C22  6E06               	movwf	___fladd@b+2,c
  6339  001C24  0E00               	movlw	0
  6340  001C26  6E07               	movwf	___fladd@b+3,c
  6341  001C28  5012               	movf	___fladd@bexp,w,c
  6342  001C2A  A4D8               	btfss	status,2,c
  6343  001C2C  D002               	goto	l4655
  6344  001C2E  0E00               	movlw	0
  6345  001C30  6E10               	movwf	___fladd@signs,c
  6346  001C32                     l4655:
  6347  001C32  A012               	btfss	___fladd@bexp,0,c
  6348  001C34  D002               	goto	l4659
  6349  001C36  8E06               	bsf	___fladd@b+2,7,c
  6350  001C38  D001               	goto	l4661
  6351  001C3A                     l4659:
  6352  001C3A  9E06               	bcf	___fladd@b+2,7,c
  6353  001C3C                     l4661:
  6354  001C3C  90D8               	bcf	status,0,c
  6355  001C3E  3012               	rrcf	___fladd@bexp,w,c
  6356  001C40  6E07               	movwf	___fladd@b+3,c
  6357  001C42  BE10               	btfsc	___fladd@signs,7,c
  6358  001C44  8E07               	bsf	___fladd@b+3,7,c
  6359  001C46  C004  F004         	movff	___fladd@b,?___fladd
  6360  001C4A  C005  F005         	movff	___fladd@b+1,?___fladd+1
  6361  001C4E  C006  F006         	movff	___fladd@b+2,?___fladd+2
  6362  001C52  C007  F007         	movff	___fladd@b+3,?___fladd+3
  6363  001C56  0012               	return		;funcret
  6364  001C58                     __end_of___fladd:
  6365                           	opt callstack 0
  6366                           
  6367 ;; *************** function ___flneg *****************
  6368 ;; Defined at:
  6369 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  f1              4    3[COMRAM] unsigned char 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  4    3[COMRAM] unsigned char 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2, status,0
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6383 ;;      Params:         4       0       0       0       0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0
  6386 ;;      Totals:         4       0       0       0       0       0       0
  6387 ;;Total ram usage:        4 bytes
  6388 ;; Hardware stack levels used:    1
  6389 ;; Hardware stack levels required when called:    2
  6390 ;; This function calls:
  6391 ;;		Nothing
  6392 ;; This function is called by:
  6393 ;;		_efgtoa
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text24
  6398  003292                     __ptext24:
  6399                           	opt callstack 0
  6400  003292                     ___flneg:
  6401                           	opt callstack 24
  6402                           
  6403                           ;incstack = 0
  6404  003292  5004               	movf	___flneg@f1,w,c
  6405  003294  1005               	iorwf	___flneg@f1+1,w,c
  6406  003296  1006               	iorwf	___flneg@f1+2,w,c
  6407  003298  1007               	iorwf	___flneg@f1+3,w,c
  6408  00329A  B4D8               	btfsc	status,2,c
  6409  00329C  D008               	goto	l5163
  6410  00329E  0E00               	movlw	0
  6411  0032A0  1A04               	xorwf	___flneg@f1,f,c
  6412  0032A2  0E00               	movlw	0
  6413  0032A4  1A05               	xorwf	___flneg@f1+1,f,c
  6414  0032A6  0E00               	movlw	0
  6415  0032A8  1A06               	xorwf	___flneg@f1+2,f,c
  6416  0032AA  0E80               	movlw	128
  6417  0032AC  1A07               	xorwf	___flneg@f1+3,f,c
  6418  0032AE                     l5163:
  6419  0032AE  C004  F004         	movff	___flneg@f1,?___flneg
  6420  0032B2  C005  F005         	movff	___flneg@f1+1,?___flneg+1
  6421  0032B6  C006  F006         	movff	___flneg@f1+2,?___flneg+2
  6422  0032BA  C007  F007         	movff	___flneg@f1+3,?___flneg+3
  6423  0032BE  0012               	return		;funcret
  6424  0032C0                     __end_of___flneg:
  6425                           	opt callstack 0
  6426                           
  6427 ;; *************** function ___flmul *****************
  6428 ;; Defined at:
  6429 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  b               4   17[COMRAM] unsigned char 
  6432 ;;  a               4   21[COMRAM] unsigned char 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  prod            4   36[COMRAM] struct .
  6435 ;;  grs             4   31[COMRAM] unsigned long 
  6436 ;;  temp            2   40[COMRAM] struct .
  6437 ;;  bexp            1   35[COMRAM] unsigned char 
  6438 ;;  aexp            1   30[COMRAM] unsigned char 
  6439 ;;  sign            1   29[COMRAM] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  4   17[COMRAM] unsigned char 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0, prodl, prodh
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6449 ;;      Params:         8       0       0       0       0       0       0
  6450 ;;      Locals:        13       0       0       0       0       0       0
  6451 ;;      Temps:          4       0       0       0       0       0       0
  6452 ;;      Totals:        25       0       0       0       0       0       0
  6453 ;;Total ram usage:       25 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    2
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_main
  6460 ;;		_efgtoa
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text25
  6465  0015FA                     __ptext25:
  6466                           	opt callstack 0
  6467  0015FA                     ___flmul:
  6468                           	opt callstack 24
  6469                           
  6470                           ;incstack = 0
  6471  0015FA  5015               	movf	___flmul@b+3,w,c
  6472  0015FC  0B80               	andlw	128
  6473  0015FE  6E1E               	movwf	___flmul@sign,c
  6474  001600  5015               	movf	___flmul@b+3,w,c
  6475  001602  2415               	addwf	___flmul@b+3,w,c
  6476  001604  6E24               	movwf	___flmul@bexp,c
  6477  001606  BE14               	btfsc	___flmul@b+2,7,c
  6478  001608  8024               	bsf	___flmul@bexp,0,c
  6479  00160A  5024               	movf	___flmul@bexp,w,c
  6480  00160C  B4D8               	btfsc	status,2,c
  6481  00160E  D00D               	goto	l4919
  6482  001610  2824               	incf	___flmul@bexp,w,c
  6483  001612  A4D8               	btfss	status,2,c
  6484  001614  D008               	goto	l4917
  6485  001616  0E00               	movlw	0
  6486  001618  6E12               	movwf	___flmul@b,c
  6487  00161A  0E00               	movlw	0
  6488  00161C  6E13               	movwf	___flmul@b+1,c
  6489  00161E  0E00               	movlw	0
  6490  001620  6E14               	movwf	___flmul@b+2,c
  6491  001622  0E00               	movlw	0
  6492  001624  6E15               	movwf	___flmul@b+3,c
  6493  001626                     l4917:
  6494  001626  8E14               	bsf	___flmul@b+2,7,c
  6495  001628  D008               	goto	l4921
  6496  00162A                     l4919:
  6497  00162A  0E00               	movlw	0
  6498  00162C  6E12               	movwf	___flmul@b,c
  6499  00162E  0E00               	movlw	0
  6500  001630  6E13               	movwf	___flmul@b+1,c
  6501  001632  0E00               	movlw	0
  6502  001634  6E14               	movwf	___flmul@b+2,c
  6503  001636  0E00               	movlw	0
  6504  001638  6E15               	movwf	___flmul@b+3,c
  6505  00163A                     l4921:
  6506  00163A  5019               	movf	___flmul@a+3,w,c
  6507  00163C  0B80               	andlw	128
  6508  00163E  1A1E               	xorwf	___flmul@sign,f,c
  6509  001640  5019               	movf	___flmul@a+3,w,c
  6510  001642  2419               	addwf	___flmul@a+3,w,c
  6511  001644  6E1F               	movwf	___flmul@aexp,c
  6512  001646  BE18               	btfsc	___flmul@a+2,7,c
  6513  001648  801F               	bsf	___flmul@aexp,0,c
  6514  00164A  501F               	movf	___flmul@aexp,w,c
  6515  00164C  B4D8               	btfsc	status,2,c
  6516  00164E  D00D               	goto	l4937
  6517  001650  281F               	incf	___flmul@aexp,w,c
  6518  001652  A4D8               	btfss	status,2,c
  6519  001654  D008               	goto	l4935
  6520  001656  0E00               	movlw	0
  6521  001658  6E16               	movwf	___flmul@a,c
  6522  00165A  0E00               	movlw	0
  6523  00165C  6E17               	movwf	___flmul@a+1,c
  6524  00165E  0E00               	movlw	0
  6525  001660  6E18               	movwf	___flmul@a+2,c
  6526  001662  0E00               	movlw	0
  6527  001664  6E19               	movwf	___flmul@a+3,c
  6528  001666                     l4935:
  6529  001666  8E18               	bsf	___flmul@a+2,7,c
  6530  001668  D008               	goto	l931
  6531  00166A                     l4937:
  6532  00166A  0E00               	movlw	0
  6533  00166C  6E16               	movwf	___flmul@a,c
  6534  00166E  0E00               	movlw	0
  6535  001670  6E17               	movwf	___flmul@a+1,c
  6536  001672  0E00               	movlw	0
  6537  001674  6E18               	movwf	___flmul@a+2,c
  6538  001676  0E00               	movlw	0
  6539  001678  6E19               	movwf	___flmul@a+3,c
  6540  00167A                     l931:
  6541  00167A  501F               	movf	___flmul@aexp,w,c
  6542  00167C  B4D8               	btfsc	status,2,c
  6543  00167E  D003               	goto	u6740
  6544  001680  5024               	movf	___flmul@bexp,w,c
  6545  001682  A4D8               	btfss	status,2,c
  6546  001684  D009               	goto	l4945
  6547  001686                     u6740:
  6548  001686  0E00               	movlw	0
  6549  001688  6E12               	movwf	?___flmul,c
  6550  00168A  0E00               	movlw	0
  6551  00168C  6E13               	movwf	?___flmul+1,c
  6552  00168E  0E00               	movlw	0
  6553  001690  6E14               	movwf	?___flmul+2,c
  6554  001692  0E00               	movlw	0
  6555  001694  6E15               	movwf	?___flmul+3,c
  6556  001696  0012               	return	
  6557  001698                     l4945:
  6558  001698  5018               	movf	___flmul@a+2,w,c
  6559  00169A  0212               	mulwf	___flmul@b,c
  6560  00169C  CFF3 F029          	movff	prodl,___flmul@temp
  6561  0016A0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6562  0016A4  5029               	movf	___flmul@temp,w,c
  6563  0016A6  6E20               	movwf	___flmul@grs,c
  6564  0016A8  6A21               	clrf	___flmul@grs+1,c
  6565  0016AA  6A22               	clrf	___flmul@grs+2,c
  6566  0016AC  6A23               	clrf	___flmul@grs+3,c
  6567  0016AE  502A               	movf	___flmul@temp+1,w,c
  6568  0016B0  6E25               	movwf	___flmul@prod,c
  6569  0016B2  6A26               	clrf	___flmul@prod+1,c
  6570  0016B4  6A27               	clrf	___flmul@prod+2,c
  6571  0016B6  6A28               	clrf	___flmul@prod+3,c
  6572  0016B8  5017               	movf	___flmul@a+1,w,c
  6573  0016BA  0213               	mulwf	___flmul@b+1,c
  6574  0016BC  CFF3 F029          	movff	prodl,___flmul@temp
  6575  0016C0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6576  0016C4  5029               	movf	___flmul@temp,w,c
  6577  0016C6  2620               	addwf	___flmul@grs,f,c
  6578  0016C8  0E00               	movlw	0
  6579  0016CA  2221               	addwfc	___flmul@grs+1,f,c
  6580  0016CC  2222               	addwfc	___flmul@grs+2,f,c
  6581  0016CE  2223               	addwfc	___flmul@grs+3,f,c
  6582  0016D0  502A               	movf	___flmul@temp+1,w,c
  6583  0016D2  2625               	addwf	___flmul@prod,f,c
  6584  0016D4  0E00               	movlw	0
  6585  0016D6  2226               	addwfc	___flmul@prod+1,f,c
  6586  0016D8  2227               	addwfc	___flmul@prod+2,f,c
  6587  0016DA  2228               	addwfc	___flmul@prod+3,f,c
  6588  0016DC  5016               	movf	___flmul@a,w,c
  6589  0016DE  0214               	mulwf	___flmul@b+2,c
  6590  0016E0  CFF3 F029          	movff	prodl,___flmul@temp
  6591  0016E4  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6592  0016E8  5029               	movf	___flmul@temp,w,c
  6593  0016EA  2620               	addwf	___flmul@grs,f,c
  6594  0016EC  0E00               	movlw	0
  6595  0016EE  2221               	addwfc	___flmul@grs+1,f,c
  6596  0016F0  2222               	addwfc	___flmul@grs+2,f,c
  6597  0016F2  2223               	addwfc	___flmul@grs+3,f,c
  6598  0016F4  502A               	movf	___flmul@temp+1,w,c
  6599  0016F6  2625               	addwf	___flmul@prod,f,c
  6600  0016F8  0E00               	movlw	0
  6601  0016FA  2226               	addwfc	___flmul@prod+1,f,c
  6602  0016FC  2227               	addwfc	___flmul@prod+2,f,c
  6603  0016FE  2228               	addwfc	___flmul@prod+3,f,c
  6604  001700  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  6605  001704  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  6606  001708  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  6607  00170C  6A20               	clrf	___flmul@grs,c
  6608  00170E  5016               	movf	___flmul@a,w,c
  6609  001710  0213               	mulwf	___flmul@b+1,c
  6610  001712  CFF3 F029          	movff	prodl,___flmul@temp
  6611  001716  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6612  00171A  5029               	movf	___flmul@temp,w,c
  6613  00171C  2620               	addwf	___flmul@grs,f,c
  6614  00171E  502A               	movf	___flmul@temp+1,w,c
  6615  001720  2221               	addwfc	___flmul@grs+1,f,c
  6616  001722  0E00               	movlw	0
  6617  001724  2222               	addwfc	___flmul@grs+2,f,c
  6618  001726  0E00               	movlw	0
  6619  001728  2223               	addwfc	___flmul@grs+3,f,c
  6620  00172A  5017               	movf	___flmul@a+1,w,c
  6621  00172C  0212               	mulwf	___flmul@b,c
  6622  00172E  CFF3 F029          	movff	prodl,___flmul@temp
  6623  001732  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6624  001736  5029               	movf	___flmul@temp,w,c
  6625  001738  2620               	addwf	___flmul@grs,f,c
  6626  00173A  502A               	movf	___flmul@temp+1,w,c
  6627  00173C  2221               	addwfc	___flmul@grs+1,f,c
  6628  00173E  0E00               	movlw	0
  6629  001740  2222               	addwfc	___flmul@grs+2,f,c
  6630  001742  0E00               	movlw	0
  6631  001744  2223               	addwfc	___flmul@grs+3,f,c
  6632  001746  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  6633  00174A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  6634  00174E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  6635  001752  6A20               	clrf	___flmul@grs,c
  6636  001754  5016               	movf	___flmul@a,w,c
  6637  001756  0212               	mulwf	___flmul@b,c
  6638  001758  CFF3 F029          	movff	prodl,___flmul@temp
  6639  00175C  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6640  001760  5029               	movf	___flmul@temp,w,c
  6641  001762  2620               	addwf	___flmul@grs,f,c
  6642  001764  502A               	movf	___flmul@temp+1,w,c
  6643  001766  2221               	addwfc	___flmul@grs+1,f,c
  6644  001768  0E00               	movlw	0
  6645  00176A  2222               	addwfc	___flmul@grs+2,f,c
  6646  00176C  0E00               	movlw	0
  6647  00176E  2223               	addwfc	___flmul@grs+3,f,c
  6648  001770  5018               	movf	___flmul@a+2,w,c
  6649  001772  0213               	mulwf	___flmul@b+1,c
  6650  001774  CFF3 F029          	movff	prodl,___flmul@temp
  6651  001778  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6652  00177C  5029               	movf	___flmul@temp,w,c
  6653  00177E  2625               	addwf	___flmul@prod,f,c
  6654  001780  502A               	movf	___flmul@temp+1,w,c
  6655  001782  2226               	addwfc	___flmul@prod+1,f,c
  6656  001784  0E00               	movlw	0
  6657  001786  2227               	addwfc	___flmul@prod+2,f,c
  6658  001788  0E00               	movlw	0
  6659  00178A  2228               	addwfc	___flmul@prod+3,f,c
  6660  00178C  5017               	movf	___flmul@a+1,w,c
  6661  00178E  0214               	mulwf	___flmul@b+2,c
  6662  001790  CFF3 F029          	movff	prodl,___flmul@temp
  6663  001794  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6664  001798  5029               	movf	___flmul@temp,w,c
  6665  00179A  2625               	addwf	___flmul@prod,f,c
  6666  00179C  502A               	movf	___flmul@temp+1,w,c
  6667  00179E  2226               	addwfc	___flmul@prod+1,f,c
  6668  0017A0  0E00               	movlw	0
  6669  0017A2  2227               	addwfc	___flmul@prod+2,f,c
  6670  0017A4  0E00               	movlw	0
  6671  0017A6  2228               	addwfc	___flmul@prod+3,f,c
  6672  0017A8  5018               	movf	___flmul@a+2,w,c
  6673  0017AA  0214               	mulwf	___flmul@b+2,c
  6674  0017AC  CFF3 F029          	movff	prodl,___flmul@temp
  6675  0017B0  CFF4 F02A          	movff	prodh,___flmul@temp+1
  6676  0017B4  5029               	movf	___flmul@temp,w,c
  6677  0017B6  6E1A               	movwf	??___flmul& (0+255),c
  6678  0017B8  502A               	movf	___flmul@temp+1,w,c
  6679  0017BA  6E1B               	movwf	(??___flmul+1)& (0+255),c
  6680  0017BC  6A1C               	clrf	(??___flmul+2)& (0+255),c
  6681  0017BE  6A1D               	clrf	(??___flmul+3)& (0+255),c
  6682  0017C0  C01C  F01D         	movff	??___flmul+2,??___flmul+3
  6683  0017C4  C01B  F01C         	movff	??___flmul+1,??___flmul+2
  6684  0017C8  C01A  F01B         	movff	??___flmul,??___flmul+1
  6685  0017CC  6A1A               	clrf	??___flmul,c
  6686  0017CE  501A               	movf	??___flmul,w,c
  6687  0017D0  2625               	addwf	___flmul@prod,f,c
  6688  0017D2  501B               	movf	??___flmul+1,w,c
  6689  0017D4  2226               	addwfc	___flmul@prod+1,f,c
  6690  0017D6  501C               	movf	??___flmul+2,w,c
  6691  0017D8  2227               	addwfc	___flmul@prod+2,f,c
  6692  0017DA  501D               	movf	??___flmul+3,w,c
  6693  0017DC  2228               	addwfc	___flmul@prod+3,f,c
  6694  0017DE  C020  F01A         	movff	___flmul@grs,??___flmul
  6695  0017E2  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
  6696  0017E6  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
  6697  0017EA  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
  6698  0017EE  0E19               	movlw	25
  6699  0017F0  D005               	goto	u6750
  6700  0017F2                     u6755:
  6701  0017F2  90D8               	bcf	status,0,c
  6702  0017F4  321D               	rrcf	??___flmul+3,f,c
  6703  0017F6  321C               	rrcf	??___flmul+2,f,c
  6704  0017F8  321B               	rrcf	??___flmul+1,f,c
  6705  0017FA  321A               	rrcf	??___flmul,f,c
  6706  0017FC                     u6750:
  6707  0017FC  2EE8               	decfsz	wreg,f,c
  6708  0017FE  D7F9               	goto	u6755
  6709  001800  501A               	movf	??___flmul,w,c
  6710  001802  2625               	addwf	___flmul@prod,f,c
  6711  001804  501B               	movf	??___flmul+1,w,c
  6712  001806  2226               	addwfc	___flmul@prod+1,f,c
  6713  001808  501C               	movf	??___flmul+2,w,c
  6714  00180A  2227               	addwfc	___flmul@prod+2,f,c
  6715  00180C  501D               	movf	??___flmul+3,w,c
  6716  00180E  2228               	addwfc	___flmul@prod+3,f,c
  6717  001810  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  6718  001814  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  6719  001818  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  6720  00181C  6A20               	clrf	___flmul@grs,c
  6721  00181E  501F               	movf	___flmul@aexp,w,c
  6722  001820  C024  F01A         	movff	___flmul@bexp,??___flmul
  6723  001824  6A1B               	clrf	(??___flmul+1)& (0+255),c
  6724  001826  261A               	addwf	??___flmul,f,c
  6725  001828  0E00               	movlw	0
  6726  00182A  221B               	addwfc	??___flmul+1,f,c
  6727  00182C  0E82               	movlw	130
  6728  00182E  241A               	addwf	??___flmul,w,c
  6729  001830  6E29               	movwf	___flmul@temp,c
  6730  001832  0EFF               	movlw	255
  6731  001834  201B               	addwfc	??___flmul+1,w,c
  6732  001836  6E2A               	movwf	___flmul@temp+1,c
  6733  001838  D00F               	goto	l4993
  6734  00183A                     l4987:
  6735  00183A  90D8               	bcf	status,0,c
  6736  00183C  3625               	rlcf	___flmul@prod,f,c
  6737  00183E  3626               	rlcf	___flmul@prod+1,f,c
  6738  001840  3627               	rlcf	___flmul@prod+2,f,c
  6739  001842  3628               	rlcf	___flmul@prod+3,f,c
  6740  001844  BE23               	btfsc	___flmul@grs+3,7,c
  6741  001846  8025               	bsf	___flmul@prod,0,c
  6742  001848  90D8               	bcf	status,0,c
  6743  00184A  3620               	rlcf	___flmul@grs,f,c
  6744  00184C  3621               	rlcf	___flmul@grs+1,f,c
  6745  00184E  3622               	rlcf	___flmul@grs+2,f,c
  6746  001850  3623               	rlcf	___flmul@grs+3,f,c
  6747  001852  0629               	decf	___flmul@temp,f,c
  6748  001854  A0D8               	btfss	status,0,c
  6749  001856  062A               	decf	___flmul@temp+1,f,c
  6750  001858                     l4993:
  6751  001858  AE27               	btfss	___flmul@prod+2,7,c
  6752  00185A  D7EF               	goto	l4987
  6753  00185C  0E00               	movlw	0
  6754  00185E  6E1F               	movwf	___flmul@aexp,c
  6755  001860  AE23               	btfss	___flmul@grs+3,7,c
  6756  001862  D017               	goto	l940
  6757  001864  0EFF               	movlw	255
  6758  001866  1420               	andwf	___flmul@grs,w,c
  6759  001868  6E1A               	movwf	??___flmul& (0+255),c
  6760  00186A  0EFF               	movlw	255
  6761  00186C  1421               	andwf	___flmul@grs+1,w,c
  6762  00186E  6E1B               	movwf	(??___flmul+1)& (0+255),c
  6763  001870  0EFF               	movlw	255
  6764  001872  1422               	andwf	___flmul@grs+2,w,c
  6765  001874  6E1C               	movwf	(??___flmul+2)& (0+255),c
  6766  001876  0E7F               	movlw	127
  6767  001878  1423               	andwf	___flmul@grs+3,w,c
  6768  00187A  6E1D               	movwf	(??___flmul+3)& (0+255),c
  6769  00187C  501A               	movf	??___flmul,w,c
  6770  00187E  101B               	iorwf	??___flmul+1,w,c
  6771  001880  101C               	iorwf	??___flmul+2,w,c
  6772  001882  101D               	iorwf	??___flmul+3,w,c
  6773  001884  B4D8               	btfsc	status,2,c
  6774  001886  D003               	goto	l941
  6775  001888                     u6790:
  6776  001888  0E01               	movlw	1
  6777  00188A  6E1F               	movwf	___flmul@aexp,c
  6778  00188C  D002               	goto	l940
  6779  00188E                     l941:
  6780  00188E  B025               	btfsc	___flmul@prod,0,c
  6781  001890  D7FB               	goto	u6790
  6782  001892                     l940:
  6783  001892  501F               	movf	___flmul@aexp,w,c
  6784  001894  B4D8               	btfsc	status,2,c
  6785  001896  D01F               	goto	l5013
  6786  001898  0E01               	movlw	1
  6787  00189A  2625               	addwf	___flmul@prod,f,c
  6788  00189C  0E00               	movlw	0
  6789  00189E  2226               	addwfc	___flmul@prod+1,f,c
  6790  0018A0  2227               	addwfc	___flmul@prod+2,f,c
  6791  0018A2  2228               	addwfc	___flmul@prod+3,f,c
  6792  0018A4  A028               	btfss	___flmul@prod+3,0,c
  6793  0018A6  D017               	goto	l5013
  6794  0018A8  C025  F01A         	movff	___flmul@prod,??___flmul
  6795  0018AC  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
  6796  0018B0  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
  6797  0018B4  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
  6798  0018B8  341D               	rlcf	??___flmul+3,w,c
  6799  0018BA  321D               	rrcf	??___flmul+3,f,c
  6800  0018BC  321C               	rrcf	??___flmul+2,f,c
  6801  0018BE  321B               	rrcf	??___flmul+1,f,c
  6802  0018C0  321A               	rrcf	??___flmul,f,c
  6803  0018C2  C01A  F025         	movff	??___flmul,___flmul@prod
  6804  0018C6  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
  6805  0018CA  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
  6806  0018CE  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
  6807  0018D2  4A29               	infsnz	___flmul@temp,f,c
  6808  0018D4  2A2A               	incf	___flmul@temp+1,f,c
  6809  0018D6                     l5013:
  6810  0018D6  BE2A               	btfsc	___flmul@temp+1,7,c
  6811  0018D8  D00D               	goto	l5017
  6812  0018DA  502A               	movf	___flmul@temp+1,w,c
  6813  0018DC  E103               	bnz	u6830
  6814  0018DE  2829               	incf	___flmul@temp,w,c
  6815  0018E0  A0D8               	btfss	status,0,c
  6816  0018E2  D008               	goto	l5017
  6817  0018E4                     u6830:
  6818  0018E4  0E00               	movlw	0
  6819  0018E6  6E25               	movwf	___flmul@prod,c
  6820  0018E8  0E00               	movlw	0
  6821  0018EA  6E26               	movwf	___flmul@prod+1,c
  6822  0018EC  0E80               	movlw	128
  6823  0018EE  6E27               	movwf	___flmul@prod+2,c
  6824  0018F0  0E7F               	movlw	127
  6825  0018F2  D020               	goto	L12
  6826  0018F4                     l5017:
  6827  0018F4  BE2A               	btfsc	___flmul@temp+1,7,c
  6828  0018F6  D005               	goto	u6840
  6829  0018F8  502A               	movf	___flmul@temp+1,w,c
  6830  0018FA  E10E               	bnz	l948
  6831  0018FC  0429               	decf	___flmul@temp,w,c
  6832  0018FE  B0D8               	btfsc	status,0,c
  6833  001900  D00B               	goto	l948
  6834  001902                     u6840:
  6835  001902  0E00               	movlw	0
  6836  001904  6E25               	movwf	___flmul@prod,c
  6837  001906  0E00               	movlw	0
  6838  001908  6E26               	movwf	___flmul@prod+1,c
  6839  00190A  0E00               	movlw	0
  6840  00190C  6E27               	movwf	___flmul@prod+2,c
  6841  00190E  0E00               	movlw	0
  6842  001910  6E28               	movwf	___flmul@prod+3,c
  6843  001912  0E00               	movlw	0
  6844  001914  6E1E               	movwf	___flmul@sign,c
  6845  001916  D00F               	goto	l5029
  6846  001918                     l948:
  6847  001918  C029  F024         	movff	___flmul@temp,___flmul@bexp
  6848  00191C  0EFF               	movlw	255
  6849  00191E  1625               	andwf	___flmul@prod,f,c
  6850  001920  0EFF               	movlw	255
  6851  001922  1626               	andwf	___flmul@prod+1,f,c
  6852  001924  0E7F               	movlw	127
  6853  001926  1627               	andwf	___flmul@prod+2,f,c
  6854  001928  0E00               	movlw	0
  6855  00192A  1628               	andwf	___flmul@prod+3,f,c
  6856  00192C  B024               	btfsc	___flmul@bexp,0,c
  6857  00192E  8E27               	bsf	___flmul@prod+2,7,c
  6858  001930  90D8               	bcf	status,0,c
  6859  001932  3024               	rrcf	___flmul@bexp,w,c
  6860  001934                     L12:
  6861  001934  6E28               	movwf	___flmul@prod+3,c
  6862  001936                     l5029:
  6863  001936  501E               	movf	___flmul@sign,w,c
  6864  001938  1228               	iorwf	___flmul@prod+3,f,c
  6865  00193A  C025  F012         	movff	___flmul@prod,?___flmul
  6866  00193E  C026  F013         	movff	___flmul@prod+1,?___flmul+1
  6867  001942  C027  F014         	movff	___flmul@prod+2,?___flmul+2
  6868  001946  C028  F015         	movff	___flmul@prod+3,?___flmul+3
  6869  00194A  0012               	return		;funcret
  6870  00194C                     __end_of___flmul:
  6871                           	opt callstack 0
  6872                           
  6873 ;; *************** function ___flge *****************
  6874 ;; Defined at:
  6875 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  ff1             4   42[COMRAM] unsigned char 
  6878 ;;  ff2             4   46[COMRAM] unsigned char 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;		None               void
  6883 ;; Registers used:
  6884 ;;		wreg, status,2, status,0
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6890 ;;      Params:         8       0       0       0       0       0       0
  6891 ;;      Locals:         0       0       0       0       0       0       0
  6892 ;;      Temps:          4       0       0       0       0       0       0
  6893 ;;      Totals:        12       0       0       0       0       0       0
  6894 ;;Total ram usage:       12 bytes
  6895 ;; Hardware stack levels used:    1
  6896 ;; Hardware stack levels required when called:    2
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_efgtoa
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text26
  6905  002784                     __ptext26:
  6906                           	opt callstack 0
  6907  002784                     ___flge:
  6908                           	opt callstack 24
  6909                           
  6910                           ;incstack = 0
  6911  002784  0E00               	movlw	0
  6912  002786  142B               	andwf	___flge@ff1,w,c
  6913  002788  6E33               	movwf	??___flge& (0+255),c
  6914  00278A  0E00               	movlw	0
  6915  00278C  142C               	andwf	___flge@ff1+1,w,c
  6916  00278E  6E34               	movwf	(??___flge+1)& (0+255),c
  6917  002790  0E80               	movlw	128
  6918  002792  142D               	andwf	___flge@ff1+2,w,c
  6919  002794  6E35               	movwf	(??___flge+2)& (0+255),c
  6920  002796  0E7F               	movlw	127
  6921  002798  142E               	andwf	___flge@ff1+3,w,c
  6922  00279A  6E36               	movwf	(??___flge+3)& (0+255),c
  6923  00279C  5033               	movf	??___flge,w,c
  6924  00279E  1034               	iorwf	??___flge+1,w,c
  6925  0027A0  1035               	iorwf	??___flge+2,w,c
  6926  0027A2  1036               	iorwf	??___flge+3,w,c
  6927  0027A4  A4D8               	btfss	status,2,c
  6928  0027A6  D008               	goto	l5141
  6929  0027A8  0E00               	movlw	0
  6930  0027AA  6E2B               	movwf	___flge@ff1,c
  6931  0027AC  0E00               	movlw	0
  6932  0027AE  6E2C               	movwf	___flge@ff1+1,c
  6933  0027B0  0E00               	movlw	0
  6934  0027B2  6E2D               	movwf	___flge@ff1+2,c
  6935  0027B4  0E00               	movlw	0
  6936  0027B6  6E2E               	movwf	___flge@ff1+3,c
  6937  0027B8                     l5141:
  6938  0027B8  0E00               	movlw	0
  6939  0027BA  142F               	andwf	___flge@ff2,w,c
  6940  0027BC  6E33               	movwf	??___flge& (0+255),c
  6941  0027BE  0E00               	movlw	0
  6942  0027C0  1430               	andwf	___flge@ff2+1,w,c
  6943  0027C2  6E34               	movwf	(??___flge+1)& (0+255),c
  6944  0027C4  0E80               	movlw	128
  6945  0027C6  1431               	andwf	___flge@ff2+2,w,c
  6946  0027C8  6E35               	movwf	(??___flge+2)& (0+255),c
  6947  0027CA  0E7F               	movlw	127
  6948  0027CC  1432               	andwf	___flge@ff2+3,w,c
  6949  0027CE  6E36               	movwf	(??___flge+3)& (0+255),c
  6950  0027D0  5033               	movf	??___flge,w,c
  6951  0027D2  1034               	iorwf	??___flge+1,w,c
  6952  0027D4  1035               	iorwf	??___flge+2,w,c
  6953  0027D6  1036               	iorwf	??___flge+3,w,c
  6954  0027D8  A4D8               	btfss	status,2,c
  6955  0027DA  D008               	goto	l5145
  6956  0027DC  0E00               	movlw	0
  6957  0027DE  6E2F               	movwf	___flge@ff2,c
  6958  0027E0  0E00               	movlw	0
  6959  0027E2  6E30               	movwf	___flge@ff2+1,c
  6960  0027E4  0E00               	movlw	0
  6961  0027E6  6E31               	movwf	___flge@ff2+2,c
  6962  0027E8  0E00               	movlw	0
  6963  0027EA  6E32               	movwf	___flge@ff2+3,c
  6964  0027EC                     l5145:
  6965  0027EC  AE2E               	btfss	___flge@ff1+3,7,c
  6966  0027EE  D009               	goto	l5149
  6967  0027F0  6C2B               	negf	___flge@ff1,c
  6968  0027F2  1E2C               	comf	___flge@ff1+1,f,c
  6969  0027F4  B0D8               	btfsc	status,0,c
  6970  0027F6  2A2C               	incf	___flge@ff1+1,f,c
  6971  0027F8  1E2D               	comf	___flge@ff1+2,f,c
  6972  0027FA  B0D8               	btfsc	status,0,c
  6973  0027FC  2A2D               	incf	___flge@ff1+2,f,c
  6974  0027FE  0E80               	movlw	128
  6975  002800  562E               	subfwb	___flge@ff1+3,f,c
  6976  002802                     l5149:
  6977  002802  AE32               	btfss	___flge@ff2+3,7,c
  6978  002804  D009               	goto	l582
  6979  002806  6C2F               	negf	___flge@ff2,c
  6980  002808  1E30               	comf	___flge@ff2+1,f,c
  6981  00280A  B0D8               	btfsc	status,0,c
  6982  00280C  2A30               	incf	___flge@ff2+1,f,c
  6983  00280E  1E31               	comf	___flge@ff2+2,f,c
  6984  002810  B0D8               	btfsc	status,0,c
  6985  002812  2A31               	incf	___flge@ff2+2,f,c
  6986  002814  0E80               	movlw	128
  6987  002816  5632               	subfwb	___flge@ff2+3,f,c
  6988  002818                     l582:
  6989  002818  0E00               	movlw	0
  6990  00281A  1A2B               	xorwf	___flge@ff1,f,c
  6991  00281C  0E00               	movlw	0
  6992  00281E  1A2C               	xorwf	___flge@ff1+1,f,c
  6993  002820  0E00               	movlw	0
  6994  002822  1A2D               	xorwf	___flge@ff1+2,f,c
  6995  002824  0E80               	movlw	128
  6996  002826  1A2E               	xorwf	___flge@ff1+3,f,c
  6997  002828  0E00               	movlw	0
  6998  00282A  1A2F               	xorwf	___flge@ff2,f,c
  6999  00282C  0E00               	movlw	0
  7000  00282E  1A30               	xorwf	___flge@ff2+1,f,c
  7001  002830  0E00               	movlw	0
  7002  002832  1A31               	xorwf	___flge@ff2+2,f,c
  7003  002834  0E80               	movlw	128
  7004  002836  1A32               	xorwf	___flge@ff2+3,f,c
  7005  002838  502F               	movf	___flge@ff2,w,c
  7006  00283A  5C2B               	subwf	___flge@ff1,w,c
  7007  00283C  5030               	movf	___flge@ff2+1,w,c
  7008  00283E  582C               	subwfb	___flge@ff1+1,w,c
  7009  002840  5031               	movf	___flge@ff2+2,w,c
  7010  002842  582D               	subwfb	___flge@ff1+2,w,c
  7011  002844  5032               	movf	___flge@ff2+3,w,c
  7012  002846  582E               	subwfb	___flge@ff1+3,w,c
  7013  002848  B0D8               	btfsc	status,0,c
  7014  00284A  D002               	goto	l5155
  7015  00284C  90D8               	bcf	status,0,c
  7016  00284E  0012               	return	
  7017  002850                     l5155:
  7018  002850  80D8               	bsf	status,0,c
  7019  002852  0012               	return		;funcret
  7020  002854                     __end_of___flge:
  7021                           	opt callstack 0
  7022                           
  7023 ;; *************** function ___fleq *****************
  7024 ;; Defined at:
  7025 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  ff1             4    3[COMRAM] unsigned char 
  7028 ;;  ff2             4    7[COMRAM] unsigned char 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;		None               void
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7040 ;;      Params:         8       0       0       0       0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0
  7042 ;;      Temps:          4       0       0       0       0       0       0
  7043 ;;      Totals:        12       0       0       0       0       0       0
  7044 ;;Total ram usage:       12 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    2
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_efgtoa
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text27
  7055  002D58                     __ptext27:
  7056                           	opt callstack 0
  7057  002D58                     ___fleq:
  7058                           	opt callstack 24
  7059                           
  7060                           ;incstack = 0
  7061  002D58  0E00               	movlw	0
  7062  002D5A  1404               	andwf	___fleq@ff1,w,c
  7063  002D5C  6E0C               	movwf	??___fleq& (0+255),c
  7064  002D5E  0E00               	movlw	0
  7065  002D60  1405               	andwf	___fleq@ff1+1,w,c
  7066  002D62  6E0D               	movwf	(??___fleq+1)& (0+255),c
  7067  002D64  0E80               	movlw	128
  7068  002D66  1406               	andwf	___fleq@ff1+2,w,c
  7069  002D68  6E0E               	movwf	(??___fleq+2)& (0+255),c
  7070  002D6A  0E7F               	movlw	127
  7071  002D6C  1407               	andwf	___fleq@ff1+3,w,c
  7072  002D6E  6E0F               	movwf	(??___fleq+3)& (0+255),c
  7073  002D70  500C               	movf	??___fleq,w,c
  7074  002D72  100D               	iorwf	??___fleq+1,w,c
  7075  002D74  100E               	iorwf	??___fleq+2,w,c
  7076  002D76  100F               	iorwf	??___fleq+3,w,c
  7077  002D78  A4D8               	btfss	status,2,c
  7078  002D7A  D008               	goto	l5125
  7079  002D7C  0E00               	movlw	0
  7080  002D7E  6E04               	movwf	___fleq@ff1,c
  7081  002D80  0E00               	movlw	0
  7082  002D82  6E05               	movwf	___fleq@ff1+1,c
  7083  002D84  0E00               	movlw	0
  7084  002D86  6E06               	movwf	___fleq@ff1+2,c
  7085  002D88  0E00               	movlw	0
  7086  002D8A  6E07               	movwf	___fleq@ff1+3,c
  7087  002D8C                     l5125:
  7088  002D8C  0E00               	movlw	0
  7089  002D8E  1408               	andwf	___fleq@ff2,w,c
  7090  002D90  6E0C               	movwf	??___fleq& (0+255),c
  7091  002D92  0E00               	movlw	0
  7092  002D94  1409               	andwf	___fleq@ff2+1,w,c
  7093  002D96  6E0D               	movwf	(??___fleq+1)& (0+255),c
  7094  002D98  0E80               	movlw	128
  7095  002D9A  140A               	andwf	___fleq@ff2+2,w,c
  7096  002D9C  6E0E               	movwf	(??___fleq+2)& (0+255),c
  7097  002D9E  0E7F               	movlw	127
  7098  002DA0  140B               	andwf	___fleq@ff2+3,w,c
  7099  002DA2  6E0F               	movwf	(??___fleq+3)& (0+255),c
  7100  002DA4  500C               	movf	??___fleq,w,c
  7101  002DA6  100D               	iorwf	??___fleq+1,w,c
  7102  002DA8  100E               	iorwf	??___fleq+2,w,c
  7103  002DAA  100F               	iorwf	??___fleq+3,w,c
  7104  002DAC  A4D8               	btfss	status,2,c
  7105  002DAE  D008               	goto	l5129
  7106  002DB0  0E00               	movlw	0
  7107  002DB2  6E08               	movwf	___fleq@ff2,c
  7108  002DB4  0E00               	movlw	0
  7109  002DB6  6E09               	movwf	___fleq@ff2+1,c
  7110  002DB8  0E00               	movlw	0
  7111  002DBA  6E0A               	movwf	___fleq@ff2+2,c
  7112  002DBC  0E00               	movlw	0
  7113  002DBE  6E0B               	movwf	___fleq@ff2+3,c
  7114  002DC0                     l5129:
  7115  002DC0  5008               	movf	___fleq@ff2,w,c
  7116  002DC2  1804               	xorwf	___fleq@ff1,w,c
  7117  002DC4  E10A               	bnz	u7000
  7118  002DC6  5009               	movf	___fleq@ff2+1,w,c
  7119  002DC8  1805               	xorwf	___fleq@ff1+1,w,c
  7120  002DCA  E107               	bnz	u7000
  7121  002DCC  500A               	movf	___fleq@ff2+2,w,c
  7122  002DCE  1806               	xorwf	___fleq@ff1+2,w,c
  7123  002DD0  E104               	bnz	u7000
  7124  002DD2  500B               	movf	___fleq@ff2+3,w,c
  7125  002DD4  1807               	xorwf	___fleq@ff1+3,w,c
  7126  002DD6  B4D8               	btfsc	status,2,c
  7127  002DD8  D002               	goto	l5133
  7128  002DDA                     u7000:
  7129  002DDA  90D8               	bcf	status,0,c
  7130  002DDC  0012               	return	
  7131  002DDE                     l5133:
  7132  002DDE  80D8               	bsf	status,0,c
  7133  002DE0  0012               	return		;funcret
  7134  002DE2                     __end_of___fleq:
  7135                           	opt callstack 0
  7136                           
  7137 ;; *************** function ___fldiv *****************
  7138 ;; Defined at:
  7139 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  b               4   42[COMRAM] unsigned char 
  7142 ;;  a               4   46[COMRAM] unsigned char 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  grs             4   61[COMRAM] unsigned long 
  7145 ;;  rem             4   54[COMRAM] unsigned long 
  7146 ;;  new_exp         2   59[COMRAM] short 
  7147 ;;  aexp            1   66[COMRAM] unsigned char 
  7148 ;;  bexp            1   65[COMRAM] unsigned char 
  7149 ;;  sign            1   58[COMRAM] unsigned char 
  7150 ;; Return value:  Size  Location     Type
  7151 ;;                  4   42[COMRAM] unsigned char 
  7152 ;; Registers used:
  7153 ;;		wreg, status,2, status,0
  7154 ;; Tracked objects:
  7155 ;;		On entry : 0/0
  7156 ;;		On exit  : 0/0
  7157 ;;		Unchanged: 0/0
  7158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7159 ;;      Params:         8       0       0       0       0       0       0
  7160 ;;      Locals:        13       0       0       0       0       0       0
  7161 ;;      Temps:          4       0       0       0       0       0       0
  7162 ;;      Totals:        25       0       0       0       0       0       0
  7163 ;;Total ram usage:       25 bytes
  7164 ;; Hardware stack levels used:    1
  7165 ;; Hardware stack levels required when called:    2
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_main
  7170 ;;		_efgtoa
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text28
  7175  001C58                     __ptext28:
  7176                           	opt callstack 0
  7177  001C58                     ___fldiv:
  7178                           	opt callstack 24
  7179                           
  7180                           ;incstack = 0
  7181  001C58  502E               	movf	___fldiv@b+3,w,c
  7182  001C5A  0B80               	andlw	128
  7183  001C5C  6E3B               	movwf	___fldiv@sign,c
  7184  001C5E  502E               	movf	___fldiv@b+3,w,c
  7185  001C60  242E               	addwf	___fldiv@b+3,w,c
  7186  001C62  6E42               	movwf	___fldiv@bexp,c
  7187  001C64  BE2D               	btfsc	___fldiv@b+2,7,c
  7188  001C66  8042               	bsf	___fldiv@bexp,0,c
  7189  001C68  5042               	movf	___fldiv@bexp,w,c
  7190  001C6A  B4D8               	btfsc	status,2,c
  7191  001C6C  D00D               	goto	l4783
  7192  001C6E  2842               	incf	___fldiv@bexp,w,c
  7193  001C70  A4D8               	btfss	status,2,c
  7194  001C72  D008               	goto	l4779
  7195  001C74  0E00               	movlw	0
  7196  001C76  6E2B               	movwf	___fldiv@b,c
  7197  001C78  0E00               	movlw	0
  7198  001C7A  6E2C               	movwf	___fldiv@b+1,c
  7199  001C7C  0E00               	movlw	0
  7200  001C7E  6E2D               	movwf	___fldiv@b+2,c
  7201  001C80  0E00               	movlw	0
  7202  001C82  6E2E               	movwf	___fldiv@b+3,c
  7203  001C84                     l4779:
  7204  001C84  8E2D               	bsf	___fldiv@b+2,7,c
  7205  001C86  D006               	goto	L13
  7206  001C88                     l4783:
  7207  001C88  0E00               	movlw	0
  7208  001C8A  6E2B               	movwf	___fldiv@b,c
  7209  001C8C  0E00               	movlw	0
  7210  001C8E  6E2C               	movwf	___fldiv@b+1,c
  7211  001C90  0E00               	movlw	0
  7212  001C92  6E2D               	movwf	___fldiv@b+2,c
  7213  001C94                     L13:
  7214  001C94  0E00               	movlw	0
  7215  001C96  6E2E               	movwf	___fldiv@b+3,c
  7216  001C98  5032               	movf	___fldiv@a+3,w,c
  7217  001C9A  0B80               	andlw	128
  7218  001C9C  1A3B               	xorwf	___fldiv@sign,f,c
  7219  001C9E  5032               	movf	___fldiv@a+3,w,c
  7220  001CA0  2432               	addwf	___fldiv@a+3,w,c
  7221  001CA2  6E43               	movwf	___fldiv@aexp,c
  7222  001CA4  BE31               	btfsc	___fldiv@a+2,7,c
  7223  001CA6  8043               	bsf	___fldiv@aexp,0,c
  7224  001CA8  5043               	movf	___fldiv@aexp,w,c
  7225  001CAA  B4D8               	btfsc	status,2,c
  7226  001CAC  D00D               	goto	l4803
  7227  001CAE  2843               	incf	___fldiv@aexp,w,c
  7228  001CB0  A4D8               	btfss	status,2,c
  7229  001CB2  D008               	goto	l4799
  7230  001CB4  0E00               	movlw	0
  7231  001CB6  6E2F               	movwf	___fldiv@a,c
  7232  001CB8  0E00               	movlw	0
  7233  001CBA  6E30               	movwf	___fldiv@a+1,c
  7234  001CBC  0E00               	movlw	0
  7235  001CBE  6E31               	movwf	___fldiv@a+2,c
  7236  001CC0  0E00               	movlw	0
  7237  001CC2  6E32               	movwf	___fldiv@a+3,c
  7238  001CC4                     l4799:
  7239  001CC4  8E31               	bsf	___fldiv@a+2,7,c
  7240  001CC6  D006               	goto	L14
  7241  001CC8                     l4803:
  7242  001CC8  0E00               	movlw	0
  7243  001CCA  6E2F               	movwf	___fldiv@a,c
  7244  001CCC  0E00               	movlw	0
  7245  001CCE  6E30               	movwf	___fldiv@a+1,c
  7246  001CD0  0E00               	movlw	0
  7247  001CD2  6E31               	movwf	___fldiv@a+2,c
  7248  001CD4                     L14:
  7249  001CD4  0E00               	movlw	0
  7250  001CD6  6E32               	movwf	___fldiv@a+3,c
  7251  001CD8  502F               	movf	___fldiv@a,w,c
  7252  001CDA  1030               	iorwf	___fldiv@a+1,w,c
  7253  001CDC  1031               	iorwf	___fldiv@a+2,w,c
  7254  001CDE  1032               	iorwf	___fldiv@a+3,w,c
  7255  001CE0  A4D8               	btfss	status,2,c
  7256  001CE2  D017               	goto	l4817
  7257  001CE4  0E00               	movlw	0
  7258  001CE6  6E2B               	movwf	___fldiv@b,c
  7259  001CE8  0E00               	movlw	0
  7260  001CEA  6E2C               	movwf	___fldiv@b+1,c
  7261  001CEC  0E00               	movlw	0
  7262  001CEE  6E2D               	movwf	___fldiv@b+2,c
  7263  001CF0  0E00               	movlw	0
  7264  001CF2  6E2E               	movwf	___fldiv@b+3,c
  7265  001CF4  0E80               	movlw	128
  7266  001CF6  122D               	iorwf	___fldiv@b+2,f,c
  7267  001CF8  0E7F               	movlw	127
  7268  001CFA  122E               	iorwf	___fldiv@b+3,f,c
  7269  001CFC                     l4811:
  7270  001CFC  503B               	movf	___fldiv@sign,w,c
  7271  001CFE  122E               	iorwf	___fldiv@b+3,f,c
  7272  001D00  C02B  F02B         	movff	___fldiv@b,?___fldiv
  7273  001D04  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
  7274  001D08  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
  7275  001D0C  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
  7276  001D10  0012               	return	
  7277  001D12                     l4817:
  7278  001D12  5042               	movf	___fldiv@bexp,w,c
  7279  001D14  A4D8               	btfss	status,2,c
  7280  001D16  D009               	goto	l4825
  7281  001D18  0E00               	movlw	0
  7282  001D1A  6E2B               	movwf	?___fldiv,c
  7283  001D1C  0E00               	movlw	0
  7284  001D1E  6E2C               	movwf	?___fldiv+1,c
  7285  001D20  0E00               	movlw	0
  7286  001D22  6E2D               	movwf	?___fldiv+2,c
  7287  001D24  0E00               	movlw	0
  7288  001D26  6E2E               	movwf	?___fldiv+3,c
  7289  001D28  0012               	return	
  7290  001D2A                     l4825:
  7291  001D2A  5043               	movf	___fldiv@aexp,w,c
  7292  001D2C  C042  F033         	movff	___fldiv@bexp,??___fldiv
  7293  001D30  6A34               	clrf	(??___fldiv+1)& (0+255),c
  7294  001D32  5E33               	subwf	??___fldiv,f,c
  7295  001D34  0E00               	movlw	0
  7296  001D36  5A34               	subwfb	??___fldiv+1,f,c
  7297  001D38  0E7F               	movlw	127
  7298  001D3A  2433               	addwf	??___fldiv,w,c
  7299  001D3C  6E3C               	movwf	___fldiv@new_exp,c
  7300  001D3E  0E00               	movlw	0
  7301  001D40  2034               	addwfc	??___fldiv+1,w,c
  7302  001D42  6E3D               	movwf	___fldiv@new_exp+1,c
  7303  001D44  C02B  F037         	movff	___fldiv@b,___fldiv@rem
  7304  001D48  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
  7305  001D4C  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
  7306  001D50  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
  7307  001D54  0E00               	movlw	0
  7308  001D56  6E2B               	movwf	___fldiv@b,c
  7309  001D58  0E00               	movlw	0
  7310  001D5A  6E2C               	movwf	___fldiv@b+1,c
  7311  001D5C  0E00               	movlw	0
  7312  001D5E  6E2D               	movwf	___fldiv@b+2,c
  7313  001D60  0E00               	movlw	0
  7314  001D62  6E2E               	movwf	___fldiv@b+3,c
  7315  001D64  0E00               	movlw	0
  7316  001D66  6E3E               	movwf	___fldiv@grs,c
  7317  001D68  0E00               	movlw	0
  7318  001D6A  6E3F               	movwf	___fldiv@grs+1,c
  7319  001D6C  0E00               	movlw	0
  7320  001D6E  6E40               	movwf	___fldiv@grs+2,c
  7321  001D70  0E00               	movlw	0
  7322  001D72  6E41               	movwf	___fldiv@grs+3,c
  7323  001D74  0E00               	movlw	0
  7324  001D76  6E43               	movwf	___fldiv@aexp,c
  7325  001D78  D028               	goto	l901
  7326  001D7A                     l4835:
  7327  001D7A  5043               	movf	___fldiv@aexp,w,c
  7328  001D7C  B4D8               	btfsc	status,2,c
  7329  001D7E  D011               	goto	l4843
  7330  001D80  90D8               	bcf	status,0,c
  7331  001D82  3637               	rlcf	___fldiv@rem,f,c
  7332  001D84  3638               	rlcf	___fldiv@rem+1,f,c
  7333  001D86  3639               	rlcf	___fldiv@rem+2,f,c
  7334  001D88  363A               	rlcf	___fldiv@rem+3,f,c
  7335  001D8A  90D8               	bcf	status,0,c
  7336  001D8C  362B               	rlcf	___fldiv@b,f,c
  7337  001D8E  362C               	rlcf	___fldiv@b+1,f,c
  7338  001D90  362D               	rlcf	___fldiv@b+2,f,c
  7339  001D92  362E               	rlcf	___fldiv@b+3,f,c
  7340  001D94  BE41               	btfsc	___fldiv@grs+3,7,c
  7341  001D96  802B               	bsf	___fldiv@b,0,c
  7342  001D98  90D8               	bcf	status,0,c
  7343  001D9A  363E               	rlcf	___fldiv@grs,f,c
  7344  001D9C  363F               	rlcf	___fldiv@grs+1,f,c
  7345  001D9E  3640               	rlcf	___fldiv@grs+2,f,c
  7346  001DA0  3641               	rlcf	___fldiv@grs+3,f,c
  7347  001DA2                     l4843:
  7348  001DA2  502F               	movf	___fldiv@a,w,c
  7349  001DA4  5C37               	subwf	___fldiv@rem,w,c
  7350  001DA6  5030               	movf	___fldiv@a+1,w,c
  7351  001DA8  5838               	subwfb	___fldiv@rem+1,w,c
  7352  001DAA  5031               	movf	___fldiv@a+2,w,c
  7353  001DAC  5839               	subwfb	___fldiv@rem+2,w,c
  7354  001DAE  5032               	movf	___fldiv@a+3,w,c
  7355  001DB0  583A               	subwfb	___fldiv@rem+3,w,c
  7356  001DB2  A0D8               	btfss	status,0,c
  7357  001DB4  D009               	goto	l4849
  7358  001DB6  8C41               	bsf	___fldiv@grs+3,6,c
  7359  001DB8  502F               	movf	___fldiv@a,w,c
  7360  001DBA  5E37               	subwf	___fldiv@rem,f,c
  7361  001DBC  5030               	movf	___fldiv@a+1,w,c
  7362  001DBE  5A38               	subwfb	___fldiv@rem+1,f,c
  7363  001DC0  5031               	movf	___fldiv@a+2,w,c
  7364  001DC2  5A39               	subwfb	___fldiv@rem+2,f,c
  7365  001DC4  5032               	movf	___fldiv@a+3,w,c
  7366  001DC6  5A3A               	subwfb	___fldiv@rem+3,f,c
  7367  001DC8                     l4849:
  7368  001DC8  2A43               	incf	___fldiv@aexp,f,c
  7369  001DCA                     l901:
  7370  001DCA  0E19               	movlw	25
  7371  001DCC  6443               	cpfsgt	___fldiv@aexp,c
  7372  001DCE  D7D5               	goto	l4835
  7373  001DD0  5037               	movf	___fldiv@rem,w,c
  7374  001DD2  1038               	iorwf	___fldiv@rem+1,w,c
  7375  001DD4  1039               	iorwf	___fldiv@rem+2,w,c
  7376  001DD6  103A               	iorwf	___fldiv@rem+3,w,c
  7377  001DD8  B4D8               	btfsc	status,2,c
  7378  001DDA  D011               	goto	l4861
  7379  001DDC  803E               	bsf	___fldiv@grs,0,c
  7380  001DDE  D00F               	goto	l4861
  7381  001DE0                     l4855:
  7382  001DE0  90D8               	bcf	status,0,c
  7383  001DE2  362B               	rlcf	___fldiv@b,f,c
  7384  001DE4  362C               	rlcf	___fldiv@b+1,f,c
  7385  001DE6  362D               	rlcf	___fldiv@b+2,f,c
  7386  001DE8  362E               	rlcf	___fldiv@b+3,f,c
  7387  001DEA  BE41               	btfsc	___fldiv@grs+3,7,c
  7388  001DEC  802B               	bsf	___fldiv@b,0,c
  7389  001DEE  90D8               	bcf	status,0,c
  7390  001DF0  363E               	rlcf	___fldiv@grs,f,c
  7391  001DF2  363F               	rlcf	___fldiv@grs+1,f,c
  7392  001DF4  3640               	rlcf	___fldiv@grs+2,f,c
  7393  001DF6  3641               	rlcf	___fldiv@grs+3,f,c
  7394  001DF8  063C               	decf	___fldiv@new_exp,f,c
  7395  001DFA  A0D8               	btfss	status,0,c
  7396  001DFC  063D               	decf	___fldiv@new_exp+1,f,c
  7397  001DFE                     l4861:
  7398  001DFE  AE2D               	btfss	___fldiv@b+2,7,c
  7399  001E00  D7EF               	goto	l4855
  7400  001E02  0E00               	movlw	0
  7401  001E04  6E43               	movwf	___fldiv@aexp,c
  7402  001E06  AE41               	btfss	___fldiv@grs+3,7,c
  7403  001E08  D017               	goto	l912
  7404  001E0A  0EFF               	movlw	255
  7405  001E0C  143E               	andwf	___fldiv@grs,w,c
  7406  001E0E  6E33               	movwf	??___fldiv& (0+255),c
  7407  001E10  0EFF               	movlw	255
  7408  001E12  143F               	andwf	___fldiv@grs+1,w,c
  7409  001E14  6E34               	movwf	(??___fldiv+1)& (0+255),c
  7410  001E16  0EFF               	movlw	255
  7411  001E18  1440               	andwf	___fldiv@grs+2,w,c
  7412  001E1A  6E35               	movwf	(??___fldiv+2)& (0+255),c
  7413  001E1C  0E7F               	movlw	127
  7414  001E1E  1441               	andwf	___fldiv@grs+3,w,c
  7415  001E20  6E36               	movwf	(??___fldiv+3)& (0+255),c
  7416  001E22  5033               	movf	??___fldiv,w,c
  7417  001E24  1034               	iorwf	??___fldiv+1,w,c
  7418  001E26  1035               	iorwf	??___fldiv+2,w,c
  7419  001E28  1036               	iorwf	??___fldiv+3,w,c
  7420  001E2A  B4D8               	btfsc	status,2,c
  7421  001E2C  D003               	goto	l913
  7422  001E2E                     u6600:
  7423  001E2E  0E01               	movlw	1
  7424  001E30  6E43               	movwf	___fldiv@aexp,c
  7425  001E32  D002               	goto	l912
  7426  001E34                     l913:
  7427  001E34  B02B               	btfsc	___fldiv@b,0,c
  7428  001E36  D7FB               	goto	u6600
  7429  001E38                     l912:
  7430  001E38  5043               	movf	___fldiv@aexp,w,c
  7431  001E3A  B4D8               	btfsc	status,2,c
  7432  001E3C  D01F               	goto	l4881
  7433  001E3E  0E01               	movlw	1
  7434  001E40  262B               	addwf	___fldiv@b,f,c
  7435  001E42  0E00               	movlw	0
  7436  001E44  222C               	addwfc	___fldiv@b+1,f,c
  7437  001E46  222D               	addwfc	___fldiv@b+2,f,c
  7438  001E48  222E               	addwfc	___fldiv@b+3,f,c
  7439  001E4A  A02E               	btfss	___fldiv@b+3,0,c
  7440  001E4C  D017               	goto	l4881
  7441  001E4E  C02B  F033         	movff	___fldiv@b,??___fldiv
  7442  001E52  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
  7443  001E56  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
  7444  001E5A  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
  7445  001E5E  3436               	rlcf	??___fldiv+3,w,c
  7446  001E60  3236               	rrcf	??___fldiv+3,f,c
  7447  001E62  3235               	rrcf	??___fldiv+2,f,c
  7448  001E64  3234               	rrcf	??___fldiv+1,f,c
  7449  001E66  3233               	rrcf	??___fldiv,f,c
  7450  001E68  C033  F02B         	movff	??___fldiv,___fldiv@b
  7451  001E6C  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
  7452  001E70  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
  7453  001E74  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
  7454  001E78  4A3C               	infsnz	___fldiv@new_exp,f,c
  7455  001E7A  2A3D               	incf	___fldiv@new_exp+1,f,c
  7456  001E7C                     l4881:
  7457  001E7C  BE3D               	btfsc	___fldiv@new_exp+1,7,c
  7458  001E7E  D010               	goto	l4885
  7459  001E80  503D               	movf	___fldiv@new_exp+1,w,c
  7460  001E82  E103               	bnz	u6640
  7461  001E84  283C               	incf	___fldiv@new_exp,w,c
  7462  001E86  A0D8               	btfss	status,0,c
  7463  001E88  D00B               	goto	l4885
  7464  001E8A                     u6640:
  7465  001E8A  0E00               	movlw	0
  7466  001E8C  6E3D               	movwf	___fldiv@new_exp+1,c
  7467  001E8E  683C               	setf	___fldiv@new_exp,c
  7468  001E90  0E00               	movlw	0
  7469  001E92  6E2B               	movwf	___fldiv@b,c
  7470  001E94  0E00               	movlw	0
  7471  001E96  6E2C               	movwf	___fldiv@b+1,c
  7472  001E98  0E00               	movlw	0
  7473  001E9A  6E2D               	movwf	___fldiv@b+2,c
  7474  001E9C  0E00               	movlw	0
  7475  001E9E  6E2E               	movwf	___fldiv@b+3,c
  7476  001EA0                     l4885:
  7477  001EA0  BE3D               	btfsc	___fldiv@new_exp+1,7,c
  7478  001EA2  D005               	goto	u6650
  7479  001EA4  503D               	movf	___fldiv@new_exp+1,w,c
  7480  001EA6  E111               	bnz	l4889
  7481  001EA8  043C               	decf	___fldiv@new_exp,w,c
  7482  001EAA  B0D8               	btfsc	status,0,c
  7483  001EAC  D00E               	goto	l4889
  7484  001EAE                     u6650:
  7485  001EAE  0E00               	movlw	0
  7486  001EB0  6E3D               	movwf	___fldiv@new_exp+1,c
  7487  001EB2  0E00               	movlw	0
  7488  001EB4  6E3C               	movwf	___fldiv@new_exp,c
  7489  001EB6  0E00               	movlw	0
  7490  001EB8  6E2B               	movwf	___fldiv@b,c
  7491  001EBA  0E00               	movlw	0
  7492  001EBC  6E2C               	movwf	___fldiv@b+1,c
  7493  001EBE  0E00               	movlw	0
  7494  001EC0  6E2D               	movwf	___fldiv@b+2,c
  7495  001EC2  0E00               	movlw	0
  7496  001EC4  6E2E               	movwf	___fldiv@b+3,c
  7497  001EC6  0E00               	movlw	0
  7498  001EC8  6E3B               	movwf	___fldiv@sign,c
  7499  001ECA                     l4889:
  7500  001ECA  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
  7501  001ECE  A042               	btfss	___fldiv@bexp,0,c
  7502  001ED0  D002               	goto	l4895
  7503  001ED2  8E2D               	bsf	___fldiv@b+2,7,c
  7504  001ED4  D001               	goto	l4897
  7505  001ED6                     l4895:
  7506  001ED6  9E2D               	bcf	___fldiv@b+2,7,c
  7507  001ED8                     l4897:
  7508  001ED8  90D8               	bcf	status,0,c
  7509  001EDA  3042               	rrcf	___fldiv@bexp,w,c
  7510  001EDC  6E2E               	movwf	___fldiv@b+3,c
  7511  001EDE  D70E               	goto	l4811
  7512  001EE0                     __end_of___fldiv:
  7513                           	opt callstack 0
  7514                           
  7515 ;; *************** function ___awmod *****************
  7516 ;; Defined at:
  7517 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  dividend        2    3[COMRAM] int 
  7520 ;;  divisor         2    5[COMRAM] int 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  sign            1    8[COMRAM] unsigned char 
  7523 ;;  counter         1    7[COMRAM] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  2    3[COMRAM] int 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7533 ;;      Params:         4       0       0       0       0       0       0
  7534 ;;      Locals:         2       0       0       0       0       0       0
  7535 ;;      Temps:          0       0       0       0       0       0       0
  7536 ;;      Totals:         6       0       0       0       0       0       0
  7537 ;;Total ram usage:        6 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    2
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		_efgtoa
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text29
  7548  002EE2                     __ptext29:
  7549                           	opt callstack 0
  7550  002EE2                     ___awmod:
  7551                           	opt callstack 24
  7552                           
  7553                           ;incstack = 0
  7554  002EE2  0E00               	movlw	0
  7555  002EE4  6E09               	movwf	___awmod@sign,c
  7556  002EE6  AE05               	btfss	___awmod@dividend+1,7,c
  7557  002EE8  D006               	goto	l5093
  7558  002EEA  6C04               	negf	___awmod@dividend,c
  7559  002EEC  1E05               	comf	___awmod@dividend+1,f,c
  7560  002EEE  B0D8               	btfsc	status,0,c
  7561  002EF0  2A05               	incf	___awmod@dividend+1,f,c
  7562  002EF2  0E01               	movlw	1
  7563  002EF4  6E09               	movwf	___awmod@sign,c
  7564  002EF6                     l5093:
  7565  002EF6  AE07               	btfss	___awmod@divisor+1,7,c
  7566  002EF8  D004               	goto	l5097
  7567  002EFA  6C06               	negf	___awmod@divisor,c
  7568  002EFC  1E07               	comf	___awmod@divisor+1,f,c
  7569  002EFE  B0D8               	btfsc	status,0,c
  7570  002F00  2A07               	incf	___awmod@divisor+1,f,c
  7571  002F02                     l5097:
  7572  002F02  5006               	movf	___awmod@divisor,w,c
  7573  002F04  1007               	iorwf	___awmod@divisor+1,w,c
  7574  002F06  B4D8               	btfsc	status,2,c
  7575  002F08  D018               	goto	l5113
  7576  002F0A  0E01               	movlw	1
  7577  002F0C  6E08               	movwf	___awmod@counter,c
  7578  002F0E  D004               	goto	l5103
  7579  002F10                     l5101:
  7580  002F10  90D8               	bcf	status,0,c
  7581  002F12  3606               	rlcf	___awmod@divisor,f,c
  7582  002F14  3607               	rlcf	___awmod@divisor+1,f,c
  7583  002F16  2A08               	incf	___awmod@counter,f,c
  7584  002F18                     l5103:
  7585  002F18  AE07               	btfss	___awmod@divisor+1,7,c
  7586  002F1A  D7FA               	goto	l5101
  7587  002F1C                     u6950:
  7588  002F1C  5006               	movf	___awmod@divisor,w,c
  7589  002F1E  5C04               	subwf	___awmod@dividend,w,c
  7590  002F20  5007               	movf	___awmod@divisor+1,w,c
  7591  002F22  5805               	subwfb	___awmod@dividend+1,w,c
  7592  002F24  A0D8               	btfss	status,0,c
  7593  002F26  D004               	goto	l5109
  7594  002F28  5006               	movf	___awmod@divisor,w,c
  7595  002F2A  5E04               	subwf	___awmod@dividend,f,c
  7596  002F2C  5007               	movf	___awmod@divisor+1,w,c
  7597  002F2E  5A05               	subwfb	___awmod@dividend+1,f,c
  7598  002F30                     l5109:
  7599  002F30  90D8               	bcf	status,0,c
  7600  002F32  3207               	rrcf	___awmod@divisor+1,f,c
  7601  002F34  3206               	rrcf	___awmod@divisor,f,c
  7602  002F36  2E08               	decfsz	___awmod@counter,f,c
  7603  002F38  D7F1               	goto	u6950
  7604  002F3A                     l5113:
  7605  002F3A  5009               	movf	___awmod@sign,w,c
  7606  002F3C  B4D8               	btfsc	status,2,c
  7607  002F3E  D004               	goto	l5117
  7608  002F40  6C04               	negf	___awmod@dividend,c
  7609  002F42  1E05               	comf	___awmod@dividend+1,f,c
  7610  002F44  B0D8               	btfsc	status,0,c
  7611  002F46  2A05               	incf	___awmod@dividend+1,f,c
  7612  002F48                     l5117:
  7613  002F48  C004  F004         	movff	___awmod@dividend,?___awmod
  7614  002F4C  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  7615  002F50  0012               	return		;funcret
  7616  002F52                     __end_of___awmod:
  7617                           	opt callstack 0
  7618                           
  7619 ;; *************** function ___awdiv *****************
  7620 ;; Defined at:
  7621 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  dividend        2    3[COMRAM] int 
  7624 ;;  divisor         2    5[COMRAM] int 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  quotient        2    9[COMRAM] int 
  7627 ;;  sign            1    8[COMRAM] unsigned char 
  7628 ;;  counter         1    7[COMRAM] unsigned char 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  2    3[COMRAM] int 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7638 ;;      Params:         4       0       0       0       0       0       0
  7639 ;;      Locals:         4       0       0       0       0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0
  7641 ;;      Totals:         8       0       0       0       0       0       0
  7642 ;;Total ram usage:        8 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    2
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_efgtoa
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text30
  7653  002DE2                     __ptext30:
  7654                           	opt callstack 0
  7655  002DE2                     ___awdiv:
  7656                           	opt callstack 24
  7657                           
  7658                           ;incstack = 0
  7659  002DE2  0E00               	movlw	0
  7660  002DE4  6E09               	movwf	___awdiv@sign,c
  7661  002DE6  AE07               	btfss	___awdiv@divisor+1,7,c
  7662  002DE8  D006               	goto	l5049
  7663  002DEA  6C06               	negf	___awdiv@divisor,c
  7664  002DEC  1E07               	comf	___awdiv@divisor+1,f,c
  7665  002DEE  B0D8               	btfsc	status,0,c
  7666  002DF0  2A07               	incf	___awdiv@divisor+1,f,c
  7667  002DF2  0E01               	movlw	1
  7668  002DF4  6E09               	movwf	___awdiv@sign,c
  7669  002DF6                     l5049:
  7670  002DF6  AE05               	btfss	___awdiv@dividend+1,7,c
  7671  002DF8  D006               	goto	l5055
  7672  002DFA  6C04               	negf	___awdiv@dividend,c
  7673  002DFC  1E05               	comf	___awdiv@dividend+1,f,c
  7674  002DFE  B0D8               	btfsc	status,0,c
  7675  002E00  2A05               	incf	___awdiv@dividend+1,f,c
  7676  002E02  0E01               	movlw	1
  7677  002E04  1A09               	xorwf	___awdiv@sign,f,c
  7678  002E06                     l5055:
  7679  002E06  0E00               	movlw	0
  7680  002E08  6E0B               	movwf	___awdiv@quotient+1,c
  7681  002E0A  0E00               	movlw	0
  7682  002E0C  6E0A               	movwf	___awdiv@quotient,c
  7683  002E0E  5006               	movf	___awdiv@divisor,w,c
  7684  002E10  1007               	iorwf	___awdiv@divisor+1,w,c
  7685  002E12  B4D8               	btfsc	status,2,c
  7686  002E14  D01C               	goto	l5077
  7687  002E16  0E01               	movlw	1
  7688  002E18  6E08               	movwf	___awdiv@counter,c
  7689  002E1A  D004               	goto	l5063
  7690  002E1C                     l5061:
  7691  002E1C  90D8               	bcf	status,0,c
  7692  002E1E  3606               	rlcf	___awdiv@divisor,f,c
  7693  002E20  3607               	rlcf	___awdiv@divisor+1,f,c
  7694  002E22  2A08               	incf	___awdiv@counter,f,c
  7695  002E24                     l5063:
  7696  002E24  AE07               	btfss	___awdiv@divisor+1,7,c
  7697  002E26  D7FA               	goto	l5061
  7698  002E28                     u6890:
  7699  002E28  90D8               	bcf	status,0,c
  7700  002E2A  360A               	rlcf	___awdiv@quotient,f,c
  7701  002E2C  360B               	rlcf	___awdiv@quotient+1,f,c
  7702  002E2E  5006               	movf	___awdiv@divisor,w,c
  7703  002E30  5C04               	subwf	___awdiv@dividend,w,c
  7704  002E32  5007               	movf	___awdiv@divisor+1,w,c
  7705  002E34  5805               	subwfb	___awdiv@dividend+1,w,c
  7706  002E36  A0D8               	btfss	status,0,c
  7707  002E38  D005               	goto	l5073
  7708  002E3A  5006               	movf	___awdiv@divisor,w,c
  7709  002E3C  5E04               	subwf	___awdiv@dividend,f,c
  7710  002E3E  5007               	movf	___awdiv@divisor+1,w,c
  7711  002E40  5A05               	subwfb	___awdiv@dividend+1,f,c
  7712  002E42  800A               	bsf	___awdiv@quotient,0,c
  7713  002E44                     l5073:
  7714  002E44  90D8               	bcf	status,0,c
  7715  002E46  3207               	rrcf	___awdiv@divisor+1,f,c
  7716  002E48  3206               	rrcf	___awdiv@divisor,f,c
  7717  002E4A  2E08               	decfsz	___awdiv@counter,f,c
  7718  002E4C  D7ED               	goto	u6890
  7719  002E4E                     l5077:
  7720  002E4E  5009               	movf	___awdiv@sign,w,c
  7721  002E50  B4D8               	btfsc	status,2,c
  7722  002E52  D004               	goto	l5081
  7723  002E54  6C0A               	negf	___awdiv@quotient,c
  7724  002E56  1E0B               	comf	___awdiv@quotient+1,f,c
  7725  002E58  B0D8               	btfsc	status,0,c
  7726  002E5A  2A0B               	incf	___awdiv@quotient+1,f,c
  7727  002E5C                     l5081:
  7728  002E5C  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  7729  002E60  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  7730  002E64  0012               	return		;funcret
  7731  002E66                     __end_of___awdiv:
  7732                           	opt callstack 0
  7733                           
  7734 ;; *************** function _atoi *****************
  7735 ;; Defined at:
  7736 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7739 ;;		 -> STR_2(33), 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  n               2   23[COMRAM] int 
  7742 ;;  neg             2   16[COMRAM] int 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  2   10[COMRAM] int 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7752 ;;      Params:         2       0       0       0       0       0       0
  7753 ;;      Locals:         9       0       0       0       0       0       0
  7754 ;;      Temps:          4       0       0       0       0       0       0
  7755 ;;      Totals:        15       0       0       0       0       0       0
  7756 ;;Total ram usage:       15 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:    3
  7759 ;; This function calls:
  7760 ;;		___wmul
  7761 ;;		_isdigit
  7762 ;;		_isspace
  7763 ;; This function is called by:
  7764 ;;		_vfpfcnvrt
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text31
  7769  00241E                     __ptext31:
  7770                           	opt callstack 0
  7771  00241E                     _atoi:
  7772                           	opt callstack 24
  7773                           
  7774                           ;incstack = 0
  7775  00241E  0E00               	movlw	0
  7776  002420  6E19               	movwf	atoi@n+1,c
  7777  002422  0E00               	movlw	0
  7778  002424  6E18               	movwf	atoi@n,c
  7779  002426  0E00               	movlw	0
  7780  002428  6E12               	movwf	atoi@neg+1,c
  7781  00242A  0E00               	movlw	0
  7782  00242C  6E11               	movwf	atoi@neg,c
  7783  00242E  D002               	goto	l5599
  7784  002430                     l5597:
  7785  002430  4A0B               	infsnz	atoi@s,f,c
  7786  002432  2A0C               	incf	atoi@s+1,f,c
  7787  002434                     l5599:
  7788  002434  0E01               	movlw	1
  7789  002436  6E17               	movwf	_atoi$1126,c
  7790  002438  C00B  FFF6         	movff	atoi@s,tblptrl
  7791  00243C  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7792  002440                     	if	0	;tblptru may be non-zero
  7793  002440                     	endif
  7794  002440                     	if	0	;tblptru may be non-zero
  7795  002440                     	endif
  7796  002440  0008               	tblrd		*
  7797  002442  50F5               	movf	tablat,w,c
  7798  002444  0A20               	xorlw	32
  7799  002446  B4D8               	btfsc	status,2,c
  7800  002448  D018               	goto	l5607
  7801  00244A  0EF7               	movlw	247
  7802  00244C  6E0D               	movwf	??_atoi& (0+255),c
  7803  00244E  0EFF               	movlw	255
  7804  002450  6E0E               	movwf	(??_atoi+1)& (0+255),c
  7805  002452  C00B  FFF6         	movff	atoi@s,tblptrl
  7806  002456  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7807  00245A                     	if	0	;tblptru may be non-zero
  7808  00245A                     	endif
  7809  00245A                     	if	0	;tblptru may be non-zero
  7810  00245A                     	endif
  7811  00245A  0008               	tblrd		*
  7812  00245C  50F5               	movf	tablat,w,c
  7813  00245E  6E0F               	movwf	(??_atoi+2)& (0+255),c
  7814  002460  6A10               	clrf	(??_atoi+3)& (0+255),c
  7815  002462  500D               	movf	??_atoi,w,c
  7816  002464  260F               	addwf	??_atoi+2,f,c
  7817  002466  500E               	movf	??_atoi+1,w,c
  7818  002468  2210               	addwfc	??_atoi+3,f,c
  7819  00246A  5010               	movf	??_atoi+3,w,c
  7820  00246C  E104               	bnz	u7830
  7821  00246E  0E05               	movlw	5
  7822  002470  5C0F               	subwf	??_atoi+2,w,c
  7823  002472  A0D8               	btfss	status,0,c
  7824  002474  D002               	goto	l5607
  7825  002476                     u7830:
  7826  002476  0E00               	movlw	0
  7827  002478  6E17               	movwf	_atoi$1126,c
  7828  00247A                     l5607:
  7829  00247A  C017  F013         	movff	_atoi$1126,_atoi$1125
  7830  00247E  6A14               	clrf	_atoi$1125+1,c
  7831  002480  5013               	movf	_atoi$1125,w,c
  7832  002482  1014               	iorwf	_atoi$1125+1,w,c
  7833  002484  B4D8               	btfsc	status,2,c
  7834  002486  D008               	goto	l5617
  7835  002488  D7D3               	goto	l5597
  7836  00248A                     l5613:
  7837  00248A  0E00               	movlw	0
  7838  00248C  6E12               	movwf	atoi@neg+1,c
  7839  00248E  0E01               	movlw	1
  7840  002490  6E11               	movwf	atoi@neg,c
  7841  002492                     l5615:
  7842  002492  4A0B               	infsnz	atoi@s,f,c
  7843  002494  2A0C               	incf	atoi@s+1,f,c
  7844  002496  D02E               	goto	l5623
  7845  002498                     l5617:
  7846  002498  C00B  FFF6         	movff	atoi@s,tblptrl
  7847  00249C  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7848  0024A0                     	if	0	;tblptru may be non-zero
  7849  0024A0                     	endif
  7850  0024A0                     	if	0	;tblptru may be non-zero
  7851  0024A0                     	endif
  7852  0024A0  0008               	tblrd		*
  7853  0024A2  50F5               	movf	tablat,w,c
  7854  0024A4  6E0D               	movwf	??_atoi& (0+255),c
  7855  0024A6  6A0E               	clrf	(??_atoi+1)& (0+255),c
  7856                           
  7857                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7858                           ; Switch size 1, requested type "simple"
  7859                           ; Number of cases is 1, Range of values is 0 to 0
  7860                           ; switch strategies available:
  7861                           ; Name         Instructions Cycles
  7862                           ; simple_byte            4     3 (average)
  7863                           ;	Chosen strategy is simple_byte
  7864  0024A8  500E               	movf	??_atoi+1,w,c
  7865  0024AA  0A00               	xorlw	0	; case 0
  7866  0024AC  A4D8               	btfss	status,2,c
  7867  0024AE  D022               	goto	l5623
  7868                           
  7869                           ; Switch size 1, requested type "simple"
  7870                           ; Number of cases is 2, Range of values is 43 to 45
  7871                           ; switch strategies available:
  7872                           ; Name         Instructions Cycles
  7873                           ; simple_byte            7     4 (average)
  7874                           ;	Chosen strategy is simple_byte
  7875  0024B0  500D               	movf	??_atoi,w,c
  7876  0024B2  0A2B               	xorlw	43	; case 43
  7877  0024B4  B4D8               	btfsc	status,2,c
  7878  0024B6  D7ED               	goto	l5615
  7879  0024B8  0A06               	xorlw	6	; case 45
  7880  0024BA  B4D8               	btfsc	status,2,c
  7881  0024BC  D7E6               	goto	l5613
  7882  0024BE  D01A               	goto	l5623
  7883  0024C0                     l5619:
  7884  0024C0  C018  F004         	movff	atoi@n,___wmul@multiplier
  7885  0024C4  C019  F005         	movff	atoi@n+1,___wmul@multiplier+1
  7886  0024C8  0E00               	movlw	0
  7887  0024CA  6E07               	movwf	___wmul@multiplicand+1,c
  7888  0024CC  0E0A               	movlw	10
  7889  0024CE  6E06               	movwf	___wmul@multiplicand,c
  7890  0024D0  EC75  F019         	call	___wmul	;wreg free
  7891  0024D4  C00B  FFF6         	movff	atoi@s,tblptrl
  7892  0024D8  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7893  0024DC                     	if	0	;tblptru may be non-zero
  7894  0024DC                     	endif
  7895  0024DC                     	if	0	;tblptru may be non-zero
  7896  0024DC                     	endif
  7897  0024DC  0008               	tblrd		*
  7898  0024DE  50F5               	movf	tablat,w,c
  7899  0024E0  5E04               	subwf	?___wmul,f,c
  7900  0024E2  0E00               	movlw	0
  7901  0024E4  5A05               	subwfb	?___wmul+1,f,c
  7902  0024E6  0E30               	movlw	48
  7903  0024E8  2404               	addwf	?___wmul,w,c
  7904  0024EA  6E18               	movwf	atoi@n,c
  7905  0024EC  0E00               	movlw	0
  7906  0024EE  2005               	addwfc	?___wmul+1,w,c
  7907  0024F0  6E19               	movwf	atoi@n+1,c
  7908  0024F2  D7CF               	goto	l5615
  7909  0024F4                     l5623:
  7910  0024F4  0ED0               	movlw	208
  7911  0024F6  6E0D               	movwf	??_atoi& (0+255),c
  7912  0024F8  0EFF               	movlw	255
  7913  0024FA  6E0E               	movwf	(??_atoi+1)& (0+255),c
  7914  0024FC  C00B  FFF6         	movff	atoi@s,tblptrl
  7915  002500  C00C  FFF7         	movff	atoi@s+1,tblptrh
  7916  002504                     	if	0	;tblptru may be non-zero
  7917  002504                     	endif
  7918  002504                     	if	0	;tblptru may be non-zero
  7919  002504                     	endif
  7920  002504  0008               	tblrd		*
  7921  002506  50F5               	movf	tablat,w,c
  7922  002508  6E0F               	movwf	(??_atoi+2)& (0+255),c
  7923  00250A  6A10               	clrf	(??_atoi+3)& (0+255),c
  7924  00250C  500D               	movf	??_atoi,w,c
  7925  00250E  260F               	addwf	??_atoi+2,f,c
  7926  002510  500E               	movf	??_atoi+1,w,c
  7927  002512  2210               	addwfc	??_atoi+3,f,c
  7928  002514  5010               	movf	??_atoi+3,w,c
  7929  002516  E106               	bnz	u7850
  7930  002518  0E0A               	movlw	10
  7931  00251A  5C0F               	subwf	??_atoi+2,w,c
  7932  00251C  B0D8               	btfsc	status,0,c
  7933  00251E  D002               	goto	u7850
  7934  002520  0E01               	movlw	1
  7935  002522  D001               	goto	u7860
  7936  002524                     u7850:
  7937  002524  0E00               	movlw	0
  7938  002526                     u7860:
  7939  002526  6E15               	movwf	_atoi$1127,c
  7940  002528  6A16               	clrf	_atoi$1127+1,c
  7941  00252A  5015               	movf	_atoi$1127,w,c
  7942  00252C  1016               	iorwf	_atoi$1127+1,w,c
  7943  00252E  A4D8               	btfss	status,2,c
  7944  002530  D7C7               	goto	l5619
  7945  002532  5011               	movf	atoi@neg,w,c
  7946  002534  1012               	iorwf	atoi@neg+1,w,c
  7947  002536  A4D8               	btfss	status,2,c
  7948  002538  D00D               	goto	l1027
  7949  00253A  C018  F00D         	movff	atoi@n,??_atoi
  7950  00253E  C019  F00E         	movff	atoi@n+1,??_atoi+1
  7951  002542  1E0D               	comf	??_atoi,f,c
  7952  002544  1E0E               	comf	??_atoi+1,f,c
  7953  002546  4A0D               	infsnz	??_atoi,f,c
  7954  002548  2A0E               	incf	??_atoi+1,f,c
  7955  00254A  C00D  F00B         	movff	??_atoi,?_atoi
  7956  00254E  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  7957  002552  0012               	return	
  7958  002554                     l1027:
  7959  002554  C018  F00B         	movff	atoi@n,?_atoi
  7960  002558  C019  F00C         	movff	atoi@n+1,?_atoi+1
  7961  00255C  0012               	return		;funcret
  7962  00255E                     __end_of_atoi:
  7963                           	opt callstack 0
  7964                           
  7965 ;; *************** function _isspace *****************
  7966 ;; Defined at:
  7967 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  c               2    3[COMRAM] int 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  2    3[COMRAM] int 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7981 ;;      Params:         2       0       0       0       0       0       0
  7982 ;;      Locals:         1       0       0       0       0       0       0
  7983 ;;      Temps:          4       0       0       0       0       0       0
  7984 ;;      Totals:         7       0       0       0       0       0       0
  7985 ;;Total ram usage:        7 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    2
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_atoi
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text32
  7996  00318C                     __ptext32:
  7997                           	opt callstack 0
  7998  00318C                     _isspace:
  7999                           	opt callstack 24
  8000                           
  8001                           ;incstack = 0
  8002  00318C  0E01               	movlw	1
  8003  00318E  6E0A               	movwf	_isspace$1156,c
  8004  003190  0E20               	movlw	32
  8005  003192  1804               	xorwf	isspace@c,w,c
  8006  003194  1005               	iorwf	isspace@c+1,w,c
  8007  003196  B4D8               	btfsc	status,2,c
  8008  003198  D014               	goto	l5257
  8009  00319A  0EF7               	movlw	247
  8010  00319C  6E06               	movwf	??_isspace& (0+255),c
  8011  00319E  0EFF               	movlw	255
  8012  0031A0  6E07               	movwf	(??_isspace+1)& (0+255),c
  8013  0031A2  C004  F008         	movff	isspace@c,??_isspace+2
  8014  0031A6  C005  F009         	movff	isspace@c+1,??_isspace+3
  8015  0031AA  5006               	movf	??_isspace,w,c
  8016  0031AC  2608               	addwf	??_isspace+2,f,c
  8017  0031AE  5007               	movf	??_isspace+1,w,c
  8018  0031B0  2209               	addwfc	??_isspace+3,f,c
  8019  0031B2  5009               	movf	??_isspace+3,w,c
  8020  0031B4  E104               	bnz	u7220
  8021  0031B6  0E05               	movlw	5
  8022  0031B8  5C08               	subwf	??_isspace+2,w,c
  8023  0031BA  A0D8               	btfss	status,0,c
  8024  0031BC  D002               	goto	l5257
  8025  0031BE                     u7220:
  8026  0031BE  0E00               	movlw	0
  8027  0031C0  6E0A               	movwf	_isspace$1156,c
  8028  0031C2                     l5257:
  8029  0031C2  C00A  F004         	movff	_isspace$1156,?_isspace
  8030  0031C6  6A05               	clrf	?_isspace+1,c
  8031  0031C8  0012               	return		;funcret
  8032  0031CA                     __end_of_isspace:
  8033                           	opt callstack 0
  8034                           
  8035 ;; *************** function _isdigit *****************
  8036 ;; Defined at:
  8037 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  c               2    3[COMRAM] int 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  2    3[COMRAM] int 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8051 ;;      Params:         2       0       0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0
  8053 ;;      Temps:          4       0       0       0       0       0       0
  8054 ;;      Totals:         6       0       0       0       0       0       0
  8055 ;;Total ram usage:        6 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:    2
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_vfpfcnvrt
  8062 ;;		_atoi
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text33
  8067  003262                     __ptext33:
  8068                           	opt callstack 0
  8069  003262                     _isdigit:
  8070                           	opt callstack 25
  8071                           
  8072                           ;incstack = 0
  8073  003262  0ED0               	movlw	208
  8074  003264  6E06               	movwf	??_isdigit& (0+255),c
  8075  003266  0EFF               	movlw	255
  8076  003268  6E07               	movwf	(??_isdigit+1)& (0+255),c
  8077  00326A  C004  F008         	movff	isdigit@c,??_isdigit+2
  8078  00326E  C005  F009         	movff	isdigit@c+1,??_isdigit+3
  8079  003272  5006               	movf	??_isdigit,w,c
  8080  003274  2608               	addwf	??_isdigit+2,f,c
  8081  003276  5007               	movf	??_isdigit+1,w,c
  8082  003278  2209               	addwfc	??_isdigit+3,f,c
  8083  00327A  5009               	movf	??_isdigit+3,w,c
  8084  00327C  E106               	bnz	u6420
  8085  00327E  0E0A               	movlw	10
  8086  003280  5C08               	subwf	??_isdigit+2,w,c
  8087  003282  B0D8               	btfsc	status,0,c
  8088  003284  D002               	goto	u6420
  8089  003286  0E01               	movlw	1
  8090  003288  D001               	goto	u6430
  8091  00328A                     u6420:
  8092  00328A  0E00               	movlw	0
  8093  00328C                     u6430:
  8094  00328C  6E04               	movwf	?_isdigit,c
  8095  00328E  6A05               	clrf	?_isdigit+1,c
  8096  003290  0012               	return		;funcret
  8097  003292                     __end_of_isdigit:
  8098                           	opt callstack 0
  8099                           
  8100 ;; *************** function ___wmul *****************
  8101 ;; Defined at:
  8102 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;  multiplier      2    3[COMRAM] unsigned int 
  8105 ;;  multiplicand    2    5[COMRAM] unsigned int 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  product         2    7[COMRAM] unsigned int 
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  2    3[COMRAM] unsigned int 
  8110 ;; Registers used:
  8111 ;;		wreg, status,2, status,0, prodl, prodh
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8117 ;;      Params:         4       0       0       0       0       0       0
  8118 ;;      Locals:         2       0       0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0
  8120 ;;      Totals:         6       0       0       0       0       0       0
  8121 ;;Total ram usage:        6 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:    2
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_atoi
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text34
  8132  0032EA                     __ptext34:
  8133                           	opt callstack 0
  8134  0032EA                     ___wmul:
  8135                           	opt callstack 24
  8136                           
  8137                           ;incstack = 0
  8138  0032EA  5004               	movf	___wmul@multiplier,w,c
  8139  0032EC  0206               	mulwf	___wmul@multiplicand,c
  8140  0032EE  CFF3 F008          	movff	prodl,___wmul@product
  8141  0032F2  CFF4 F009          	movff	prodh,___wmul@product+1
  8142  0032F6  5004               	movf	___wmul@multiplier,w,c
  8143  0032F8  0207               	mulwf	___wmul@multiplicand+1,c
  8144  0032FA  50F3               	movf	prodl,w,c
  8145  0032FC  2609               	addwf	___wmul@product+1,f,c
  8146  0032FE  5005               	movf	___wmul@multiplier+1,w,c
  8147  003300  0206               	mulwf	___wmul@multiplicand,c
  8148  003302  50F3               	movf	prodl,w,c
  8149  003304  2609               	addwf	___wmul@product+1,f,c
  8150  003306  C008  F004         	movff	___wmul@product,?___wmul
  8151  00330A  C009  F005         	movff	___wmul@product+1,?___wmul+1
  8152  00330E  0012               	return		;funcret
  8153  003310                     __end_of___wmul:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function _init_EUSART *****************
  8157 ;; Defined at:
  8158 ;;		line 4 in file "../Bibliotecas/eusart.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8172 ;;      Params:         0       0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    2
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_main
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text35
  8187  003310                     __ptext35:
  8188                           	opt callstack 0
  8189  003310                     _init_EUSART:
  8190                           	opt callstack 28
  8191                           
  8192                           ;../Bibliotecas/eusart.c: 6:     TXSTAbits.TXEN = 1;
  8193                           
  8194                           ;incstack = 0
  8195  003310  8AAC               	bsf	4012,5,c	;volatile
  8196                           
  8197                           ;../Bibliotecas/eusart.c: 7:     RCSTAbits.CREN = 1;
  8198  003312  88AB               	bsf	4011,4,c	;volatile
  8199                           
  8200                           ;../Bibliotecas/eusart.c: 8:     TXSTAbits.SYNC = 0;
  8201  003314  98AC               	bcf	4012,4,c	;volatile
  8202                           
  8203                           ;../Bibliotecas/eusart.c: 9:     RCSTAbits.SPEN = 1;
  8204  003316  8EAB               	bsf	4011,7,c	;volatile
  8205                           
  8206                           ;../Bibliotecas/eusart.c: 11:     TXSTAbits.BRGH = 0;
  8207  003318  94AC               	bcf	4012,2,c	;volatile
  8208                           
  8209                           ;../Bibliotecas/eusart.c: 12:     BAUDCTLbits.BRG16 = 0;
  8210  00331A  96B8               	bcf	4024,3,c	;volatile
  8211                           
  8212                           ;../Bibliotecas/eusart.c: 14:     SPBRG = 12;
  8213  00331C  0E0C               	movlw	12
  8214  00331E  6EAF               	movwf	4015,c	;volatile
  8215  003320  0012               	return		;funcret
  8216  003322                     __end_of_init_EUSART:
  8217                           	opt callstack 0
  8218                           
  8219 ;; *************** function ___xxtofl *****************
  8220 ;; Defined at:
  8221 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  sign            1    wreg     unsigned char 
  8224 ;;  val             4    3[COMRAM] long 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  sign            1   11[COMRAM] unsigned char 
  8227 ;;  arg             4   13[COMRAM] unsigned long 
  8228 ;;  exp             1   12[COMRAM] unsigned char 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  4    3[COMRAM] unsigned char 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8238 ;;      Params:         4       0       0       0       0       0       0
  8239 ;;      Locals:         6       0       0       0       0       0       0
  8240 ;;      Temps:          4       0       0       0       0       0       0
  8241 ;;      Totals:        14       0       0       0       0       0       0
  8242 ;;Total ram usage:       14 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    2
  8245 ;; This function calls:
  8246 ;;		Nothing
  8247 ;; This function is called by:
  8248 ;;		_main
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text36
  8253  00255E                     __ptext36:
  8254                           	opt callstack 0
  8255  00255E                     ___xxtofl:
  8256                           	opt callstack 28
  8257                           
  8258                           ;incstack = 0
  8259                           ;___xxtofl@sign stored from wreg
  8260  00255E  6E0C               	movwf	___xxtofl@sign,c
  8261  002560  500C               	movf	___xxtofl@sign,w,c
  8262  002562  A4D8               	btfss	status,2,c
  8263  002564  AE07               	btfss	___xxtofl@val+3,7,c
  8264  002566  D01A               	goto	l972
  8265  002568  C004  F008         	movff	___xxtofl@val,??___xxtofl
  8266  00256C  C005  F009         	movff	___xxtofl@val+1,??___xxtofl+1
  8267  002570  C006  F00A         	movff	___xxtofl@val+2,??___xxtofl+2
  8268  002574  C007  F00B         	movff	___xxtofl@val+3,??___xxtofl+3
  8269  002578  1E08               	comf	??___xxtofl,f,c
  8270  00257A  1E09               	comf	??___xxtofl+1,f,c
  8271  00257C  1E0A               	comf	??___xxtofl+2,f,c
  8272  00257E  1E0B               	comf	??___xxtofl+3,f,c
  8273  002580  2A08               	incf	??___xxtofl,f,c
  8274  002582  0E00               	movlw	0
  8275  002584  2209               	addwfc	??___xxtofl+1,f,c
  8276  002586  220A               	addwfc	??___xxtofl+2,f,c
  8277  002588  220B               	addwfc	??___xxtofl+3,f,c
  8278  00258A  C008  F00E         	movff	??___xxtofl,___xxtofl@arg
  8279  00258E  C009  F00F         	movff	??___xxtofl+1,___xxtofl@arg+1
  8280  002592  C00A  F010         	movff	??___xxtofl+2,___xxtofl@arg+2
  8281  002596  C00B  F011         	movff	??___xxtofl+3,___xxtofl@arg+3
  8282  00259A  D008               	goto	l4255
  8283  00259C                     l972:
  8284  00259C  C004  F00E         	movff	___xxtofl@val,___xxtofl@arg
  8285  0025A0  C005  F00F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8286  0025A4  C006  F010         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8287  0025A8  C007  F011         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8288  0025AC                     l4255:
  8289  0025AC  5004               	movf	___xxtofl@val,w,c
  8290  0025AE  1005               	iorwf	___xxtofl@val+1,w,c
  8291  0025B0  1006               	iorwf	___xxtofl@val+2,w,c
  8292  0025B2  1007               	iorwf	___xxtofl@val+3,w,c
  8293  0025B4  A4D8               	btfss	status,2,c
  8294  0025B6  D009               	goto	l4261
  8295  0025B8  0E00               	movlw	0
  8296  0025BA  6E04               	movwf	?___xxtofl,c
  8297  0025BC  0E00               	movlw	0
  8298  0025BE  6E05               	movwf	?___xxtofl+1,c
  8299  0025C0  0E00               	movlw	0
  8300  0025C2  6E06               	movwf	?___xxtofl+2,c
  8301  0025C4  0E00               	movlw	0
  8302  0025C6  6E07               	movwf	?___xxtofl+3,c
  8303  0025C8  0012               	return	
  8304  0025CA                     l4261:
  8305  0025CA  0E96               	movlw	150
  8306  0025CC  6E0D               	movwf	___xxtofl@exp,c
  8307  0025CE  D006               	goto	l4265
  8308  0025D0                     l4263:
  8309  0025D0  2A0D               	incf	___xxtofl@exp,f,c
  8310  0025D2  90D8               	bcf	status,0,c
  8311  0025D4  3211               	rrcf	___xxtofl@arg+3,f,c
  8312  0025D6  3210               	rrcf	___xxtofl@arg+2,f,c
  8313  0025D8  320F               	rrcf	___xxtofl@arg+1,f,c
  8314  0025DA  320E               	rrcf	___xxtofl@arg,f,c
  8315  0025DC                     l4265:
  8316  0025DC  0E00               	movlw	0
  8317  0025DE  140E               	andwf	___xxtofl@arg,w,c
  8318  0025E0  6E08               	movwf	??___xxtofl& (0+255),c
  8319  0025E2  0E00               	movlw	0
  8320  0025E4  140F               	andwf	___xxtofl@arg+1,w,c
  8321  0025E6  6E09               	movwf	(??___xxtofl+1)& (0+255),c
  8322  0025E8  0E00               	movlw	0
  8323  0025EA  1410               	andwf	___xxtofl@arg+2,w,c
  8324  0025EC  6E0A               	movwf	(??___xxtofl+2)& (0+255),c
  8325  0025EE  0EFE               	movlw	254
  8326  0025F0  1411               	andwf	___xxtofl@arg+3,w,c
  8327  0025F2  6E0B               	movwf	(??___xxtofl+3)& (0+255),c
  8328  0025F4  5008               	movf	??___xxtofl,w,c
  8329  0025F6  1009               	iorwf	??___xxtofl+1,w,c
  8330  0025F8  100A               	iorwf	??___xxtofl+2,w,c
  8331  0025FA  100B               	iorwf	??___xxtofl+3,w,c
  8332  0025FC  B4D8               	btfsc	status,2,c
  8333  0025FE  D00D               	goto	l979
  8334  002600  D7E7               	goto	l4263
  8335  002602                     l4267:
  8336  002602  2A0D               	incf	___xxtofl@exp,f,c
  8337  002604  0E01               	movlw	1
  8338  002606  260E               	addwf	___xxtofl@arg,f,c
  8339  002608  0E00               	movlw	0
  8340  00260A  220F               	addwfc	___xxtofl@arg+1,f,c
  8341  00260C  2210               	addwfc	___xxtofl@arg+2,f,c
  8342  00260E  2211               	addwfc	___xxtofl@arg+3,f,c
  8343  002610  90D8               	bcf	status,0,c
  8344  002612  3211               	rrcf	___xxtofl@arg+3,f,c
  8345  002614  3210               	rrcf	___xxtofl@arg+2,f,c
  8346  002616  320F               	rrcf	___xxtofl@arg+1,f,c
  8347  002618  320E               	rrcf	___xxtofl@arg,f,c
  8348  00261A                     l979:
  8349  00261A  0E00               	movlw	0
  8350  00261C  140E               	andwf	___xxtofl@arg,w,c
  8351  00261E  6E08               	movwf	??___xxtofl& (0+255),c
  8352  002620  0E00               	movlw	0
  8353  002622  140F               	andwf	___xxtofl@arg+1,w,c
  8354  002624  6E09               	movwf	(??___xxtofl+1)& (0+255),c
  8355  002626  0E00               	movlw	0
  8356  002628  1410               	andwf	___xxtofl@arg+2,w,c
  8357  00262A  6E0A               	movwf	(??___xxtofl+2)& (0+255),c
  8358  00262C  0EFF               	movlw	255
  8359  00262E  1411               	andwf	___xxtofl@arg+3,w,c
  8360  002630  6E0B               	movwf	(??___xxtofl+3)& (0+255),c
  8361  002632  5008               	movf	??___xxtofl,w,c
  8362  002634  1009               	iorwf	??___xxtofl+1,w,c
  8363  002636  100A               	iorwf	??___xxtofl+2,w,c
  8364  002638  100B               	iorwf	??___xxtofl+3,w,c
  8365  00263A  B4D8               	btfsc	status,2,c
  8366  00263C  D007               	goto	l4275
  8367  00263E  D7E1               	goto	l4267
  8368  002640                     l4273:
  8369  002640  060D               	decf	___xxtofl@exp,f,c
  8370  002642  90D8               	bcf	status,0,c
  8371  002644  360E               	rlcf	___xxtofl@arg,f,c
  8372  002646  360F               	rlcf	___xxtofl@arg+1,f,c
  8373  002648  3610               	rlcf	___xxtofl@arg+2,f,c
  8374  00264A  3611               	rlcf	___xxtofl@arg+3,f,c
  8375  00264C                     l4275:
  8376  00264C  BE10               	btfsc	___xxtofl@arg+2,7,c
  8377  00264E  D003               	goto	u5550
  8378  002650  0E02               	movlw	2
  8379  002652  600D               	cpfslt	___xxtofl@exp,c
  8380  002654  D7F5               	goto	l4273
  8381  002656                     u5550:
  8382  002656  A00D               	btfss	___xxtofl@exp,0,c
  8383  002658  9E10               	bcf	___xxtofl@arg+2,7,c
  8384  00265A  90D8               	bcf	status,0,c
  8385  00265C  320D               	rrcf	___xxtofl@exp,f,c
  8386  00265E  C00D  F008         	movff	___xxtofl@exp,??___xxtofl
  8387  002662  6A09               	clrf	(??___xxtofl+1)& (0+255),c
  8388  002664  6A0A               	clrf	(??___xxtofl+2)& (0+255),c
  8389  002666  6A0B               	clrf	(??___xxtofl+3)& (0+255),c
  8390  002668  C008  F00B         	movff	??___xxtofl,??___xxtofl+3
  8391  00266C  6A0A               	clrf	??___xxtofl+2,c
  8392  00266E  6A09               	clrf	??___xxtofl+1,c
  8393  002670  6A08               	clrf	??___xxtofl,c
  8394  002672  5008               	movf	??___xxtofl,w,c
  8395  002674  120E               	iorwf	___xxtofl@arg,f,c
  8396  002676  5009               	movf	??___xxtofl+1,w,c
  8397  002678  120F               	iorwf	___xxtofl@arg+1,f,c
  8398  00267A  500A               	movf	??___xxtofl+2,w,c
  8399  00267C  1210               	iorwf	___xxtofl@arg+2,f,c
  8400  00267E  500B               	movf	??___xxtofl+3,w,c
  8401  002680  1211               	iorwf	___xxtofl@arg+3,f,c
  8402  002682  500C               	movf	___xxtofl@sign,w,c
  8403  002684  A4D8               	btfss	status,2,c
  8404  002686  AE07               	btfss	___xxtofl@val+3,7,c
  8405  002688  D001               	goto	l4291
  8406  00268A  8E11               	bsf	___xxtofl@arg+3,7,c
  8407  00268C                     l4291:
  8408  00268C  C00E  F004         	movff	___xxtofl@arg,?___xxtofl
  8409  002690  C00F  F005         	movff	___xxtofl@arg+1,?___xxtofl+1
  8410  002694  C010  F006         	movff	___xxtofl@arg+2,?___xxtofl+2
  8411  002698  C011  F007         	movff	___xxtofl@arg+3,?___xxtofl+3
  8412  00269C  0012               	return		;funcret
  8413  00269E                     __end_of___xxtofl:
  8414                           	opt callstack 0
  8415                           
  8416 ;; *************** function ___lmul *****************
  8417 ;; Defined at:
  8418 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  multiplier      4    3[COMRAM] unsigned long 
  8421 ;;  multiplicand    4    7[COMRAM] unsigned long 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;  product         4   11[COMRAM] unsigned long 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  4    3[COMRAM] unsigned long 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8433 ;;      Params:         8       0       0       0       0       0       0
  8434 ;;      Locals:         4       0       0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0
  8436 ;;      Totals:        12       0       0       0       0       0       0
  8437 ;;Total ram usage:       12 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    2
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_main
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text37
  8448  003000                     __ptext37:
  8449                           	opt callstack 0
  8450  003000                     ___lmul:
  8451                           	opt callstack 28
  8452                           
  8453                           ;incstack = 0
  8454  003000  0E00               	movlw	0
  8455  003002  6E0C               	movwf	___lmul@product,c
  8456  003004  0E00               	movlw	0
  8457  003006  6E0D               	movwf	___lmul@product+1,c
  8458  003008  0E00               	movlw	0
  8459  00300A  6E0E               	movwf	___lmul@product+2,c
  8460  00300C  0E00               	movlw	0
  8461  00300E  6E0F               	movwf	___lmul@product+3,c
  8462  003010                     l4197:
  8463  003010  A004               	btfss	___lmul@multiplier,0,c
  8464  003012  D008               	goto	l4201
  8465  003014  5008               	movf	___lmul@multiplicand,w,c
  8466  003016  260C               	addwf	___lmul@product,f,c
  8467  003018  5009               	movf	___lmul@multiplicand+1,w,c
  8468  00301A  220D               	addwfc	___lmul@product+1,f,c
  8469  00301C  500A               	movf	___lmul@multiplicand+2,w,c
  8470  00301E  220E               	addwfc	___lmul@product+2,f,c
  8471  003020  500B               	movf	___lmul@multiplicand+3,w,c
  8472  003022  220F               	addwfc	___lmul@product+3,f,c
  8473  003024                     l4201:
  8474  003024  90D8               	bcf	status,0,c
  8475  003026  3608               	rlcf	___lmul@multiplicand,f,c
  8476  003028  3609               	rlcf	___lmul@multiplicand+1,f,c
  8477  00302A  360A               	rlcf	___lmul@multiplicand+2,f,c
  8478  00302C  360B               	rlcf	___lmul@multiplicand+3,f,c
  8479  00302E  90D8               	bcf	status,0,c
  8480  003030  3207               	rrcf	___lmul@multiplier+3,f,c
  8481  003032  3206               	rrcf	___lmul@multiplier+2,f,c
  8482  003034  3205               	rrcf	___lmul@multiplier+1,f,c
  8483  003036  3204               	rrcf	___lmul@multiplier,f,c
  8484  003038  5004               	movf	___lmul@multiplier,w,c
  8485  00303A  1005               	iorwf	___lmul@multiplier+1,w,c
  8486  00303C  1006               	iorwf	___lmul@multiplier+2,w,c
  8487  00303E  1007               	iorwf	___lmul@multiplier+3,w,c
  8488  003040  A4D8               	btfss	status,2,c
  8489  003042  D7E6               	goto	l4197
  8490  003044  C00C  F004         	movff	___lmul@product,?___lmul
  8491  003048  C00D  F005         	movff	___lmul@product+1,?___lmul+1
  8492  00304C  C00E  F006         	movff	___lmul@product+2,?___lmul+2
  8493  003050  C00F  F007         	movff	___lmul@product+3,?___lmul+3
  8494  003054  0012               	return		;funcret
  8495  003056                     __end_of___lmul:
  8496                           	opt callstack 0
  8497                           
  8498 ;; *************** function ___aldiv *****************
  8499 ;; Defined at:
  8500 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  dividend        4   15[COMRAM] long 
  8503 ;;  divisor         4   19[COMRAM] long 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;  quotient        4   25[COMRAM] long 
  8506 ;;  sign            1   24[COMRAM] unsigned char 
  8507 ;;  counter         1   23[COMRAM] unsigned char 
  8508 ;; Return value:  Size  Location     Type
  8509 ;;                  4   15[COMRAM] long 
  8510 ;; Registers used:
  8511 ;;		wreg, status,2, status,0
  8512 ;; Tracked objects:
  8513 ;;		On entry : 0/0
  8514 ;;		On exit  : 0/0
  8515 ;;		Unchanged: 0/0
  8516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8517 ;;      Params:         8       0       0       0       0       0       0
  8518 ;;      Locals:         6       0       0       0       0       0       0
  8519 ;;      Temps:          0       0       0       0       0       0       0
  8520 ;;      Totals:        14       0       0       0       0       0       0
  8521 ;;Total ram usage:       14 bytes
  8522 ;; Hardware stack levels used:    1
  8523 ;; Hardware stack levels required when called:    2
  8524 ;; This function calls:
  8525 ;;		Nothing
  8526 ;; This function is called by:
  8527 ;;		_main
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text38
  8532  0029EE                     __ptext38:
  8533                           	opt callstack 0
  8534  0029EE                     ___aldiv:
  8535                           	opt callstack 28
  8536                           
  8537                           ;incstack = 0
  8538  0029EE  0E00               	movlw	0
  8539  0029F0  6E19               	movwf	___aldiv@sign,c
  8540  0029F2  AE17               	btfss	___aldiv@divisor+3,7,c
  8541  0029F4  D00A               	goto	l4213
  8542  0029F6  1E17               	comf	___aldiv@divisor+3,f,c
  8543  0029F8  1E16               	comf	___aldiv@divisor+2,f,c
  8544  0029FA  1E15               	comf	___aldiv@divisor+1,f,c
  8545  0029FC  6C14               	negf	___aldiv@divisor,c
  8546  0029FE  0E00               	movlw	0
  8547  002A00  2215               	addwfc	___aldiv@divisor+1,f,c
  8548  002A02  2216               	addwfc	___aldiv@divisor+2,f,c
  8549  002A04  2217               	addwfc	___aldiv@divisor+3,f,c
  8550  002A06  0E01               	movlw	1
  8551  002A08  6E19               	movwf	___aldiv@sign,c
  8552  002A0A                     l4213:
  8553  002A0A  AE13               	btfss	___aldiv@dividend+3,7,c
  8554  002A0C  D00A               	goto	l4219
  8555  002A0E  1E13               	comf	___aldiv@dividend+3,f,c
  8556  002A10  1E12               	comf	___aldiv@dividend+2,f,c
  8557  002A12  1E11               	comf	___aldiv@dividend+1,f,c
  8558  002A14  6C10               	negf	___aldiv@dividend,c
  8559  002A16  0E00               	movlw	0
  8560  002A18  2211               	addwfc	___aldiv@dividend+1,f,c
  8561  002A1A  2212               	addwfc	___aldiv@dividend+2,f,c
  8562  002A1C  2213               	addwfc	___aldiv@dividend+3,f,c
  8563  002A1E  0E01               	movlw	1
  8564  002A20  1A19               	xorwf	___aldiv@sign,f,c
  8565  002A22                     l4219:
  8566  002A22  0E00               	movlw	0
  8567  002A24  6E1A               	movwf	___aldiv@quotient,c
  8568  002A26  0E00               	movlw	0
  8569  002A28  6E1B               	movwf	___aldiv@quotient+1,c
  8570  002A2A  0E00               	movlw	0
  8571  002A2C  6E1C               	movwf	___aldiv@quotient+2,c
  8572  002A2E  0E00               	movlw	0
  8573  002A30  6E1D               	movwf	___aldiv@quotient+3,c
  8574  002A32  5014               	movf	___aldiv@divisor,w,c
  8575  002A34  1015               	iorwf	___aldiv@divisor+1,w,c
  8576  002A36  1016               	iorwf	___aldiv@divisor+2,w,c
  8577  002A38  1017               	iorwf	___aldiv@divisor+3,w,c
  8578  002A3A  B4D8               	btfsc	status,2,c
  8579  002A3C  D02A               	goto	l4241
  8580  002A3E  0E01               	movlw	1
  8581  002A40  6E18               	movwf	___aldiv@counter,c
  8582  002A42  D006               	goto	l4227
  8583  002A44                     l4225:
  8584  002A44  90D8               	bcf	status,0,c
  8585  002A46  3614               	rlcf	___aldiv@divisor,f,c
  8586  002A48  3615               	rlcf	___aldiv@divisor+1,f,c
  8587  002A4A  3616               	rlcf	___aldiv@divisor+2,f,c
  8588  002A4C  3617               	rlcf	___aldiv@divisor+3,f,c
  8589  002A4E  2A18               	incf	___aldiv@counter,f,c
  8590  002A50                     l4227:
  8591  002A50  AE17               	btfss	___aldiv@divisor+3,7,c
  8592  002A52  D7F8               	goto	l4225
  8593  002A54                     u5460:
  8594  002A54  90D8               	bcf	status,0,c
  8595  002A56  361A               	rlcf	___aldiv@quotient,f,c
  8596  002A58  361B               	rlcf	___aldiv@quotient+1,f,c
  8597  002A5A  361C               	rlcf	___aldiv@quotient+2,f,c
  8598  002A5C  361D               	rlcf	___aldiv@quotient+3,f,c
  8599  002A5E  5014               	movf	___aldiv@divisor,w,c
  8600  002A60  5C10               	subwf	___aldiv@dividend,w,c
  8601  002A62  5015               	movf	___aldiv@divisor+1,w,c
  8602  002A64  5811               	subwfb	___aldiv@dividend+1,w,c
  8603  002A66  5016               	movf	___aldiv@divisor+2,w,c
  8604  002A68  5812               	subwfb	___aldiv@dividend+2,w,c
  8605  002A6A  5017               	movf	___aldiv@divisor+3,w,c
  8606  002A6C  5813               	subwfb	___aldiv@dividend+3,w,c
  8607  002A6E  A0D8               	btfss	status,0,c
  8608  002A70  D009               	goto	l4237
  8609  002A72  5014               	movf	___aldiv@divisor,w,c
  8610  002A74  5E10               	subwf	___aldiv@dividend,f,c
  8611  002A76  5015               	movf	___aldiv@divisor+1,w,c
  8612  002A78  5A11               	subwfb	___aldiv@dividend+1,f,c
  8613  002A7A  5016               	movf	___aldiv@divisor+2,w,c
  8614  002A7C  5A12               	subwfb	___aldiv@dividend+2,f,c
  8615  002A7E  5017               	movf	___aldiv@divisor+3,w,c
  8616  002A80  5A13               	subwfb	___aldiv@dividend+3,f,c
  8617  002A82  801A               	bsf	___aldiv@quotient,0,c
  8618  002A84                     l4237:
  8619  002A84  90D8               	bcf	status,0,c
  8620  002A86  3217               	rrcf	___aldiv@divisor+3,f,c
  8621  002A88  3216               	rrcf	___aldiv@divisor+2,f,c
  8622  002A8A  3215               	rrcf	___aldiv@divisor+1,f,c
  8623  002A8C  3214               	rrcf	___aldiv@divisor,f,c
  8624  002A8E  2E18               	decfsz	___aldiv@counter,f,c
  8625  002A90  D7E1               	goto	u5460
  8626  002A92                     l4241:
  8627  002A92  5019               	movf	___aldiv@sign,w,c
  8628  002A94  B4D8               	btfsc	status,2,c
  8629  002A96  D008               	goto	l4245
  8630  002A98  1E1D               	comf	___aldiv@quotient+3,f,c
  8631  002A9A  1E1C               	comf	___aldiv@quotient+2,f,c
  8632  002A9C  1E1B               	comf	___aldiv@quotient+1,f,c
  8633  002A9E  6C1A               	negf	___aldiv@quotient,c
  8634  002AA0  0E00               	movlw	0
  8635  002AA2  221B               	addwfc	___aldiv@quotient+1,f,c
  8636  002AA4  221C               	addwfc	___aldiv@quotient+2,f,c
  8637  002AA6  221D               	addwfc	___aldiv@quotient+3,f,c
  8638  002AA8                     l4245:
  8639  002AA8  C01A  F010         	movff	___aldiv@quotient,?___aldiv
  8640  002AAC  C01B  F011         	movff	___aldiv@quotient+1,?___aldiv+1
  8641  002AB0  C01C  F012         	movff	___aldiv@quotient+2,?___aldiv+2
  8642  002AB4  C01D  F013         	movff	___aldiv@quotient+3,?___aldiv+3
  8643  002AB8  0012               	return		;funcret
  8644  002ABA                     __end_of___aldiv:
  8645                           	opt callstack 0
  8646                           
  8647 ;; *************** function _trata_serial *****************
  8648 ;; Defined at:
  8649 ;;		line 17 in file "EX24.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;		None
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;		None
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  1    wreg      void 
  8656 ;; Registers used:
  8657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8663 ;;      Params:         0       0       0       0       0       0       0
  8664 ;;      Locals:         0       0       0       0       0       0       0
  8665 ;;      Temps:          3       0       0       0       0       0       0
  8666 ;;      Totals:         3       0       0       0       0       0       0
  8667 ;;Total ram usage:        3 bytes
  8668 ;; Hardware stack levels used:    1
  8669 ;; Hardware stack levels required when called:    1
  8670 ;; This function calls:
  8671 ;;		_EUSART_le
  8672 ;; This function is called by:
  8673 ;;		Interrupt level 2
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	intcode
  8678  000008                     __pintcode:
  8679                           	opt callstack 0
  8680  000008                     _trata_serial:
  8681                           	opt callstack 21
  8682                           
  8683                           ;incstack = 0
  8684  000008  827B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8685  00000A  ED33  F017         	call	int_func,f	;refresh shadow registers
  8686                           
  8687                           	psect	intcode_body
  8688  002E66                     __pintcode_body:
  8689                           	opt callstack 21
  8690  002E66                     int_func:
  8691                           	opt callstack 21
  8692  002E66  0006               	pop		; remove dummy address from shadow register refresh
  8693  002E68  CFD9 F002          	movff	fsr2l,??_trata_serial+1
  8694  002E6C  CFDA F003          	movff	fsr2h,??_trata_serial+2
  8695                           
  8696                           ;EX24.c: 19:     if (RCIF)
  8697  002E70  AA9E               	btfss	3998,5,c	;volatile
  8698  002E72  D030               	goto	i2l4321
  8699                           
  8700                           ;EX24.c: 22:         {;EX24.c: 23:            dado[i] = EUSART_le();
  8701  002E74  0EE8               	movlw	low _dado
  8702  002E76  247A               	addwf	_i,w,c
  8703  002E78  6ED9               	movwf	fsr2l,c
  8704  002E7A  6ADA               	clrf	fsr2h,c
  8705  002E7C  0E00               	movlw	high _dado
  8706  002E7E  22DA               	addwfc	fsr2h,f,c
  8707  002E80  EC97  F019         	call	_EUSART_le	;wreg free
  8708  002E84  6EDF               	movwf	indf2,c
  8709                           
  8710                           ;EX24.c: 26:            if (dado[i] == 0x0D)
  8711  002E86  0EE8               	movlw	low _dado
  8712  002E88  247A               	addwf	_i,w,c
  8713  002E8A  6ED9               	movwf	fsr2l,c
  8714  002E8C  6ADA               	clrf	fsr2h,c
  8715  002E8E  0E00               	movlw	high _dado
  8716  002E90  22DA               	addwfc	fsr2h,f,c
  8717  002E92  0E0D               	movlw	13
  8718  002E94  18DE               	xorwf	postinc2,w,c
  8719  002E96  A4D8               	btfss	status,2,c
  8720  002E98  D01C               	goto	i2l4319
  8721                           
  8722                           ;EX24.c: 27:             {;EX24.c: 29:             if (dado[0] == 'L' && dado[1] == 'D' 
      +                          && dado[2] == '1')
  8723  002E9A  0E4C               	movlw	76
  8724  002E9C  0100               	movlb	0	; () banked
  8725  002E9E  19E8               	xorwf	_dado& (0+255),w,b
  8726  002EA0  A4D8               	btfss	status,2,c
  8727  002EA2  D008               	goto	i2l4309
  8728                           
  8729                           ; BSR set to: 0
  8730  002EA4  0E44               	movlw	68
  8731  002EA6  19E9               	xorwf	(_dado+1)& (0+255),w,b
  8732  002EA8  A4D8               	btfss	status,2,c
  8733  002EAA  D004               	goto	i2l4309
  8734                           
  8735                           ; BSR set to: 0
  8736  002EAC  0E31               	movlw	49
  8737  002EAE  19EA               	xorwf	(_dado+2)& (0+255),w,b
  8738  002EB0  B4D8               	btfsc	status,2,c
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;EX24.c: 30:             {;EX24.c: 31:                  PORTBbits.RB0 = 1;
  8742  002EB2  8081               	bsf	3969,0,c	;volatile
  8743  002EB4                     i2l4309:
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;EX24.c: 35:             if (dado[0] == 'D' && dado[1] == 'L' && dado[2] == '1')
  8747  002EB4  0E44               	movlw	68
  8748  002EB6  19E8               	xorwf	_dado& (0+255),w,b
  8749  002EB8  A4D8               	btfss	status,2,c
  8750  002EBA  D008               	goto	i2l4317
  8751                           
  8752                           ; BSR set to: 0
  8753  002EBC  0E4C               	movlw	76
  8754  002EBE  19E9               	xorwf	(_dado+1)& (0+255),w,b
  8755  002EC0  A4D8               	btfss	status,2,c
  8756  002EC2  D004               	goto	i2l4317
  8757                           
  8758                           ; BSR set to: 0
  8759  002EC4  0E31               	movlw	49
  8760  002EC6  19EA               	xorwf	(_dado+2)& (0+255),w,b
  8761  002EC8  B4D8               	btfsc	status,2,c
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;EX24.c: 36:             {;EX24.c: 37:                  PORTBbits.RB0 = 0;
  8765  002ECA  9081               	bcf	3969,0,c	;volatile
  8766  002ECC                     i2l4317:
  8767                           
  8768                           ; BSR set to: 0
  8769                           ;EX24.c: 40:             i=0;
  8770  002ECC  0E00               	movlw	0
  8771  002ECE  6E7A               	movwf	_i,c
  8772                           
  8773                           ;EX24.c: 41:             }
  8774  002ED0  D001               	goto	i2l4321
  8775  002ED2                     i2l4319:
  8776  002ED2  2A7A               	incf	_i,f,c
  8777  002ED4                     i2l4321:
  8778                           
  8779                           ;EX24.c: 45:     RCIF = 0;
  8780  002ED4  9A9E               	bcf	3998,5,c	;volatile
  8781  002ED6  C003  FFDA         	movff	??_trata_serial+2,fsr2h
  8782  002EDA  C002  FFD9         	movff	??_trata_serial+1,fsr2l
  8783  002EDE  927B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8784  002EE0  0011               	retfie		f
  8785  002EE2                     __end_of_trata_serial:
  8786                           	opt callstack 0
  8787                           
  8788 ;; *************** function _EUSART_le *****************
  8789 ;; Defined at:
  8790 ;;		line 35 in file "../Bibliotecas/eusart.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;		None
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      unsigned char 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8804 ;;      Params:         0       0       0       0       0       0       0
  8805 ;;      Locals:         0       0       0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0
  8807 ;;      Totals:         0       0       0       0       0       0       0
  8808 ;;Total ram usage:        0 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; This function calls:
  8811 ;;		Nothing
  8812 ;; This function is called by:
  8813 ;;		_trata_serial
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text40
  8818  00332E                     __ptext40:
  8819                           	opt callstack 0
  8820  00332E                     _EUSART_le:
  8821                           	opt callstack 21
  8822                           
  8823                           ;../Bibliotecas/eusart.c: 37:   while(!RCIF);
  8824                           
  8825                           ;incstack = 0
  8826  00332E  AA9E               	btfss	3998,5,c	;volatile
  8827  003330  D7FE               	goto	_EUSART_le
  8828                           
  8829                           ;../Bibliotecas/eusart.c: 38:   return RCREG;
  8830  003332  50AE               	movf	4014,w,c	;volatile
  8831  003334  0012               	return		;funcret
  8832  003336                     __end_of_EUSART_le:
  8833                           	opt callstack 0
  8834                           
  8835                           	psect	rparam
  8836  0000                     
  8837                           	psect	temp
  8838  00007B                     btemp:
  8839                           	opt callstack 0
  8840  00007B                     	ds	1
  8841  0000                     int$flags	set	btemp
  8842  0000                     wtemp8	set	btemp+1
  8843  0000                     ttemp5	set	btemp+1
  8844  0000                     ttemp6	set	btemp+4
  8845  0000                     ttemp7	set	btemp+8
  8846                           tosu	equ	0xFFF
  8847                           tosh	equ	0xFFE
  8848                           tosl	equ	0xFFD
  8849                           stkptr	equ	0xFFC
  8850                           pclatu	equ	0xFFB
  8851                           pclath	equ	0xFFA
  8852                           pcl	equ	0xFF9
  8853                           tblptru	equ	0xFF8
  8854                           tblptrh	equ	0xFF7
  8855                           tblptrl	equ	0xFF6
  8856                           tablat	equ	0xFF5
  8857                           prodh	equ	0xFF4
  8858                           prodl	equ	0xFF3
  8859                           indf0	equ	0xFEF
  8860                           postinc0	equ	0xFEE
  8861                           postdec0	equ	0xFED
  8862                           preinc0	equ	0xFEC
  8863                           plusw0	equ	0xFEB
  8864                           fsr0h	equ	0xFEA
  8865                           fsr0l	equ	0xFE9
  8866                           wreg	equ	0xFE8
  8867                           indf1	equ	0xFE7
  8868                           postinc1	equ	0xFE6
  8869                           postdec1	equ	0xFE5
  8870                           preinc1	equ	0xFE4
  8871                           plusw1	equ	0xFE3
  8872                           fsr1h	equ	0xFE2
  8873                           fsr1l	equ	0xFE1
  8874                           bsr	equ	0xFE0
  8875                           indf2	equ	0xFDF
  8876                           postinc2	equ	0xFDE
  8877                           postdec2	equ	0xFDD
  8878                           preinc2	equ	0xFDC
  8879                           plusw2	equ	0xFDB
  8880                           fsr2h	equ	0xFDA
  8881                           fsr2l	equ	0xFD9
  8882                           status	equ	0xFD8


Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         161
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     122
    BANK0           128     96     122
    BANK1           256     10     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 33
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[33]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 33
		 -> vfpfcnvrt@ct(BANK0[3]), STR_2(CODE[33]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> bufferEUSART(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> bufferEUSART(BANK1[50]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1169_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 50
		 -> bufferEUSART(BANK1[50]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 50
		 -> bufferEUSART(BANK1[50]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_2(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    string_EUSART@str	PTR unsigned char  size(2) Largest target is 50
		 -> bufferEUSART(BANK1[50]), STR_1(CODE[34]), 


Critical Paths under _main in COMRAM

    _string_EUSART->_escreve_EUSART
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    ___aldiv->___lmul

Critical Paths under _trata_serial in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _trata_serial in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _trata_serial in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _trata_serial in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _trata_serial in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _trata_serial in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _trata_serial in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   52747
                                             94 BANK0      2     2      0
                            ___aldiv
                            ___fldiv
                            ___flmul
                             ___lmul
                           ___xxtofl
                        _init_EUSART
                            _sprintf
                      _string_EUSART
 ---------------------------------------------------------------------------------
 (1) _string_EUSART                                        2     0      2     219
                                              4 COMRAM     2     0      2
                     _escreve_EUSART
 ---------------------------------------------------------------------------------
 (2) _escreve_EUSART                                       1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   44812
                                             82 BANK0     12     0     12
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   44290
                                            111 COMRAM     6     0      6
                                             80 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           52    46      6   43688
                                             99 COMRAM    12     6      6
                                             56 BANK0     24    24      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5819
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              3 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              3 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     865
                                              3 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29677
                                             87 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                              9 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4227
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1037
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              3 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             42 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              3 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                             17 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             42 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             42 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1745
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                              3 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_EUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              3 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              3 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             15 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _trata_serial                                         3     3      0       0
                                              0 COMRAM     3     3      0
                          _EUSART_le
 ---------------------------------------------------------------------------------
 (10) _EUSART_le                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___lmul
   ___xxtofl
   _init_EUSART
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
   _string_EUSART
     _escreve_EUSART

 _trata_serial (ROOT)
   _EUSART_le

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      A      8C       7       54.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     60      7A       5       95.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7A       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     180      15        0.0%
DATA                 0      0     180       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 15:31:43 2019

           ___fldiv@aexp 0043             ___fldiv@bexp 0042                        _i 007A  
           ___fldiv@sign 003B                       l62 1F30                       l65 1FFE  
           ___awdiv@sign 0009      ___wmul@multiplicand 0006              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000                      l215 0C7A  
                    l251 2294                      l148 2CF0                      l249 228C  
                    l189 0998                      l901 1DCA                      l582 2818  
                    l912 1E38                      l913 1E34                      l931 167A  
                    l755 2900                      l940 1892                      l941 188E  
                    l765 2C00                      l862 1B60                      l846 1A8E  
                    l871 1BC6                      l847 1A6C                      l872 1BC2  
                    l972 259C                      l948 1918                      l979 261A  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             _trata_serial 0008  
                    _adc 00F8                      _pad 2CC2  __size_of_escreve_EUSART 000C  
           ___awmod@sign 0009                      wreg 000FE8             ___flmul@aexp 001F  
           ___flmul@bexp 0024             ___flmul@sign 001E             ___flmul@temp 0029  
           ___flmul@prod 0025             __CFG_LVP$OFF 000000             ___fltol@exp1 000D  
           __CFG_WDT$OFF 000000                     l1027 2554                     l1039 21D0  
                   l1119 313C                     l4201 3024                     l4213 2A0A  
                   l5101 2F10                     l5013 18D6                     l5103 2F18  
                   l4225 2A44                     l4241 2A92                     l5113 2F3A  
                   l5017 18F4                     l5201 2B46                     l4153 3324  
                   l4227 2A50                     l4219 2A22                     l4245 2AA8  
                   l4237 2A84                     l4261 25CA                     l5061 2E1C  
                   l5117 2F48                     l5109 2F30                     l5133 2DDE  
                   l5125 2D8C                     l5141 27B8                     l5029 1936  
                   l5301 0756                     l4181 3080                     l4263 25D0  
                   l4255 25AC                     l5063 2E24                     l5055 2E06  
                   l5207 2B62                     l5303 076E                     l4273 2640  
                   l4265 25DC                     l5081 2E5C                     l5073 2E44  
                   l5049 2DF6                     l5129 2DC0                     l5145 27EC  
                   l4505 19C0                     l5401 0A70                     l5305 0778  
                   l5217 287A                     l4177 3058                     l4291 268C  
                   l4275 264C                     l4267 2602                     l5155 2850  
                   l5163 32AE                     l4611 1B84                     l4603 1B50  
                   l5219 288E                     l4197 3010                     l5077 2E4E  
                   l5093 2EF6                     l5149 2802                     l4621 1B9A  
                   l4517 19E4                     l4509 19C4                     l5173 2AD8  
                   l4701 299A                     l4453 31EA                     l5333 0868  
                   l5309 079E                     l5229 28EA                     l5245 2BEA  
                   l5237 2B8E                     ?_pad 0014                     l4711 29E4  
                   l4439 2C3A                     l5511 0EBA                     l5431 0C72  
                   l5423 0C1A                     l5343 092C                     l5319 080A  
                   l5327 0824                     l5271 06A6                     l5239 2BA2  
                   l5257 31C2                     l5097 2F02                     l4561 1A7E  
                   l4481 1978                     l5193 2B32                     l4705 29A4  
                   l4449 31D4                     l4457 32CA                     l5521 0F10  
                   l5433 0C94                     l5417 0BDC                     l5409 0B66  
                   l5337 08A2                     l4811 1CFC                     l4803 1CC8  
                   l4627 1BA4                     l4547 1A20                     l4459 32CE  
                   l5531 0F3C                     l5355 0980                     l5339 08F0  
                   l5283 06D4                     l5291 06EA                     l5613 248A  
                   l4661 1C3C                     l4485 197C                     l5189 2B22  
                   l4717 30B8                     l5509 0EB0                     l5445 0D16  
                   l5373 09F0                     l5365 09A8                     l5623 24F4  
                   l5615 2492                     l5607 247A                     l4655 1C32  
                   l4647 1C0C                     l4583 1AD4                     l4575 1AB2  
                   l4559 1A7A                     l5199 2B3A                     l4735 2132  
                   l5391 0A36                     l5375 09F4                     l5359 09A2  
                   l5617 2498                     l4825 1D2A                     l4817 1D12  
                   l4921 163A                     l4585 1AD8                     l4593 1AEA  
                   l4753 225E                     l4745 21F2                     l4681 2CFA  
                   l5457 0D46                     l5465 0D66                     l5473 0D8A  
                   l5481 0E22                     l5385 0A12                     l5705 10FA  
                   l5619 24C0                     l4843 1DA2                     l4835 1D7A  
                   l4659 1C3A                     l4675 2CDA                     l5547 0F9C  
                   l5395 0A46                     l5643 26C8                     l5571 22CC  
                   l5707 1118                     l4861 1DFE                     l4917 1626  
                   l4749 2230                     l4685 2D12                     l5493 0E64  
                   l5645 26D6                     l5581 23B8                     l5725 11F0  
                   l5709 1126                     l5805 15C6                     l4855 1DE0  
                   l4783 1C88                     l4935 1666                     l4919 162A  
                   l4679 2CE8                     l5727 120E                     l5671 1032  
                   l4881 1E7C                     l4849 1DC8                     l4945 1698  
                   l4937 166A                     l4689 2D3E                     l5753 1352  
                   l5745 12F6                     l5729 121C                     l4779 1C84  
                   l5691 104C                     l5683 103E                     l5675 1036  
                   l5667 1020                     l5827 2FBE                     l5597 2430  
                   l4885 1EA0                     l5781 14E8                     l5773 144C  
                   l5757 137C                     l5669 1022                     l5693 108E  
                   l5829 2FE4                     l5599 2434                     l4895 1ED6  
                   l4799 1CC4                     l5687 1042                     l5679 103A  
                   l5855 1F0A                     l4897 1ED8                     l4889 1ECA  
                   l4993 1858                     l4987 183A                     l5795 15A4  
                   l5789 1568                     l5799 15AE                     STR_1 0601  
                   STR_2 0623                     STR_3 0644                     STR_4 064C  
                   STR_7 0648                     STR_8 0650                     u7000 2DDA  
                   u6120 1C18                     u6040 1BA8                     u6200 2960  
                   u6060 1BBC                     u6300 3124                     u6205 2956  
                   u7120 2B4C                     u6320 2100                     u6250 29DC  
                   u6330 2120                     u8010 115E                     u5460 2A54  
                   u6420 328A                     u7220 31BE                     u6260 29DE  
                   u5700 2C32                     u8020 1160                     u5380 3078  
                   _RCIF 007CF5                     u6245 29BE                     u6325 20F6  
                   u7141 285A                     u5550 2656                     u6430 328C  
                   u7070 2AC6                     u6270 30F0                     u8030 116E  
                   u5390 30A0                     u6600 1E2E                     u7080 2AF6  
                   u5720 2C7A                     u7400 098E                     u7320 07E0  
                   u7160 2892                     u6370 21B0                     u6290 3122  
                   u7330 07E2                     u7250 06C4                     u8130 13FE  
                   u6355 214A                     u5387 306E                     u6356 2150  
                   u8140 1400                     u8060 1254                     u7085 2AEC  
                   u6357 215E                     u6277 30E6                     u5397 3096  
                   u5910 1A96                     u6390 2210                     u5750 325A  
                   u7430 09C0                     u7190 2BA6                     u8070 1256  
                   u6375 21A6                     u6640 1E8A                     u5760 325C  
                   u7280 072C                     u8080 1264                     u6650 1EAE  
                   u7370 0954                     u7290 072E                     u6395 2206  
                   u8227 1F16                     u6740 1686                     u5860 1A42  
                   u7700 0F26                     u8237 1F28                     u6830 18E4  
                   u6750 17FC                     u5870 1A52                     u7470 0A0E  
                   u8247 1FF6                     u6840 1902                     u5880 1A54  
                   u7720 0F86                     u7640 0E46                     u7800 23F0  
                   u7730 0F88                     u7810 23F4                     u6755 17F2  
                   u7900 26F6                     u7830 2476                     u6950 2F1C  
                   u6790 1888                     u7760 2282                     u7850 2524  
                   u6890 2E28                     u7907 26EC                     u7860 2526  
                   u7940 274A                     u7950 276A                     u7790 23E2  
                   u7791 23E0                     u7945 2744                     u7947 273A  
                   u7957 2760                     _TRMT 007D61             __CFG_PWRT$ON 000000  
                   _dado 00E8                     _dbuf 0100                     _atoi 241E  
                   _main 1EE0                     _prec 0076                     _temp 00EC  
                   _nout 00F4                     pad@i 001B                     pad@p 0018  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001D  
                   fsr2l 000FD9                     btemp 007B                     _utoa 2270  
                   _volt 00F0            ___fpclassifyf 2922                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ?_init_EUSART 0001  
          __CFG_IESO$OFF 000000          ___fldiv@new_exp 003C       __size_of_EUSART_le 0008  
           _tolower$1241 0010            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ??_pad 001A            ___fltol@sign1 000C          __end_of___aldiv 2ABA  
                  ?_atoi 000B          __end_of___fladd 1C58                    ?_main 0001  
        __end_of___fldiv 1EE0          __end_of___awdiv 2E66          __end_of___flneg 32C0  
                  STR_11 0654                    STR_13 0654                    STR_16 0657  
                  STR_18 0657          __end_of___awmod 2F52          __end_of___flmul 194C  
        __end_of___flsub 318C          __end_of___fltol 2B74                    ?_utoa 001F  
        __end_of___lodiv 2922          ___awdiv@divisor 0006          __end_of___lomod 2C22  
        ___awdiv@counter 0008                    _RCREG 000FAE             vfpfcnvrt@fmt 0066  
           vfpfcnvrt@llu 00C0                    _SPBRG 000FAF                    _PORTB 000F81  
                  _TRISB 000F93                    _TXREG 000FAD            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0008  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flags 0078                    _fputc 2C22  
                  _fputs 31CA          __end_of_isdigit 3292                    atoi@n 0018  
                  pad@fp 0014                    atoi@s 000B                    _width 00F6  
                  _putch 3336          __end_of_isspace 31CA           __CFG_BOREN$OFF 000000  
        __end_of_isupper 3262                    tablat 000FF5                    ttemp5 007C  
                  ttemp6 007F                    ttemp7 0083                    utoa@d 0021  
                  utoa@i 003D                    utoa@n 0035                    utoa@p 0031  
                  utoa@w 0033                    status 000FD8                    wtemp8 007C  
        __end_of_sprintf 2FAA           ?___fpclassifyf 0004          __end_of_tolower 3146  
        __end_of_strncmp 2784         ___lodiv@dividend 0004          __initialization 3202  
           __end_of_atoi 255E             __end_of_main 20BA             __end_of_utoa 241E  
                 ??_atoi 000D                   ??_main 00DE                   ??_utoa 0029  
          __activetblptr 000002   __size_of_string_EUSART 0052         ___lodiv@quotient 0014  
      __end_of_EUSART_le 3336                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0004                   ?_fputs 000D  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0004  
                 ?_putch 0001                   i2l4321 2ED4                   i2l4317 2ECC  
                 i2l4309 2EB4                   i2l4319 2ED2            vfpfcnvrt@done 00B8  
       __end_of___xxtofl 269E           __CFG_XINST$OFF 000000             vfprintf@cfmt 00D0  
                 ___flge 2784                   ___fleq 2D58                   ___lmul 3000  
              ??___aldiv 0018                ??___fladd 000C                   ___wmul 32EA  
              ??___fldiv 0033                ??___awdiv 0008                ??___flneg 0008  
         __CFG_STVREN$ON 000000                ??___awmod 0008                ??___flmul 001A  
              ??___flsub 0033                ??___fltol 0008                ??___lodiv 0014  
              ??___lomod 0014                   _efgtoa 065C                   _floorf 20BA  
                 clear_0 3208                   clear_1 3214         ___awdiv@quotient 000A  
        ___awmod@divisor 0006          ___awmod@counter 0008                   pad@buf 0016  
                 _strcpy 30A8                   _strlen 32C0           _escreve_EUSART 3322  
                 fputc@c 0004                   fputs@c 0011                   fputs@i 0012  
                 fputs@s 000D                ??_isdigit 0006          ___fpclassifyf@e 000C  
        ___fpclassifyf@u 000E          ___fpclassifyf@x 0004             __mediumconst 0000  
              ??_isspace 0006                   tblptrh 000FF7                ??_isupper 0006  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 3000                   utoa@fp 001F                ??_sprintf 0076  
              ??_tolower 000C                ??_strncmp 000A               ___flge@ff1 002B  
             ___flge@ff2 002F          ??___fpclassifyf 0008             ___xxtofl@arg 000E  
           ___xxtofl@exp 000D             ___xxtofl@val 0004               ___fleq@ff1 0004  
             ___fleq@ff2 0008               __accesstop 0080  __end_of__initialization 3224  
        __CFG_PBADEN$OFF 000000               ___flneg@f1 0004            ___rparam_used 000001  
             ___fltol@f1 0004            _string_EUSART 3056           __pcstackCOMRAM 0001  
   __size_of_init_EUSART 0012            __end_of_fputc 2CC2            __end_of_fputs 3202  
          __end_of_putch 3338   __end_of_escreve_EUSART 332E                  ??_fputc 0008  
                ??_fputs 0011                  ??_putch 0004               __pbssBANK0 00E0  
             __pbssBANK1 0100           ?_string_EUSART 0005               _efgtoa$610 0084  
             _efgtoa$611 0086               _efgtoa$620 008A               _efgtoa$621 008C  
             _efgtoa$622 008E               _efgtoa$616 0088                  ?___flge 002B  
                ?___fleq 0004         string_EUSART@str 0005                  ?___lmul 0004  
                ?___wmul 0004                  ?_efgtoa 0058                  ?_floorf 0044  
         ___lmul@product 000C          ?_escreve_EUSART 0001                  ?_strcpy 0004  
                ?_strlen 0004                ?___xxtofl 0004       __size_of_vfpfcnvrt 0620  
       ___lomod@dividend 0004                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 29EE          __size_of___flge 00D0          __size_of___fleq 008A  
                ___fladd 194C                  ___fldiv 1C58                  ___awdiv 2DE2  
                ___flneg 3292          __size_of___lmul 0056                  ___awmod 2EE2  
                ___flmul 15FA                  ___flsub 3146                  ___fltol 2ABA  
        __size_of___wmul 0026                  ___lodiv 2854                  ___lomod 2B74  
              ?_vfprintf 0070             __psmallconst 0600          __size_of_efgtoa 097E  
        __size_of_floorf 01B6                  __pcinit 3202                  __ramtop 0600  
                __ptext0 1EE0                  __ptext1 3056                  __ptext2 3322  
                __ptext3 2F52                  __ptext4 2FAA                  __ptext5 0FDA  
                __ptext6 2270                  __ptext7 2B74                  __ptext8 2854  
                __ptext9 269E          __size_of_strcpy 0052          __size_of_strlen 002A  
           __size_of_pad 0096                  _isdigit 3262               ??___xxtofl 0008  
       ___awmod@dividend 0004         ___aldiv@dividend 0010                  _isspace 318C  
                _isupper 3232                  efgtoa@c 005E                  efgtoa@d 0098  
                efgtoa@e 00B0                  efgtoa@f 005A                  efgtoa@g 00AC  
                efgtoa@h 00A2                  efgtoa@i 00AA                  efgtoa@l 00A6  
                efgtoa@m 0094                  efgtoa@n 00B2                  efgtoa@p 009C  
                efgtoa@t 0090                  efgtoa@u 00B4                  efgtoa@w 009F  
                atoi@neg 0011             _bufferEUSART 0150                  _sprintf 2F52  
                _tolower 30FA                  _strncmp 269E           __pintcode_body 2E66  
   end_of_initialization 3224                _EUSART_le 332E                  floorf@e 0052  
                floorf@m 004E                  floorf@u 0054                  floorf@x 0044  
        ??_string_EUSART 0007                  fputc@fp 0006            __Lmediumconst 0000  
                int_func 2E66                  fputs@fp 000F        __end_of_vfpfcnvrt 15FA  
             efgtoa@mode 00A1               efgtoa@sign 009A                _RCSTAbits 000FAB  
       ___aldiv@quotient 001A                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0076  
                strcpy@d 000C                  strlen@a 0006                  strcpy@s 000A  
                strlen@s 0004                _PORTBbits 000F81              ___fladd@grs 0013  
          ___xxtofl@sign 000C              ___fldiv@grs 003E              ___fldiv@rem 0037  
             ?_EUSART_le 0001              ___flmul@grs 0020                _TXSTAbits 000FAC  
         __end_of___flge 2854           __end_of___fleq 2DE2           __end_of___lmul 3056  
            vfpfcnvrt@ap 0068              vfpfcnvrt@ct 00CC              vfpfcnvrt@fp 0064  
         __end_of___wmul 3310           __end_of_efgtoa 0FDA              _BAUDCTLbits 000FB8  
         __end_of_floorf 2270               floorf@F524 00E0            ?_trata_serial 0001  
         __end_of_strcpy 30FA           __end_of_strlen 32EA      start_initialization 3202  
        ___lodiv@divisor 000C          ___lodiv@counter 001C              __end_of_pad 2D58  
  __end_of___fpclassifyf 29EE            ??_init_EUSART 0004              vfprintf@fmt 0072  
       ??_escreve_EUSART 0004                 ??___flge 0033                 ??___fleq 000C  
               ??___lmul 000C                 ??___wmul 0008                 ??_efgtoa 005F  
               ??_floorf 0048         __CFG_LPT1OSC$OFF 000000           ??_trata_serial 0001  
               ??_strcpy 0008                 ??_strlen 0006                ___fladd@a 0008  
              ___fladd@b 0004                ___fldiv@a 002F                ___fldiv@b 002B  
              ___flmul@a 0016                ___flmul@b 0012              __pbssCOMRAM 0076  
              ___flsub@a 002F                ___flsub@b 002B            __pcstackBANK0 0080  
          __pcstackBANK1 0182        __size_of___xxtofl 0140              ??_EUSART_le 0001  
              _atoi$1125 0013                _atoi$1126 0017                _atoi$1127 0015  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___aldiv 0010  
               ?___fladd 0004                 ?___fldiv 002B                 ?___awdiv 0004  
               ?___flneg 0004                 ?___awmod 0004                 ?___flmul 0012  
               ?___flsub 002B                 ?___fltol 0004                 ?___lodiv 0004  
               ?___lomod 0004      __end_of_init_EUSART 3322        __size_of_vfprintf 0056  
        ___lomod@divisor 000C              __smallconst 0600          ___lomod@counter 0014  
               ?_isdigit 0004                 ?_isspace 0004                 ?_isupper 0004  
               ?_sprintf 00D2                 ?_tolower 000A           __size_of_fputc 00A0  
         __size_of_fputs 0038                 ?_strncmp 0004           __size_of_putch 0002  
        ___aldiv@divisor 0014          ___aldiv@counter 0018           ___wmul@product 0008  
               _PIE1bits 000F9D         __CFG_WDTPS$32768 000000                _vfpfcnvrt 0FDA  
             _ADCON0bits 000FC2        ___wmul@multiplier 0004             _isspace$1156 000A  
             vfpfcnvrt@c 00CF               vfpfcnvrt@f 00C8        ___lmul@multiplier 0004  
   __end_of_trata_serial 2EE2    __end_of_string_EUSART 30A8              _init_EUSART 3310  
               __Hrparam 0000               vfprintf@ap 0074                 __Lrparam 0000  
             vfprintf@fp 0070         __size_of___aldiv 00CC         __size_of___fladd 030C  
       __size_of___fldiv 0288         __size_of___awdiv 0084         __size_of___flneg 002E  
       __size_of___awmod 0070         __size_of___flmul 0352         __size_of___flsub 0046  
       __size_of___fltol 00BA         __size_of___lodiv 00CE         __size_of___lomod 00AE  
             ?_vfpfcnvrt 0064       ___fpclassifyf@F463 00E4               sprintf@fmt 00D4  
               ___xxtofl 255E         __size_of_isdigit 0030         __size_of_isspace 003E  
               __ptext10 065C                 __ptext11 30FA                 __ptext20 2922  
               __ptext12 3232                 __ptext21 2ABA                 __ptext13 30A8  
               __ptext30 2DE2                 __ptext22 3146                 __ptext14 2CC2  
               __ptext31 241E                 __ptext23 194C                 __ptext15 32C0  
               __ptext40 332E                 __ptext32 318C                 __ptext24 3292  
               __ptext16 31CA                 __ptext33 3262                 __ptext25 15FA  
               __ptext17 2C22                 __ptext34 32EA                 __ptext26 2784  
               __ptext18 3336                 __ptext35 3310                 __ptext27 2D58  
               __ptext19 20BA                 __ptext36 255E                 __ptext28 1C58  
               __ptext37 3000                 __ptext29 2EE2                 __ptext38 29EE  
       __size_of_isupper 0030         __size_of_sprintf 0058         __size_of_tolower 004C  
             strcpy@dest 0004         __size_of_strncmp 00E6            __size_of_atoi 0140  
          __size_of_main 01DA            __size_of_utoa 01AE                 efgtoa@fp 0058  
               efgtoa@ne 0096                 efgtoa@pp 0092                 efgtoa@ou 0080  
               int$flags 007B                 _vfprintf 2FAA               _INTCONbits 000FF2  
               isdigit@c 0004                 intlevel2 0000                sprintf@ap 0184  
               isspace@c 0004                strcpy@src 0006                 isupper@c 0004  
              strncmp@_l 0004                strncmp@_r 0006              efgtoa@nmode 009E  
            ??_vfpfcnvrt 006A            _vfpfcnvrt$643 00BA            _vfpfcnvrt$644 00BC  
          _vfpfcnvrt$648 00BE                 sprintf@f 0186                 tolower@c 000A  
               sprintf@s 00D2   __size_of___fpclassifyf 00CC                 strncmp@l 000B  
               strncmp@n 0008                 strncmp@r 000D             ___aldiv@sign 0019  
  __size_of_trata_serial 2EDA            ___fladd@signs 0010          escreve_EUSART@c 0004  
           ___fladd@aexp 0011             ___fladd@bexp 0012  
