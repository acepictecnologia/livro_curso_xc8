

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 28 15:27:35 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   000550                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _digito
    65   000550  003F               	dw	63
    66   000552  0006               	dw	6
    67   000554  005B               	dw	91
    68   000556  004F               	dw	79
    69   000558  0066               	dw	102
    70   00055A  006D               	dw	109
    71   00055C  007D               	dw	125
    72   00055E  0007               	dw	7
    73   000560  007F               	dw	127
    74   000562  006F               	dw	111
    75   000000                     _ADRESL	set	4035
    76   000000                     _ADRESH	set	4036
    77   000000                     _T0CON	set	4053
    78   000000                     _ADCON0bits	set	4034
    79   000000                     _INTCON	set	4082
    80   000000                     _PORTE	set	3972
    81   000000                     _PORTD	set	3971
    82   000000                     _TMR0IF	set	32658
    83   000000                     _TMR0	set	4054
    84   000000                     _TRISD	set	3989
    85   000000                     _TRISE	set	3990
    86   000000                     _ADCON2	set	4032
    87   000000                     _ADCON1	set	4033
    88   000000                     _ADCON0	set	4034
    89   000000                     _PORTEbits	set	3972
    90                           
    91                           ; #config settings
    92                           
    93                           	psect	cinit
    94   000516                     __pcinit:
    95                           	callstack 0
    96   000516                     start_initialization:
    97                           	callstack 0
    98   000516                     __initialization:
    99                           	callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (20 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103   000516  0E50               	movlw	low __pidataCOMRAM
   104   000518  6EF6               	movwf	tblptrl,c
   105   00051A  0E05               	movlw	high __pidataCOMRAM
   106   00051C  6EF7               	movwf	tblptrh,c
   107   00051E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108   000520  6EF8               	movwf	tblptru,c
   109   000522  EE00  F029         	lfsr	0,__pdataCOMRAM
   110   000526  EE10 F014          	lfsr	1,20
   111   00052A                     copy_data0:
   112   00052A  0009               	tblrd		*+
   113   00052C  CFF5 FFEE          	movff	tablat,postinc0
   114   000530  50E5               	movf	postdec1,w,c
   115   000532  50E1               	movf	fsr1l,w,c
   116   000534  E1FA               	bnz	copy_data0
   117                           
   118                           ; Clear objects allocated to COMRAM (16 bytes)
   119   000536  EE00  F03D         	lfsr	0,__pbssCOMRAM
   120   00053A  0E10               	movlw	16
   121   00053C                     clear_0:
   122   00053C  6AEE               	clrf	postinc0,c
   123   00053E  06E8               	decf	wreg,f,c
   124   000540  E1FD               	bnz	clear_0
   125   000542                     end_of_initialization:
   126                           	callstack 0
   127   000542                     __end_of__initialization:
   128                           	callstack 0
   129   000542  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   130   000544  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   131   000546  0E00               	movlw	low (__Lmediumconst shr (0+16))
   132   000548  6EF8               	movwf	tblptru,c
   133   00054A  0100               	movlb	0
   134   00054C  EFBB  F000         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMRAM
   137   00003D                     __pbssCOMRAM:
   138                           	callstack 0
   139   00003D                     _volt:
   140                           	callstack 0
   141   00003D                     	ds	4
   142   000041                     _adc:
   143                           	callstack 0
   144   000041                     	ds	2
   145   000043                     _dig4:
   146                           	callstack 0
   147   000043                     	ds	2
   148   000045                     _dig3:
   149                           	callstack 0
   150   000045                     	ds	2
   151   000047                     _dig2:
   152                           	callstack 0
   153   000047                     	ds	2
   154   000049                     _dig1:
   155                           	callstack 0
   156   000049                     	ds	2
   157   00004B                     _sel_digito:
   158                           	callstack 0
   159   00004B                     	ds	2
   160                           
   161                           	psect	dataCOMRAM
   162   000029                     __pdataCOMRAM:
   163                           	callstack 0
   164   000029                     _digito:
   165                           	callstack 0
   166   000029                     	ds	20
   167                           
   168                           	psect	cstackCOMRAM
   169   000001                     __pcstackCOMRAM:
   170                           	callstack 0
   171   000001                     escreve_7seg@num:
   172                           	callstack 0
   173                           
   174                           ; 2 bytes @ 0x0
   175   000001                     	ds	2
   176   000003                     ??_escreve_7seg:
   177                           
   178                           ; 1 bytes @ 0x2
   179   000003                     	ds	2
   180   000005                     escreve_7seg@j:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x4
   184   000005                     	ds	2
   185   000007                     ??_int_TMR0:
   186                           
   187                           ; 1 bytes @ 0x6
   188   000007                     	ds	7
   189   00000E                     ?___lwdiv:
   190                           	callstack 0
   191   00000E                     ?___lmul:
   192                           	callstack 0
   193   00000E                     ___lwdiv@dividend:
   194                           	callstack 0
   195   00000E                     ___lmul@multiplier:
   196                           	callstack 0
   197                           
   198                           ; 4 bytes @ 0xD
   199   00000E                     	ds	2
   200   000010                     ___lwdiv@divisor:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0xF
   204   000010                     	ds	2
   205   000012                     ___lwdiv@quotient:
   206                           	callstack 0
   207   000012                     ___lmul@multiplicand:
   208                           	callstack 0
   209                           
   210                           ; 4 bytes @ 0x11
   211   000012                     	ds	2
   212   000014                     ___lwdiv@counter:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x13
   216   000014                     	ds	1
   217   000015                     ?___lwmod:
   218                           	callstack 0
   219   000015                     ___lwmod@dividend:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x14
   223   000015                     	ds	1
   224   000016                     ___lmul@product:
   225                           	callstack 0
   226                           
   227                           ; 4 bytes @ 0x15
   228   000016                     	ds	1
   229   000017                     ___lwmod@divisor:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x16
   233   000017                     	ds	2
   234   000019                     ___lwmod@counter:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x18
   238   000019                     	ds	1
   239   00001A                     ?___lldiv:
   240                           	callstack 0
   241   00001A                     seleciona_7seg@dig:
   242                           	callstack 0
   243   00001A                     ___lldiv@dividend:
   244                           	callstack 0
   245                           
   246                           ; 4 bytes @ 0x19
   247   00001A                     	ds	2
   248   00001C                     
   249                           ; 1 bytes @ 0x1B
   250   00001C                     	ds	2
   251   00001E                     ___lldiv@divisor:
   252                           	callstack 0
   253                           
   254                           ; 4 bytes @ 0x1D
   255   00001E                     	ds	4
   256   000022                     ___lldiv@quotient:
   257                           	callstack 0
   258                           
   259                           ; 4 bytes @ 0x21
   260   000022                     	ds	4
   261   000026                     ___lldiv@counter:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x25
   265   000026                     	ds	1
   266   000027                     ??_main:
   267                           
   268                           ; 1 bytes @ 0x26
   269   000027                     	ds	2
   270                           
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 100 in file "EX29.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, status,0, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   290 ;;      Params:         0       0       0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0
   292 ;;      Temps:          2       0       0       0       0       0       0
   293 ;;      Totals:         2       0       0       0       0       0       0
   294 ;;Total ram usage:        2 bytes
   295 ;; Hardware stack levels required when called: 4
   296 ;; This function calls:
   297 ;;		___lldiv
   298 ;;		___lmul
   299 ;;		_seleciona_7seg
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text0
   306   000176                     __ptext0:
   307                           	callstack 0
   308   000176                     _main:
   309                           	callstack 27
   310   000176                     
   311                           ;EX29.c: 102:     ADCON0 = 0b00000001;
   312   000176  0E01               	movlw	1
   313   000178  6EC2               	movwf	194,c	;volatile
   314                           
   315                           ;EX29.c: 108:     ADCON1 = 0b00001110;
   316   00017A  0E0E               	movlw	14
   317   00017C  6EC1               	movwf	193,c	;volatile
   318                           
   319                           ;EX29.c: 113:     ADCON2 = 0b10000111;
   320   00017E  0E87               	movlw	135
   321   000180  6EC0               	movwf	192,c	;volatile
   322                           
   323                           ;EX29.c: 119:     TRISE = 0b00000000;
   324   000182  0E00               	movlw	0
   325   000184  6E96               	movwf	150,c	;volatile
   326                           
   327                           ;EX29.c: 120:     PORTE = 0b00000000;
   328   000186  0E00               	movlw	0
   329   000188  6E84               	movwf	132,c	;volatile
   330                           
   331                           ;EX29.c: 122:     TRISD = 0b00000000;
   332   00018A  0E00               	movlw	0
   333   00018C  6E95               	movwf	149,c	;volatile
   334                           
   335                           ;EX29.c: 124:     INTCON = 0b10100000;
   336   00018E  0EA0               	movlw	160
   337   000190  6EF2               	movwf	242,c	;volatile
   338                           
   339                           ;EX29.c: 134:     T0CON = 0b11000101;
   340   000192  0EC5               	movlw	197
   341   000194  6ED5               	movwf	213,c	;volatile
   342                           
   343                           ;EX29.c: 141:     TMR0 = 31;
   344   000196  0E00               	movlw	0
   345   000198  6ED7               	movwf	215,c	;volatile
   346   00019A  0E1F               	movlw	31
   347   00019C  6ED6               	movwf	214,c	;volatile
   348   00019E                     l1034:
   349                           
   350                           ;EX29.c: 144:     {;EX29.c: 145:         ADCON0bits.GO = 1;
   351   00019E  82C2               	bsf	194,1,c	;volatile
   352   0001A0                     l79:
   353   0001A0  B2C2               	btfsc	194,1,c	;volatile
   354   0001A2  EFD5  F000         	goto	u321
   355   0001A6  EFD7  F000         	goto	u320
   356   0001AA                     u321:
   357   0001AA  EFD0  F000         	goto	l79
   358   0001AE                     u320:
   359   0001AE                     
   360                           ;EX29.c: 149:         adc = ADRESH;
   361   0001AE  CFC4 F041          	movff	4036,_adc	;volatile
   362   0001B2  6A42               	clrf	(_adc+1)^0,c
   363   0001B4                     
   364                           ;EX29.c: 151:         adc = (adc << 8) + ADRESL;
   365   0001B4  5041               	movf	_adc^0,w,c
   366   0001B6  6E27               	movwf	??_main^0,c
   367   0001B8  50C3               	movf	195,w,c	;volatile
   368   0001BA  6E41               	movwf	_adc^0,c
   369   0001BC  C027  F042         	movff	??_main,_adc+1
   370   0001C0                     
   371                           ;EX29.c: 154:         volt = ((unsigned long)adc * 5000) / 1023;
   372   0001C0  C041  F00E         	movff	_adc,___lmul@multiplier
   373   0001C4  C042  F00F         	movff	_adc+1,___lmul@multiplier+1
   374   0001C8  6A10               	clrf	(___lmul@multiplier+2)^0,c
   375   0001CA  6A11               	clrf	(___lmul@multiplier+3)^0,c
   376   0001CC  0E88               	movlw	136
   377   0001CE  6E12               	movwf	___lmul@multiplicand^0,c
   378   0001D0  0E13               	movlw	19
   379   0001D2  6E13               	movwf	(___lmul@multiplicand+1)^0,c
   380   0001D4  0E00               	movlw	0
   381   0001D6  6E14               	movwf	(___lmul@multiplicand+2)^0,c
   382   0001D8  0E00               	movlw	0
   383   0001DA  6E15               	movwf	(___lmul@multiplicand+3)^0,c
   384   0001DC  ECF8  F001         	call	___lmul	;wreg free
   385   0001E0  C00E  F01A         	movff	?___lmul,___lldiv@dividend
   386   0001E4  C00F  F01B         	movff	?___lmul+1,___lldiv@dividend+1
   387   0001E8  C010  F01C         	movff	?___lmul+2,___lldiv@dividend+2
   388   0001EC  C011  F01D         	movff	?___lmul+3,___lldiv@dividend+3
   389   0001F0  0EFF               	movlw	255
   390   0001F2  6E1E               	movwf	___lldiv@divisor^0,c
   391   0001F4  0E03               	movlw	3
   392   0001F6  6E1F               	movwf	(___lldiv@divisor+1)^0,c
   393   0001F8  0E00               	movlw	0
   394   0001FA  6E20               	movwf	(___lldiv@divisor+2)^0,c
   395   0001FC  0E00               	movlw	0
   396   0001FE  6E21               	movwf	(___lldiv@divisor+3)^0,c
   397   000200  EC1F  F001         	call	___lldiv	;wreg free
   398   000204  C01A  F03D         	movff	?___lldiv,_volt
   399   000208  C01B  F03E         	movff	?___lldiv+1,_volt+1
   400   00020C  C01C  F03F         	movff	?___lldiv+2,_volt+2
   401   000210  C01D  F040         	movff	?___lldiv+3,_volt+3
   402   000214                     
   403                           ;EX29.c: 157:         seleciona_7seg((unsigned int)volt);
   404   000214  C03D  F01A         	movff	_volt,seleciona_7seg@dig
   405   000218  C03E  F01B         	movff	_volt+1,seleciona_7seg@dig+1
   406   00021C  EC71  F001         	call	_seleciona_7seg	;wreg free
   407   000220                     
   408                           ;EX29.c: 160:         _delay((unsigned long)((300)*(8000000/4000.0)));
   409   000220  0E04               	movlw	4
   410   000222  6E28               	movwf	(??_main+1)^0,c
   411   000224  0E0C               	movlw	12
   412   000226  6E27               	movwf	??_main^0,c
   413   000228  0E34               	movlw	52
   414   00022A                     u337:
   415   00022A  2EE8               	decfsz	wreg,f,c
   416   00022C  D7FE               	bra	u337
   417   00022E  2E27               	decfsz	??_main^0,f,c
   418   000230  D7FC               	bra	u337
   419   000232  2E28               	decfsz	(??_main+1)^0,f,c
   420   000234  D7FA               	bra	u337
   421   000236  EFCF  F000         	goto	l1034
   422   00023A  EFB9  F000         	goto	start
   423   00023E                     __end_of_main:
   424                           	callstack 0
   425                           
   426 ;; *************** function _seleciona_7seg *****************
   427 ;; Defined at:
   428 ;;		line 88 in file "EX29.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;  dig             2   25[COMRAM] unsigned int 
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      void 
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   442 ;;      Params:         2       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0
   445 ;;      Totals:         2       0       0       0       0       0       0
   446 ;;Total ram usage:        2 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 3
   449 ;; This function calls:
   450 ;;		___lwdiv
   451 ;;		___lwmod
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text1
   458   0002E2                     __ptext1:
   459                           	callstack 0
   460   0002E2                     _seleciona_7seg:
   461                           	callstack 27
   462   0002E2                     
   463                           ;EX29.c: 88: void seleciona_7seg(unsigned int dig);EX29.c: 89: {;EX29.c: 90:     dig1 = 
      +                          (dig / 1000);
   464   0002E2  C01A  F00E         	movff	seleciona_7seg@dig,___lwdiv@dividend
   465   0002E6  C01B  F00F         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   466   0002EA  0E03               	movlw	3
   467   0002EC  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   468   0002EE  0EE8               	movlw	232
   469   0002F0  6E10               	movwf	___lwdiv@divisor^0,c
   470   0002F2  ECBE  F001         	call	___lwdiv	;wreg free
   471   0002F6  C00E  F049         	movff	?___lwdiv,_dig1
   472   0002FA  C00F  F04A         	movff	?___lwdiv+1,_dig1+1
   473                           
   474                           ;EX29.c: 92:     dig2 = (dig / 100) % 10;
   475   0002FE  0E00               	movlw	0
   476   000300  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   477   000302  0E64               	movlw	100
   478   000304  6E10               	movwf	___lwdiv@divisor^0,c
   479   000306  C01A  F00E         	movff	seleciona_7seg@dig,___lwdiv@dividend
   480   00030A  C01B  F00F         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   481   00030E  ECBE  F001         	call	___lwdiv	;wreg free
   482   000312  C00E  F015         	movff	?___lwdiv,___lwmod@dividend
   483   000316  C00F  F016         	movff	?___lwdiv+1,___lwmod@dividend+1
   484   00031A  0E00               	movlw	0
   485   00031C  6E18               	movwf	(___lwmod@divisor+1)^0,c
   486   00031E  0E0A               	movlw	10
   487   000320  6E17               	movwf	___lwmod@divisor^0,c
   488   000322  EC2D  F002         	call	___lwmod	;wreg free
   489   000326  C015  F047         	movff	?___lwmod,_dig2
   490   00032A  C016  F048         	movff	?___lwmod+1,_dig2+1
   491                           
   492                           ;EX29.c: 94:     dig3 = (dig / 10) % 10;
   493   00032E  0E00               	movlw	0
   494   000330  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   495   000332  0E0A               	movlw	10
   496   000334  6E10               	movwf	___lwdiv@divisor^0,c
   497   000336  C01A  F00E         	movff	seleciona_7seg@dig,___lwdiv@dividend
   498   00033A  C01B  F00F         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   499   00033E  ECBE  F001         	call	___lwdiv	;wreg free
   500   000342  C00E  F015         	movff	?___lwdiv,___lwmod@dividend
   501   000346  C00F  F016         	movff	?___lwdiv+1,___lwmod@dividend+1
   502   00034A  0E00               	movlw	0
   503   00034C  6E18               	movwf	(___lwmod@divisor+1)^0,c
   504   00034E  0E0A               	movlw	10
   505   000350  6E17               	movwf	___lwmod@divisor^0,c
   506   000352  EC2D  F002         	call	___lwmod	;wreg free
   507   000356  C015  F045         	movff	?___lwmod,_dig3
   508   00035A  C016  F046         	movff	?___lwmod+1,_dig3+1
   509                           
   510                           ;EX29.c: 96:     dig4 = dig % 10;
   511   00035E  C01A  F015         	movff	seleciona_7seg@dig,___lwmod@dividend
   512   000362  C01B  F016         	movff	seleciona_7seg@dig+1,___lwmod@dividend+1
   513   000366  0E00               	movlw	0
   514   000368  6E18               	movwf	(___lwmod@divisor+1)^0,c
   515   00036A  0E0A               	movlw	10
   516   00036C  6E17               	movwf	___lwmod@divisor^0,c
   517   00036E  EC2D  F002         	call	___lwmod	;wreg free
   518   000372  C015  F043         	movff	?___lwmod,_dig4
   519   000376  C016  F044         	movff	?___lwmod+1,_dig4+1
   520   00037A  0012               	return		;funcret
   521   00037C                     __end_of_seleciona_7seg:
   522                           	callstack 0
   523                           
   524 ;; *************** function ___lwmod *****************
   525 ;; Defined at:
   526 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  dividend        2   20[COMRAM] unsigned int 
   529 ;;  divisor         2   22[COMRAM] unsigned int 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  counter         1   24[COMRAM] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  2   20[COMRAM] unsigned int 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   541 ;;      Params:         4       0       0       0       0       0       0
   542 ;;      Locals:         1       0       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0
   544 ;;      Totals:         5       0       0       0       0       0       0
   545 ;;Total ram usage:        5 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 2
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_seleciona_7seg
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text2
   556   00045A                     __ptext2:
   557                           	callstack 0
   558   00045A                     ___lwmod:
   559                           	callstack 27
   560   00045A  5017               	movf	___lwmod@divisor^0,w,c
   561   00045C  1018               	iorwf	(___lwmod@divisor+1)^0,w,c
   562   00045E  B4D8               	btfsc	status,2,c
   563   000460  EF34  F002         	goto	u201
   564   000464  EF36  F002         	goto	u200
   565   000468                     u201:
   566   000468  EF5A  F002         	goto	l588
   567   00046C                     u200:
   568   00046C  0E01               	movlw	1
   569   00046E  6E19               	movwf	___lwmod@counter^0,c
   570   000470  EF3E  F002         	goto	l932
   571   000474                     l930:
   572   000474  90D8               	bcf	status,0,c
   573   000476  3617               	rlcf	___lwmod@divisor^0,f,c
   574   000478  3618               	rlcf	(___lwmod@divisor+1)^0,f,c
   575   00047A  2A19               	incf	___lwmod@counter^0,f,c
   576   00047C                     l932:
   577   00047C  AE18               	btfss	(___lwmod@divisor+1)^0,7,c
   578   00047E  EF43  F002         	goto	u211
   579   000482  EF45  F002         	goto	u210
   580   000486                     u211:
   581   000486  EF3A  F002         	goto	l930
   582   00048A                     u210:
   583   00048A                     l934:
   584   00048A  5017               	movf	___lwmod@divisor^0,w,c
   585   00048C  5C15               	subwf	___lwmod@dividend^0,w,c
   586   00048E  5018               	movf	(___lwmod@divisor+1)^0,w,c
   587   000490  5816               	subwfb	(___lwmod@dividend+1)^0,w,c
   588   000492  A0D8               	btfss	status,0,c
   589   000494  EF4E  F002         	goto	u221
   590   000498  EF50  F002         	goto	u220
   591   00049C                     u221:
   592   00049C  EF54  F002         	goto	l938
   593   0004A0                     u220:
   594   0004A0  5017               	movf	___lwmod@divisor^0,w,c
   595   0004A2  5E15               	subwf	___lwmod@dividend^0,f,c
   596   0004A4  5018               	movf	(___lwmod@divisor+1)^0,w,c
   597   0004A6  5A16               	subwfb	(___lwmod@dividend+1)^0,f,c
   598   0004A8                     l938:
   599   0004A8  90D8               	bcf	status,0,c
   600   0004AA  3218               	rrcf	(___lwmod@divisor+1)^0,f,c
   601   0004AC  3217               	rrcf	___lwmod@divisor^0,f,c
   602   0004AE  2E19               	decfsz	___lwmod@counter^0,f,c
   603   0004B0  EF45  F002         	goto	l934
   604   0004B4                     l588:
   605   0004B4  C015  F015         	movff	___lwmod@dividend,?___lwmod
   606   0004B8  C016  F016         	movff	___lwmod@dividend+1,?___lwmod+1
   607   0004BC  0012               	return		;funcret
   608   0004BE                     __end_of___lwmod:
   609                           	callstack 0
   610                           
   611 ;; *************** function ___lwdiv *****************
   612 ;; Defined at:
   613 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  dividend        2   13[COMRAM] unsigned int 
   616 ;;  divisor         2   15[COMRAM] unsigned int 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  quotient        2   17[COMRAM] unsigned int 
   619 ;;  counter         1   19[COMRAM] unsigned char 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  2   13[COMRAM] unsigned int 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   629 ;;      Params:         4       0       0       0       0       0       0
   630 ;;      Locals:         3       0       0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0
   632 ;;      Totals:         7       0       0       0       0       0       0
   633 ;;Total ram usage:        7 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 2
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_seleciona_7seg
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text3
   644   00037C                     __ptext3:
   645                           	callstack 0
   646   00037C                     ___lwdiv:
   647                           	callstack 27
   648   00037C  0E00               	movlw	0
   649   00037E  6E13               	movwf	(___lwdiv@quotient+1)^0,c
   650   000380  0E00               	movlw	0
   651   000382  6E12               	movwf	___lwdiv@quotient^0,c
   652   000384  5010               	movf	___lwdiv@divisor^0,w,c
   653   000386  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
   654   000388  B4D8               	btfsc	status,2,c
   655   00038A  EFC9  F001         	goto	u171
   656   00038E  EFCB  F001         	goto	u170
   657   000392                     u171:
   658   000392  EFF3  F001         	goto	l578
   659   000396                     u170:
   660   000396  0E01               	movlw	1
   661   000398  6E14               	movwf	___lwdiv@counter^0,c
   662   00039A  EFD3  F001         	goto	l912
   663   00039E                     l910:
   664   00039E  90D8               	bcf	status,0,c
   665   0003A0  3610               	rlcf	___lwdiv@divisor^0,f,c
   666   0003A2  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
   667   0003A4  2A14               	incf	___lwdiv@counter^0,f,c
   668   0003A6                     l912:
   669   0003A6  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
   670   0003A8  EFD8  F001         	goto	u181
   671   0003AC  EFDA  F001         	goto	u180
   672   0003B0                     u181:
   673   0003B0  EFCF  F001         	goto	l910
   674   0003B4                     u180:
   675   0003B4                     l914:
   676   0003B4  90D8               	bcf	status,0,c
   677   0003B6  3612               	rlcf	___lwdiv@quotient^0,f,c
   678   0003B8  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
   679   0003BA  5010               	movf	___lwdiv@divisor^0,w,c
   680   0003BC  5C0E               	subwf	___lwdiv@dividend^0,w,c
   681   0003BE  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   682   0003C0  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
   683   0003C2  A0D8               	btfss	status,0,c
   684   0003C4  EFE6  F001         	goto	u191
   685   0003C8  EFE8  F001         	goto	u190
   686   0003CC                     u191:
   687   0003CC  EFED  F001         	goto	l922
   688   0003D0                     u190:
   689   0003D0  5010               	movf	___lwdiv@divisor^0,w,c
   690   0003D2  5E0E               	subwf	___lwdiv@dividend^0,f,c
   691   0003D4  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   692   0003D6  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
   693   0003D8  8012               	bsf	___lwdiv@quotient^0,0,c
   694   0003DA                     l922:
   695   0003DA  90D8               	bcf	status,0,c
   696   0003DC  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
   697   0003DE  3210               	rrcf	___lwdiv@divisor^0,f,c
   698   0003E0  2E14               	decfsz	___lwdiv@counter^0,f,c
   699   0003E2  EFDA  F001         	goto	l914
   700   0003E6                     l578:
   701   0003E6  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
   702   0003EA  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
   703   0003EE  0012               	return		;funcret
   704   0003F0                     __end_of___lwdiv:
   705                           	callstack 0
   706                           
   707 ;; *************** function ___lmul *****************
   708 ;; Defined at:
   709 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;  multiplier      4   13[COMRAM] unsigned long 
   712 ;;  multiplicand    4   17[COMRAM] unsigned long 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  product         4   21[COMRAM] unsigned long 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  4   13[COMRAM] unsigned long 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   724 ;;      Params:         8       0       0       0       0       0       0
   725 ;;      Locals:         4       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0
   727 ;;      Totals:        12       0       0       0       0       0       0
   728 ;;Total ram usage:       12 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 2
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text4
   739   0003F0                     __ptext4:
   740                           	callstack 0
   741   0003F0                     ___lmul:
   742                           	callstack 28
   743   0003F0  0E00               	movlw	0
   744   0003F2  6E16               	movwf	___lmul@product^0,c
   745   0003F4  0E00               	movlw	0
   746   0003F6  6E17               	movwf	(___lmul@product+1)^0,c
   747   0003F8  0E00               	movlw	0
   748   0003FA  6E18               	movwf	(___lmul@product+2)^0,c
   749   0003FC  0E00               	movlw	0
   750   0003FE  6E19               	movwf	(___lmul@product+3)^0,c
   751   000400                     l958:
   752   000400  A00E               	btfss	___lmul@multiplier^0,0,c
   753   000402  EF05  F002         	goto	u251
   754   000406  EF07  F002         	goto	u250
   755   00040A                     u251:
   756   00040A  EF0F  F002         	goto	l962
   757   00040E                     u250:
   758   00040E  5012               	movf	___lmul@multiplicand^0,w,c
   759   000410  2616               	addwf	___lmul@product^0,f,c
   760   000412  5013               	movf	(___lmul@multiplicand+1)^0,w,c
   761   000414  2217               	addwfc	(___lmul@product+1)^0,f,c
   762   000416  5014               	movf	(___lmul@multiplicand+2)^0,w,c
   763   000418  2218               	addwfc	(___lmul@product+2)^0,f,c
   764   00041A  5015               	movf	(___lmul@multiplicand+3)^0,w,c
   765   00041C  2219               	addwfc	(___lmul@product+3)^0,f,c
   766   00041E                     l962:
   767   00041E  90D8               	bcf	status,0,c
   768   000420  3612               	rlcf	___lmul@multiplicand^0,f,c
   769   000422  3613               	rlcf	(___lmul@multiplicand+1)^0,f,c
   770   000424  3614               	rlcf	(___lmul@multiplicand+2)^0,f,c
   771   000426  3615               	rlcf	(___lmul@multiplicand+3)^0,f,c
   772   000428  90D8               	bcf	status,0,c
   773   00042A  3211               	rrcf	(___lmul@multiplier+3)^0,f,c
   774   00042C  3210               	rrcf	(___lmul@multiplier+2)^0,f,c
   775   00042E  320F               	rrcf	(___lmul@multiplier+1)^0,f,c
   776   000430  320E               	rrcf	___lmul@multiplier^0,f,c
   777   000432  500E               	movf	___lmul@multiplier^0,w,c
   778   000434  100F               	iorwf	(___lmul@multiplier+1)^0,w,c
   779   000436  1010               	iorwf	(___lmul@multiplier+2)^0,w,c
   780   000438  1011               	iorwf	(___lmul@multiplier+3)^0,w,c
   781   00043A  A4D8               	btfss	status,2,c
   782   00043C  EF22  F002         	goto	u261
   783   000440  EF24  F002         	goto	u260
   784   000444                     u261:
   785   000444  EF00  F002         	goto	l958
   786   000448                     u260:
   787   000448  C016  F00E         	movff	___lmul@product,?___lmul
   788   00044C  C017  F00F         	movff	___lmul@product+1,?___lmul+1
   789   000450  C018  F010         	movff	___lmul@product+2,?___lmul+2
   790   000454  C019  F011         	movff	___lmul@product+3,?___lmul+3
   791   000458  0012               	return		;funcret
   792   00045A                     __end_of___lmul:
   793                           	callstack 0
   794                           
   795 ;; *************** function ___lldiv *****************
   796 ;; Defined at:
   797 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  dividend        4   25[COMRAM] unsigned long 
   800 ;;  divisor         4   29[COMRAM] unsigned long 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  quotient        4   33[COMRAM] unsigned long 
   803 ;;  counter         1   37[COMRAM] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  4   25[COMRAM] unsigned long 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   813 ;;      Params:         8       0       0       0       0       0       0
   814 ;;      Locals:         5       0       0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0       0       0
   816 ;;      Totals:        13       0       0       0       0       0       0
   817 ;;Total ram usage:       13 bytes
   818 ;; Hardware stack levels used: 1
   819 ;; Hardware stack levels required when called: 2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text5
   828   00023E                     __ptext5:
   829                           	callstack 0
   830   00023E                     ___lldiv:
   831                           	callstack 28
   832   00023E  0E00               	movlw	0
   833   000240  6E22               	movwf	___lldiv@quotient^0,c
   834   000242  0E00               	movlw	0
   835   000244  6E23               	movwf	(___lldiv@quotient+1)^0,c
   836   000246  0E00               	movlw	0
   837   000248  6E24               	movwf	(___lldiv@quotient+2)^0,c
   838   00024A  0E00               	movlw	0
   839   00024C  6E25               	movwf	(___lldiv@quotient+3)^0,c
   840   00024E  501E               	movf	___lldiv@divisor^0,w,c
   841   000250  101F               	iorwf	(___lldiv@divisor+1)^0,w,c
   842   000252  1020               	iorwf	(___lldiv@divisor+2)^0,w,c
   843   000254  1021               	iorwf	(___lldiv@divisor+3)^0,w,c
   844   000256  B4D8               	btfsc	status,2,c
   845   000258  EF30  F001         	goto	u271
   846   00025C  EF32  F001         	goto	u270
   847   000260                     u271:
   848   000260  EF68  F001         	goto	l114
   849   000264                     u270:
   850   000264  0E01               	movlw	1
   851   000266  6E26               	movwf	___lldiv@counter^0,c
   852   000268  EF3C  F001         	goto	l974
   853   00026C                     l972:
   854   00026C  90D8               	bcf	status,0,c
   855   00026E  361E               	rlcf	___lldiv@divisor^0,f,c
   856   000270  361F               	rlcf	(___lldiv@divisor+1)^0,f,c
   857   000272  3620               	rlcf	(___lldiv@divisor+2)^0,f,c
   858   000274  3621               	rlcf	(___lldiv@divisor+3)^0,f,c
   859   000276  2A26               	incf	___lldiv@counter^0,f,c
   860   000278                     l974:
   861   000278  AE21               	btfss	(___lldiv@divisor+3)^0,7,c
   862   00027A  EF41  F001         	goto	u281
   863   00027E  EF43  F001         	goto	u280
   864   000282                     u281:
   865   000282  EF36  F001         	goto	l972
   866   000286                     u280:
   867   000286                     l976:
   868   000286  90D8               	bcf	status,0,c
   869   000288  3622               	rlcf	___lldiv@quotient^0,f,c
   870   00028A  3623               	rlcf	(___lldiv@quotient+1)^0,f,c
   871   00028C  3624               	rlcf	(___lldiv@quotient+2)^0,f,c
   872   00028E  3625               	rlcf	(___lldiv@quotient+3)^0,f,c
   873   000290  501E               	movf	___lldiv@divisor^0,w,c
   874   000292  5C1A               	subwf	___lldiv@dividend^0,w,c
   875   000294  501F               	movf	(___lldiv@divisor+1)^0,w,c
   876   000296  581B               	subwfb	(___lldiv@dividend+1)^0,w,c
   877   000298  5020               	movf	(___lldiv@divisor+2)^0,w,c
   878   00029A  581C               	subwfb	(___lldiv@dividend+2)^0,w,c
   879   00029C  5021               	movf	(___lldiv@divisor+3)^0,w,c
   880   00029E  581D               	subwfb	(___lldiv@dividend+3)^0,w,c
   881   0002A0  A0D8               	btfss	status,0,c
   882   0002A2  EF55  F001         	goto	u291
   883   0002A6  EF57  F001         	goto	u290
   884   0002AA                     u291:
   885   0002AA  EF60  F001         	goto	l984
   886   0002AE                     u290:
   887   0002AE  501E               	movf	___lldiv@divisor^0,w,c
   888   0002B0  5E1A               	subwf	___lldiv@dividend^0,f,c
   889   0002B2  501F               	movf	(___lldiv@divisor+1)^0,w,c
   890   0002B4  5A1B               	subwfb	(___lldiv@dividend+1)^0,f,c
   891   0002B6  5020               	movf	(___lldiv@divisor+2)^0,w,c
   892   0002B8  5A1C               	subwfb	(___lldiv@dividend+2)^0,f,c
   893   0002BA  5021               	movf	(___lldiv@divisor+3)^0,w,c
   894   0002BC  5A1D               	subwfb	(___lldiv@dividend+3)^0,f,c
   895   0002BE  8022               	bsf	___lldiv@quotient^0,0,c
   896   0002C0                     l984:
   897   0002C0  90D8               	bcf	status,0,c
   898   0002C2  3221               	rrcf	(___lldiv@divisor+3)^0,f,c
   899   0002C4  3220               	rrcf	(___lldiv@divisor+2)^0,f,c
   900   0002C6  321F               	rrcf	(___lldiv@divisor+1)^0,f,c
   901   0002C8  321E               	rrcf	___lldiv@divisor^0,f,c
   902   0002CA  2E26               	decfsz	___lldiv@counter^0,f,c
   903   0002CC  EF43  F001         	goto	l976
   904   0002D0                     l114:
   905   0002D0  C022  F01A         	movff	___lldiv@quotient,?___lldiv
   906   0002D4  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
   907   0002D8  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
   908   0002DC  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
   909   0002E0  0012               	return		;funcret
   910   0002E2                     __end_of___lldiv:
   911                           	callstack 0
   912                           
   913 ;; *************** function _int_TMR0 *****************
   914 ;; Defined at:
   915 ;;		line 30 in file "EX29.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   929 ;;      Params:         0       0       0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0
   931 ;;      Temps:          7       0       0       0       0       0       0
   932 ;;      Totals:         7       0       0       0       0       0       0
   933 ;;Total ram usage:        7 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 1
   936 ;; This function calls:
   937 ;;		_escreve_7seg
   938 ;; This function is called by:
   939 ;;		Interrupt level 1
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	intcodelo
   944   000018                     __pintcodelo:
   945                           	callstack 0
   946   000018                     _int_TMR0:
   947                           	callstack 27
   948                           
   949                           ;incstack = 0
   950   000018  804D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   951   00001A  CFD8 F009          	movff	status,??_int_TMR0+2
   952   00001E  CFE8 F00A          	movff	wreg,??_int_TMR0+3
   953   000022  CFE0 F00B          	movff	bsr,??_int_TMR0+4
   954   000026  CFD9 F00C          	movff	fsr2l,??_int_TMR0+5
   955   00002A  CFDA F00D          	movff	fsr2h,??_int_TMR0+6
   956   00002E                     
   957                           ;EX29.c: 33:     if (TMR0IF)
   958   00002E  A4F2               	btfss	4082,2,c	;volatile
   959   000030  EF1C  F000         	goto	i1u30_21
   960   000034  EF1E  F000         	goto	i1u30_20
   961   000038                     i1u30_21:
   962   000038  EFA8  F000         	goto	i1l1024
   963   00003C                     i1u30_20:
   964   00003C                     
   965                           ;EX29.c: 34:     {;EX29.c: 35:       sel_digito++;
   966   00003C  4A4B               	infsnz	_sel_digito^0,f,c
   967   00003E  2A4C               	incf	(_sel_digito+1)^0,f,c
   968   000040                     
   969                           ;EX29.c: 36:       if (sel_digito>4) sel_digito = 1;
   970   000040  504C               	movf	(_sel_digito+1)^0,w,c
   971   000042  E109               	bnz	i1u31_20
   972   000044  0E05               	movlw	5
   973   000046  5C4B               	subwf	_sel_digito^0,w,c
   974   000048  A0D8               	btfss	status,0,c
   975   00004A  EF29  F000         	goto	i1u31_21
   976   00004E  EF2B  F000         	goto	i1u31_20
   977   000052                     i1u31_21:
   978   000052  EF8A  F000         	goto	i1l1022
   979   000056                     i1u31_20:
   980   000056  0E00               	movlw	0
   981   000058  6E4C               	movwf	(_sel_digito+1)^0,c
   982   00005A  0E01               	movlw	1
   983   00005C  6E4B               	movwf	_sel_digito^0,c
   984   00005E  EF8A  F000         	goto	i1l1022
   985   000062                     i1l996:
   986   000062  0E0F               	movlw	15
   987   000064  6E83               	movwf	131,c	;volatile
   988   000066                     
   989                           ;EX29.c: 43:                    escreve_7seg(digito[dig1] | 0b10000000);
   990   000066  90D8               	bcf	status,0,c
   991   000068  3449               	rlcf	_dig1^0,w,c
   992   00006A  6ED9               	movwf	fsr2l,c
   993   00006C  344A               	rlcf	(_dig1+1)^0,w,c
   994   00006E  6EDA               	movwf	fsr2h,c
   995   000070  0E29               	movlw	low _digito
   996   000072  26D9               	addwf	fsr2l,f,c
   997   000074  0E00               	movlw	high _digito
   998   000076  22DA               	addwfc	fsr2h,f,c
   999   000078  CFDE F007          	movff	postinc2,??_int_TMR0
  1000   00007C  CFDD F008          	movff	postdec2,??_int_TMR0+1
  1001   000080  0E80               	movlw	128
  1002   000082  1007               	iorwf	??_int_TMR0^0,w,c
  1003   000084  6E01               	movwf	escreve_7seg@num^0,c
  1004   000086  5008               	movf	(??_int_TMR0+1)^0,w,c
  1005   000088  6E02               	movwf	(escreve_7seg@num+1)^0,c
  1006   00008A  EC5F  F002         	call	_escreve_7seg	;wreg free
  1007   00008E                     
  1008                           ;EX29.c: 44:                    PORTD = 0b00001110;
  1009   00008E  0E0E               	movlw	14
  1010   000090  6E83               	movwf	131,c	;volatile
  1011                           
  1012                           ;EX29.c: 45:               break;
  1013   000092  EFA8  F000         	goto	i1l1024
  1014   000096                     i1l1002:
  1015   000096  0E0F               	movlw	15
  1016   000098  6E83               	movwf	131,c	;volatile
  1017   00009A                     
  1018                           ;EX29.c: 47:                    escreve_7seg(digito[dig2]);
  1019   00009A  90D8               	bcf	status,0,c
  1020   00009C  3447               	rlcf	_dig2^0,w,c
  1021   00009E  6ED9               	movwf	fsr2l,c
  1022   0000A0  3448               	rlcf	(_dig2+1)^0,w,c
  1023   0000A2  6EDA               	movwf	fsr2h,c
  1024   0000A4  0E29               	movlw	low _digito
  1025   0000A6  26D9               	addwf	fsr2l,f,c
  1026   0000A8  0E00               	movlw	high _digito
  1027   0000AA  22DA               	addwfc	fsr2h,f,c
  1028   0000AC  CFDE F001          	movff	postinc2,escreve_7seg@num
  1029   0000B0  CFDD F002          	movff	postdec2,escreve_7seg@num+1
  1030   0000B4  EC5F  F002         	call	_escreve_7seg	;wreg free
  1031   0000B8                     
  1032                           ;EX29.c: 48:                    PORTD = 0b00001101;
  1033   0000B8  0E0D               	movlw	13
  1034   0000BA  6E83               	movwf	131,c	;volatile
  1035                           
  1036                           ;EX29.c: 49:               break;
  1037   0000BC  EFA8  F000         	goto	i1l1024
  1038   0000C0                     i1l1008:
  1039   0000C0  0E0F               	movlw	15
  1040   0000C2  6E83               	movwf	131,c	;volatile
  1041   0000C4                     
  1042                           ;EX29.c: 51:                    escreve_7seg(digito[dig3]);
  1043   0000C4  90D8               	bcf	status,0,c
  1044   0000C6  3445               	rlcf	_dig3^0,w,c
  1045   0000C8  6ED9               	movwf	fsr2l,c
  1046   0000CA  3446               	rlcf	(_dig3+1)^0,w,c
  1047   0000CC  6EDA               	movwf	fsr2h,c
  1048   0000CE  0E29               	movlw	low _digito
  1049   0000D0  26D9               	addwf	fsr2l,f,c
  1050   0000D2  0E00               	movlw	high _digito
  1051   0000D4  22DA               	addwfc	fsr2h,f,c
  1052   0000D6  CFDE F001          	movff	postinc2,escreve_7seg@num
  1053   0000DA  CFDD F002          	movff	postdec2,escreve_7seg@num+1
  1054   0000DE  EC5F  F002         	call	_escreve_7seg	;wreg free
  1055   0000E2                     
  1056                           ;EX29.c: 52:                    PORTD = 0b00001011;
  1057   0000E2  0E0B               	movlw	11
  1058   0000E4  6E83               	movwf	131,c	;volatile
  1059                           
  1060                           ;EX29.c: 53:               break;
  1061   0000E6  EFA8  F000         	goto	i1l1024
  1062   0000EA                     i1l1014:
  1063   0000EA  0E0F               	movlw	15
  1064   0000EC  6E83               	movwf	131,c	;volatile
  1065   0000EE                     
  1066                           ;EX29.c: 55:                    escreve_7seg(digito[dig4]);
  1067   0000EE  90D8               	bcf	status,0,c
  1068   0000F0  3443               	rlcf	_dig4^0,w,c
  1069   0000F2  6ED9               	movwf	fsr2l,c
  1070   0000F4  3444               	rlcf	(_dig4+1)^0,w,c
  1071   0000F6  6EDA               	movwf	fsr2h,c
  1072   0000F8  0E29               	movlw	low _digito
  1073   0000FA  26D9               	addwf	fsr2l,f,c
  1074   0000FC  0E00               	movlw	high _digito
  1075   0000FE  22DA               	addwfc	fsr2h,f,c
  1076   000100  CFDE F001          	movff	postinc2,escreve_7seg@num
  1077   000104  CFDD F002          	movff	postdec2,escreve_7seg@num+1
  1078   000108  EC5F  F002         	call	_escreve_7seg	;wreg free
  1079   00010C                     
  1080                           ;EX29.c: 56:                    PORTD = 0b00000111;
  1081   00010C  0E07               	movlw	7
  1082   00010E  6E83               	movwf	131,c	;volatile
  1083                           
  1084                           ;EX29.c: 57:               break;
  1085   000110  EFA8  F000         	goto	i1l1024
  1086   000114                     i1l1022:
  1087   000114  C04B  F007         	movff	_sel_digito,??_int_TMR0
  1088   000118  C04C  F008         	movff	_sel_digito+1,??_int_TMR0+1
  1089                           
  1090                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1091                           ; Switch size 1, requested type "simple"
  1092                           ; Number of cases is 1, Range of values is 0 to 0
  1093                           ; switch strategies available:
  1094                           ; Name         Instructions Cycles
  1095                           ; simple_byte            4     3 (average)
  1096                           ;	Chosen strategy is simple_byte
  1097   00011C  5008               	movf	(??_int_TMR0+1)^0,w,c
  1098   00011E  0A00               	xorlw	0	; case 0
  1099   000120  B4D8               	btfsc	status,2,c
  1100   000122  EF95  F000         	goto	i1l1048
  1101   000126  EFA8  F000         	goto	i1l1024
  1102   00012A                     i1l1048:
  1103                           
  1104                           ; Switch size 1, requested type "simple"
  1105                           ; Number of cases is 4, Range of values is 1 to 4
  1106                           ; switch strategies available:
  1107                           ; Name         Instructions Cycles
  1108                           ; simple_byte           13     7 (average)
  1109                           ;	Chosen strategy is simple_byte
  1110   00012A  5007               	movf	??_int_TMR0^0,w,c
  1111   00012C  0A01               	xorlw	1	; case 1
  1112   00012E  B4D8               	btfsc	status,2,c
  1113   000130  EF31  F000         	goto	i1l996
  1114   000134  0A03               	xorlw	3	; case 2
  1115   000136  B4D8               	btfsc	status,2,c
  1116   000138  EF4B  F000         	goto	i1l1002
  1117   00013C  0A01               	xorlw	1	; case 3
  1118   00013E  B4D8               	btfsc	status,2,c
  1119   000140  EF60  F000         	goto	i1l1008
  1120   000144  0A07               	xorlw	7	; case 4
  1121   000146  B4D8               	btfsc	status,2,c
  1122   000148  EF75  F000         	goto	i1l1014
  1123   00014C  EFA8  F000         	goto	i1l1024
  1124   000150                     i1l1024:
  1125                           
  1126                           ;EX29.c: 61:      TMR0 = 31;
  1127   000150  0E00               	movlw	0
  1128   000152  6ED7               	movwf	215,c	;volatile
  1129   000154  0E1F               	movlw	31
  1130   000156  6ED6               	movwf	214,c	;volatile
  1131   000158                     
  1132                           ;EX29.c: 62:      TMR0IF = 0;
  1133   000158  94F2               	bcf	4082,2,c	;volatile
  1134   00015A  C00D  FFDA         	movff	??_int_TMR0+6,fsr2h
  1135   00015E  C00C  FFD9         	movff	??_int_TMR0+5,fsr2l
  1136   000162  C00B  FFE0         	movff	??_int_TMR0+4,bsr
  1137   000166  C00A  FFE8         	movff	??_int_TMR0+3,wreg
  1138   00016A  C009  FFD8         	movff	??_int_TMR0+2,status
  1139   00016E  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1140   000170  0010               	retfie	
  1141   000172                     __end_of_int_TMR0:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function _escreve_7seg *****************
  1145 ;; Defined at:
  1146 ;;		line 66 in file "EX29.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  num             2    0[COMRAM] unsigned int 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  j               2    4[COMRAM] unsigned int 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1160 ;;      Params:         2       0       0       0       0       0       0
  1161 ;;      Locals:         2       0       0       0       0       0       0
  1162 ;;      Temps:          2       0       0       0       0       0       0
  1163 ;;      Totals:         6       0       0       0       0       0       0
  1164 ;;Total ram usage:        6 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_int_TMR0
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text7
  1174   0004BE                     __ptext7:
  1175                           	callstack 0
  1176   0004BE                     _escreve_7seg:
  1177                           	callstack 27
  1178   0004BE                     
  1179                           ;EX29.c: 66: void escreve_7seg(unsigned int num);EX29.c: 67: {;EX29.c: 68:     unsigned 
      +                          int j;;EX29.c: 70:     for(j = 0x80; j > 0; j = j >> 1)
  1180   0004BE  0E00               	movlw	0
  1181   0004C0  6E06               	movwf	(escreve_7seg@j+1)^0,c
  1182   0004C2  0E80               	movlw	128
  1183   0004C4  6E05               	movwf	escreve_7seg@j^0,c
  1184   0004C6                     i1l948:
  1185                           
  1186                           ;EX29.c: 71:     {;EX29.c: 74:         if(num & j)
  1187   0004C6  5005               	movf	escreve_7seg@j^0,w,c
  1188   0004C8  1401               	andwf	escreve_7seg@num^0,w,c
  1189   0004CA  6E03               	movwf	??_escreve_7seg^0,c
  1190   0004CC  5006               	movf	(escreve_7seg@j+1)^0,w,c
  1191   0004CE  1402               	andwf	(escreve_7seg@num+1)^0,w,c
  1192   0004D0  6E04               	movwf	(??_escreve_7seg+1)^0,c
  1193   0004D2  5003               	movf	??_escreve_7seg^0,w,c
  1194   0004D4  1004               	iorwf	(??_escreve_7seg+1)^0,w,c
  1195   0004D6  B4D8               	btfsc	status,2,c
  1196   0004D8  EF70  F002         	goto	i1u23_21
  1197   0004DC  EF72  F002         	goto	i1u23_20
  1198   0004E0                     i1u23_21:
  1199   0004E0  EF75  F002         	goto	i1l68
  1200   0004E4                     i1u23_20:
  1201   0004E4                     
  1202                           ;EX29.c: 75:             PORTEbits.RE0 = 1;
  1203   0004E4  8084               	bsf	132,0,c	;volatile
  1204   0004E6  EF76  F002         	goto	i1l69
  1205   0004EA                     i1l68:
  1206                           
  1207                           ;EX29.c: 77:             PORTEbits.RE0 = 0;
  1208   0004EA  9084               	bcf	132,0,c	;volatile
  1209   0004EC                     i1l69:
  1210                           
  1211                           ;EX29.c: 80:         PORTEbits.RE1 = 1;
  1212   0004EC  8284               	bsf	132,1,c	;volatile
  1213                           
  1214                           ;EX29.c: 81:         PORTEbits.RE1 = 0;
  1215   0004EE  9284               	bcf	132,1,c	;volatile
  1216   0004F0                     
  1217                           ;EX29.c: 82:     }
  1218   0004F0  90D8               	bcf	status,0,c
  1219   0004F2  3006               	rrcf	(escreve_7seg@j+1)^0,w,c
  1220   0004F4  6E03               	movwf	??_escreve_7seg^0,c
  1221   0004F6  3005               	rrcf	escreve_7seg@j^0,w,c
  1222   0004F8  6E05               	movwf	escreve_7seg@j^0,c
  1223   0004FA  C003  F006         	movff	??_escreve_7seg,escreve_7seg@j+1
  1224   0004FE  5005               	movf	escreve_7seg@j^0,w,c
  1225   000500  1006               	iorwf	(escreve_7seg@j+1)^0,w,c
  1226   000502  A4D8               	btfss	status,2,c
  1227   000504  EF86  F002         	goto	i1u24_21
  1228   000508  EF88  F002         	goto	i1u24_20
  1229   00050C                     i1u24_21:
  1230   00050C  EF63  F002         	goto	i1l948
  1231   000510                     i1u24_20:
  1232   000510                     
  1233                           ;EX29.c: 84:     PORTEbits.RE2 = 1;
  1234   000510  8484               	bsf	132,2,c	;volatile
  1235                           
  1236                           ;EX29.c: 85:     PORTEbits.RE2 = 0;
  1237   000512  9484               	bcf	132,2,c	;volatile
  1238   000514  0012               	return		;funcret
  1239   000516                     __end_of_escreve_7seg:
  1240                           	callstack 0
  1241   000000                     
  1242                           	psect	rparam
  1243   000000                     
  1244                           	psect	temp
  1245   00004D                     btemp:
  1246                           	callstack 0
  1247   00004D                     	ds	1
  1248   000000                     int$flags	set	btemp
  1249   000000                     wtemp8	set	btemp+1
  1250   000000                     ttemp5	set	btemp+1
  1251   000000                     ttemp6	set	btemp+4
  1252   000000                     ttemp7	set	btemp+8
  1253                           
  1254                           	psect	idloc
  1255                           
  1256                           ;Config register IDLOC0 @ 0x200000
  1257                           ;	unspecified, using default values
  1258   200000                     	org	2097152
  1259   200000  FF                 	db	255
  1260                           
  1261                           ;Config register IDLOC1 @ 0x200001
  1262                           ;	unspecified, using default values
  1263   200001                     	org	2097153
  1264   200001  FF                 	db	255
  1265                           
  1266                           ;Config register IDLOC2 @ 0x200002
  1267                           ;	unspecified, using default values
  1268   200002                     	org	2097154
  1269   200002  FF                 	db	255
  1270                           
  1271                           ;Config register IDLOC3 @ 0x200003
  1272                           ;	unspecified, using default values
  1273   200003                     	org	2097155
  1274   200003  FF                 	db	255
  1275                           
  1276                           ;Config register IDLOC4 @ 0x200004
  1277                           ;	unspecified, using default values
  1278   200004                     	org	2097156
  1279   200004  FF                 	db	255
  1280                           
  1281                           ;Config register IDLOC5 @ 0x200005
  1282                           ;	unspecified, using default values
  1283   200005                     	org	2097157
  1284   200005  FF                 	db	255
  1285                           
  1286                           ;Config register IDLOC6 @ 0x200006
  1287                           ;	unspecified, using default values
  1288   200006                     	org	2097158
  1289   200006  FF                 	db	255
  1290                           
  1291                           ;Config register IDLOC7 @ 0x200007
  1292                           ;	unspecified, using default values
  1293   200007                     	org	2097159
  1294   200007  FF                 	db	255
  1295                           
  1296                           	psect	config
  1297                           
  1298                           ; Padding undefined space
  1299   300000                     	org	3145728
  1300   300000  FF                 	db	255
  1301                           
  1302                           ;Config register CONFIG1H @ 0x300001
  1303                           ;	Oscillator Selection bits
  1304                           ;	OSC = HS, HS oscillator
  1305                           ;	Fail-Safe Clock Monitor Enable bit
  1306                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1307                           ;	Internal/External Oscillator Switchover bit
  1308                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1309   300001                     	org	3145729
  1310   300001  02                 	db	2
  1311                           
  1312                           ;Config register CONFIG2L @ 0x300002
  1313                           ;	Power-up Timer Enable bit
  1314                           ;	PWRT = ON, PWRT enabled
  1315                           ;	Brown-out Reset Enable bits
  1316                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1317                           ;	Brown Out Reset Voltage bits
  1318                           ;	BORV = 3, Minimum setting
  1319   300002                     	org	3145730
  1320   300002  18                 	db	24
  1321                           
  1322                           ;Config register CONFIG2H @ 0x300003
  1323                           ;	Watchdog Timer Enable bit
  1324                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1325                           ;	Watchdog Timer Postscale Select bits
  1326                           ;	WDTPS = 32768, 1:32768
  1327   300003                     	org	3145731
  1328   300003  1E                 	db	30
  1329                           
  1330                           ; Padding undefined space
  1331   300004                     	org	3145732
  1332   300004  FF                 	db	255
  1333                           
  1334                           ;Config register CONFIG3H @ 0x300005
  1335                           ;	CCP2 MUX bit
  1336                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1337                           ;	PORTB A/D Enable bit
  1338                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1339                           ;	Low-Power Timer1 Oscillator Enable bit
  1340                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1341                           ;	MCLR Pin Enable bit
  1342                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1343   300005                     	org	3145733
  1344   300005  81                 	db	129
  1345                           
  1346                           ;Config register CONFIG4L @ 0x300006
  1347                           ;	Stack Full/Underflow Reset Enable bit
  1348                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1349                           ;	Single-Supply ICSP Enable bit
  1350                           ;	LVP = OFF, Single-Supply ICSP disabled
  1351                           ;	Extended Instruction Set Enable bit
  1352                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1353                           ;	Background Debugger Enable bit
  1354                           ;	DEBUG = 0x1, unprogrammed default
  1355   300006                     	org	3145734
  1356   300006  81                 	db	129
  1357                           
  1358                           ; Padding undefined space
  1359   300007                     	org	3145735
  1360   300007  FF                 	db	255
  1361                           
  1362                           ;Config register CONFIG5L @ 0x300008
  1363                           ;	Code Protection bit
  1364                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1365                           ;	Code Protection bit
  1366                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1367                           ;	Code Protection bit
  1368                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1369                           ;	Code Protection bit
  1370                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1371   300008                     	org	3145736
  1372   300008  0F                 	db	15
  1373                           
  1374                           ;Config register CONFIG5H @ 0x300009
  1375                           ;	Boot Block Code Protection bit
  1376                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1377                           ;	Data EEPROM Code Protection bit
  1378                           ;	CPD = OFF, Data EEPROM not code-protected
  1379   300009                     	org	3145737
  1380   300009  C0                 	db	192
  1381                           
  1382                           ;Config register CONFIG6L @ 0x30000A
  1383                           ;	Write Protection bit
  1384                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1385                           ;	Write Protection bit
  1386                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1387                           ;	Write Protection bit
  1388                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1389                           ;	Write Protection bit
  1390                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1391   30000A                     	org	3145738
  1392   30000A  0F                 	db	15
  1393                           
  1394                           ;Config register CONFIG6H @ 0x30000B
  1395                           ;	Configuration Register Write Protection bit
  1396                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1397                           ;	Boot Block Write Protection bit
  1398                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1399                           ;	Data EEPROM Write Protection bit
  1400                           ;	WRTD = OFF, Data EEPROM not write-protected
  1401   30000B                     	org	3145739
  1402   30000B  E0                 	db	224
  1403                           
  1404                           ;Config register CONFIG7L @ 0x30000C
  1405                           ;	Table Read Protection bit
  1406                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1407                           ;	Table Read Protection bit
  1408                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1409                           ;	Table Read Protection bit
  1410                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1411                           ;	Table Read Protection bit
  1412                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1413   30000C                     	org	3145740
  1414   30000C  0F                 	db	15
  1415                           
  1416                           ;Config register CONFIG7H @ 0x30000D
  1417                           ;	Boot Block Table Read Protection bit
  1418                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1419   30000D                     	org	3145741
  1420   30000D  40                 	db	64
  1421                           tosu	equ	0xFFF
  1422                           tosh	equ	0xFFE
  1423                           tosl	equ	0xFFD
  1424                           stkptr	equ	0xFFC
  1425                           pclatu	equ	0xFFB
  1426                           pclath	equ	0xFFA
  1427                           pcl	equ	0xFF9
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           indf0	equ	0xFEF
  1435                           postinc0	equ	0xFEE
  1436                           postdec0	equ	0xFED
  1437                           preinc0	equ	0xFEC
  1438                           plusw0	equ	0xFEB
  1439                           fsr0h	equ	0xFEA
  1440                           fsr0l	equ	0xFE9
  1441                           wreg	equ	0xFE8
  1442                           indf1	equ	0xFE7
  1443                           postinc1	equ	0xFE6
  1444                           postdec1	equ	0xFE5
  1445                           preinc1	equ	0xFE4
  1446                           plusw1	equ	0xFE3
  1447                           fsr1h	equ	0xFE2
  1448                           fsr1l	equ	0xFE1
  1449                           bsr	equ	0xFE0
  1450                           indf2	equ	0xFDF
  1451                           postinc2	equ	0xFDE
  1452                           postdec2	equ	0xFDD
  1453                           preinc2	equ	0xFDC
  1454                           plusw2	equ	0xFDB
  1455                           fsr2h	equ	0xFDA
  1456                           fsr2l	equ	0xFD9
  1457                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40      76
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lldiv
    _seleciona_7seg->___lwmod
    ___lwmod->___lwdiv
    ___lldiv->___lmul

Critical Paths under _int_TMR0 in COMRAM

    _int_TMR0->_escreve_7seg

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_TMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_TMR0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_TMR0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2081
                                             38 COMRAM     2     2      0
                            ___lldiv
                             ___lmul
                     _seleciona_7seg
 ---------------------------------------------------------------------------------
 (1) _seleciona_7seg                                       2     0      2    1397
                                             25 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                             20 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                             13 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                             13 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                             25 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int_TMR0                                             7     7      0     416
                                              6 COMRAM     7     7      0
                       _escreve_7seg
 ---------------------------------------------------------------------------------
 (4) _escreve_7seg                                         6     4      2     416
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _seleciona_7seg
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _int_TMR0 (ROOT)
   _escreve_7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     28      4C       1       60.3%
BITBIGSFRlhllh      29      0       0      19        0.0%
BITBIGSFRlhh        1A      0       0      17        0.0%
BITBIGSFRlhlhh      10      0       0      18        0.0%
BITBIGSFRlhlll      10      0       0      20        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRll          3      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      22        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 28 15:27:35 2022

                     l73 037A                       l81 01AE                       l79 01A0  
                     l98 0448                       l99 0458                       bsr 000FE0  
                    l121 02E0                      l114 02D0                      l910 039E  
                    l920 03D8                      l912 03A6                      l904 037C  
                    l585 03EE                      l922 03DA                      l914 03B4  
                    l578 03E6                      l906 0384                      l930 0474  
                    l595 04BC                      l924 03E0                      l916 03BA  
                    l908 0396                      l940 04AE                      l932 047C  
                    l588 04B4                      l918 03D0                      l934 048A  
                    l926 045A                      l960 040E                      l936 04A0  
                    l928 046C                      l970 0264                      l962 041E  
                    l938 04A8                      l954 02E2                      l980 02AE  
                    l972 026C                      l964 0428                      l956 03F0  
                    l982 02BE                      l974 0278                      l966 023E  
                    l958 0400                      l984 02C0                      l976 0286  
                    l968 024E                      l986 02CA                      l978 0290  
                    u200 046C                      u201 0468                      u210 048A  
                    u211 0486                      u220 04A0                      u221 049C  
                    u320 01AE                      u321 01AA                      u250 040E  
                    u170 0396                      u251 040A                      u171 0392  
                    u260 0448                      u180 03B4                      u261 0444  
                    u181 03B0                      u270 0264                      u190 03D0  
                    u271 0260                      u191 03CC                      u280 0286  
                    u281 0282                      u337 022A                      u290 02AE  
                    u291 02AA                      _adc 0041                      wreg 000FE8  
                   l1040 0214                     l1032 0176                     l1042 0220  
                   l1034 019E                     l1036 01B4                     l1038 01C0  
                   i1l70 0514                     i1l63 015A                     i1l67 0510  
                   i1l68 04EA                     i1l69 04EC                     _TMR0 000FD6  
                   _dig1 0049                     _dig2 0047                     _dig3 0045  
                   _dig4 0043                     _main 0176                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 004D  
                   _volt 003D                     start 0172             ___param_bank 000000  
                  ?_main 0001          __end_of___lldiv 02E2                    _T0CON 000FD5  
          ?_escreve_7seg 0001          __end_of___lwdiv 03F0          __end_of___lwmod 04BE  
                  i1l950 04E4                    i1l942 04BE                    i1l952 04F0  
                  i1l948 04C6                    i1l990 003C                    i1l992 0040  
                  i1l994 0056                    i1l996 0062                    i1l988 002E  
                  i1l998 0066                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISD 000F95                    _TRISE 000F96      ___lmul@multiplicand 0012  
                  tablat 000FF5                    ttemp5 004E                    ttemp6 0051  
                  ttemp7 0055                    status 000FD8                    wtemp8 004E  
        __initialization 0516             __end_of_main 023E        seleciona_7seg@dig 001A  
         ??_escreve_7seg 0003                   ??_main 0027            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   i1l1000 008E  
                 i1l1010 00C4                   i1l1002 0096                   i1l1012 00E2  
                 i1l1004 009A                   i1l1014 00EA                   i1l1006 00B8  
                 i1l1022 0114                   i1l1016 00EE                   i1l1008 00C0  
                 i1l1024 0150                   i1l1026 0158                   i1l1018 010C  
                 i1l1048 012A                   _INTCON 000FF2                   _TMR0IF 007F92  
                 ___lmul 03F0                ??___lldiv 0022         __end_of_int_TMR0 0172  
                 _digito 0029                ??___lwdiv 0012                ??___lwmod 0019  
                 clear_0 053C                   isa$std 000001             __pdataCOMRAM 0029  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
         _seleciona_7seg 02E2               __accesstop 0080  __end_of__initialization 0542  
          ___rparam_used 000001           __pcstackCOMRAM 0001   __end_of_seleciona_7seg 037C  
   __end_of_escreve_7seg 0516                  ?___lmul 000E           ___lmul@product 0016  
        ?_seleciona_7seg 001A                  i1u30_20 003C                  i1u30_21 0038  
                i1u23_20 04E4                  i1u31_20 0056                  i1u23_21 04E0  
                i1u31_21 0052                  i1u24_20 0510                  i1u24_21 050C  
              ?_int_TMR0 0001                  __Hparam 0000                  __Lparam 0000  
                ___lldiv 023E                  ___lwdiv 037C                  ___lwmod 045A  
                __pcinit 0516                  __ramtop 0600                  __ptext0 0176  
                __ptext1 02E2                  __ptext2 045A                  __ptext3 037C  
                __ptext4 03F0                  __ptext5 023E                  __ptext7 04BE  
   end_of_initialization 0542               _sel_digito 004B               ??_int_TMR0 0007  
          __Lmediumconst 0000          ___lldiv@divisor 001E          ___lldiv@counter 0026  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _PORTEbits 000F84            escreve_7seg@j 0005  
         __end_of___lmul 045A            __pidataCOMRAM 0550             _escreve_7seg 04BE  
    start_initialization 0516                 ??___lmul 0016         ??_seleciona_7seg 001C  
            __pbssCOMRAM 003D         ___lwdiv@dividend 000E                 ?___lldiv 001A  
               ?___lwdiv 000E                 ?___lwmod 0015              __pintcodelo 0018  
       ___lwdiv@quotient 0012               _ADCON0bits 000FC2        ___lmul@multiplier 000E  
              copy_data0 052A                 __Hrparam 0000                 __Lrparam 0000  
        ___lwdiv@divisor 0010          ___lwdiv@counter 0014                 _int_TMR0 0018  
               isa$xinst 000000                 int$flags 004D                 intlevel1 0000  
       ___lwmod@dividend 0015         ___lldiv@dividend 001A         ___lldiv@quotient 0022  
        ___lwmod@divisor 0017          ___lwmod@counter 0019          escreve_7seg@num 0001  
