

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 28 15:23:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000000                     
    56                           	psect	idataCOMRAM
    57   0079B4                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _digito
    61   0079B4  003F               	dw	63
    62   0079B6  0006               	dw	6
    63   0079B8  005B               	dw	91
    64   0079BA  004F               	dw	79
    65   0079BC  0066               	dw	102
    66   0079BE  006D               	dw	109
    67   0079C0  007D               	dw	125
    68   0079C2  0007               	dw	7
    69   0079C4  007F               	dw	127
    70   0079C6  006F               	dw	111
    71   000000                     _PORTE	set	3972
    72   000000                     _PORTD	set	3971
    73   000000                     _PORTEbits	set	3972
    74   000000                     _TRISD	set	3989
    75   000000                     _TRISE	set	3990
    76   000000                     _ADCON1	set	4033
    77                           
    78                           ; #config settings
    79                           
    80                           	psect	cinit
    81   0079C8                     __pcinit:
    82                           	callstack 0
    83   0079C8                     start_initialization:
    84                           	callstack 0
    85   0079C8                     __initialization:
    86                           	callstack 0
    87                           
    88                           ; Initialize objects allocated to COMRAM (20 bytes)
    89                           ; load TBLPTR registers with __pidataCOMRAM
    90   0079C8  0EB4               	movlw	low __pidataCOMRAM
    91   0079CA  6EF6               	movwf	tblptrl,c
    92   0079CC  0E79               	movlw	high __pidataCOMRAM
    93   0079CE  6EF7               	movwf	tblptrh,c
    94   0079D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    95   0079D2  6EF8               	movwf	tblptru,c
    96   0079D4  EE00  F001         	lfsr	0,__pdataCOMRAM
    97   0079D8  EE10 F014          	lfsr	1,20
    98   0079DC                     copy_data0:
    99   0079DC  0009               	tblrd		*+
   100   0079DE  CFF5 FFEE          	movff	tablat,postinc0
   101   0079E2  50E5               	movf	postdec1,w,c
   102   0079E4  50E1               	movf	fsr1l,w,c
   103   0079E6  E1FA               	bnz	copy_data0
   104                           
   105                           ; Clear objects allocated to COMRAM (12 bytes)
   106   0079E8  EE00  F024         	lfsr	0,__pbssCOMRAM
   107   0079EC  0E0C               	movlw	12
   108   0079EE                     clear_0:
   109   0079EE  6AEE               	clrf	postinc0,c
   110   0079F0  06E8               	decf	wreg,f,c
   111   0079F2  E1FD               	bnz	clear_0
   112   0079F4                     end_of_initialization:
   113                           	callstack 0
   114   0079F4                     __end_of__initialization:
   115                           	callstack 0
   116   0079F4  0100               	movlb	0
   117   0079F6  EF5B  F03D         	goto	_main	;jump to C main() function
   118                           
   119                           	psect	bssCOMRAM
   120   000024                     __pbssCOMRAM:
   121                           	callstack 0
   122   000024                     _dig4:
   123                           	callstack 0
   124   000024                     	ds	2
   125   000026                     _dig3:
   126                           	callstack 0
   127   000026                     	ds	2
   128   000028                     _dig2:
   129                           	callstack 0
   130   000028                     	ds	2
   131   00002A                     _dig1:
   132                           	callstack 0
   133   00002A                     	ds	2
   134   00002C                     _conta:
   135                           	callstack 0
   136   00002C                     	ds	2
   137   00002E                     _tempo:
   138                           	callstack 0
   139   00002E                     	ds	2
   140                           
   141                           	psect	dataCOMRAM
   142   000001                     __pdataCOMRAM:
   143                           	callstack 0
   144   000001                     _digito:
   145                           	callstack 0
   146   000001                     	ds	20
   147                           
   148                           	psect	cstackCOMRAM
   149   000015                     __pcstackCOMRAM:
   150                           	callstack 0
   151   000015                     ?___lwdiv:
   152                           	callstack 0
   153   000015                     escreve_7seg@num:
   154                           	callstack 0
   155   000015                     ___lwdiv@dividend:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x0
   159   000015                     	ds	2
   160   000017                     ??_escreve_7seg:
   161   000017                     ___lwdiv@divisor:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x2
   165   000017                     	ds	2
   166   000019                     escreve_7seg@j:
   167                           	callstack 0
   168   000019                     ___lwdiv@quotient:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x4
   172   000019                     	ds	2
   173   00001B                     ___lwdiv@counter:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x6
   177   00001B                     	ds	1
   178   00001C                     ?___lwmod:
   179                           	callstack 0
   180   00001C                     ___lwmod@dividend:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x7
   184   00001C                     	ds	2
   185   00001E                     ___lwmod@divisor:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x9
   189   00001E                     	ds	2
   190   000020                     ___lwmod@counter:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0xB
   194   000020                     	ds	1
   195   000021                     seleciona_7seg@dig:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0xC
   199   000021                     	ds	2
   200   000023                     ??_seleciona_7seg:
   201                           
   202                           ; 1 bytes @ 0xE
   203   000023                     	ds	1
   204   000024                     
   205                           ; 1 bytes @ 0xF
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 125 in file "EX27.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   225 ;;      Params:         0       0       0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0       0       0
   228 ;;      Totals:         0       0       0       0       0       0       0
   229 ;;Total ram usage:        0 bytes
   230 ;; Hardware stack levels required when called: 2
   231 ;; This function calls:
   232 ;;		_seleciona_7seg
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text0
   239   007AB6                     __ptext0:
   240                           	callstack 0
   241   007AB6                     _main:
   242                           	callstack 29
   243   007AB6                     
   244                           ;EX27.c: 127:     ADCON1 = 0x0F;
   245   007AB6  0E0F               	movlw	15
   246   007AB8  6EC1               	movwf	193,c	;volatile
   247                           
   248                           ;EX27.c: 128:     TRISE = 0b00000000;
   249   007ABA  0E00               	movlw	0
   250   007ABC  6E96               	movwf	150,c	;volatile
   251                           
   252                           ;EX27.c: 129:     PORTE = 0b00000000;
   253   007ABE  0E00               	movlw	0
   254   007AC0  6E84               	movwf	132,c	;volatile
   255                           
   256                           ;EX27.c: 131:     TRISD = 0b00000000;
   257   007AC2  0E00               	movlw	0
   258   007AC4  6E95               	movwf	149,c	;volatile
   259   007AC6                     l908:
   260                           
   261                           ;EX27.c: 134:     {;EX27.c: 135:         tempo++;
   262   007AC6  4A2E               	infsnz	_tempo^0,f,c
   263   007AC8  2A2F               	incf	(_tempo+1)^0,f,c
   264   007ACA                     
   265                           ;EX27.c: 137:         if(tempo >= 50)
   266   007ACA  502F               	movf	(_tempo+1)^0,w,c
   267   007ACC  E109               	bnz	u190
   268   007ACE  0E32               	movlw	50
   269   007AD0  5C2E               	subwf	_tempo^0,w,c
   270   007AD2  A0D8               	btfss	status,0,c
   271   007AD4  EF6E  F03D         	goto	u191
   272   007AD8  EF70  F03D         	goto	u190
   273   007ADC                     u191:
   274   007ADC  EF85  F03D         	goto	l918
   275   007AE0                     u190:
   276   007AE0                     
   277                           ;EX27.c: 138:         {;EX27.c: 139:             conta++;
   278   007AE0  4A2C               	infsnz	_conta^0,f,c
   279   007AE2  2A2D               	incf	(_conta+1)^0,f,c
   280   007AE4                     
   281                           ;EX27.c: 140:             if(conta > 9999 )
   282   007AE4  0E10               	movlw	16
   283   007AE6  5C2C               	subwf	_conta^0,w,c
   284   007AE8  0E27               	movlw	39
   285   007AEA  582D               	subwfb	(_conta+1)^0,w,c
   286   007AEC  A0D8               	btfss	status,0,c
   287   007AEE  EF7B  F03D         	goto	u201
   288   007AF2  EF7D  F03D         	goto	u200
   289   007AF6                     u201:
   290   007AF6  EF81  F03D         	goto	l45
   291   007AFA                     u200:
   292   007AFA                     
   293                           ;EX27.c: 141:   conta = 0;
   294   007AFA  0E00               	movlw	0
   295   007AFC  6E2D               	movwf	(_conta+1)^0,c
   296   007AFE  0E00               	movlw	0
   297   007B00  6E2C               	movwf	_conta^0,c
   298   007B02                     l45:
   299                           
   300                           ;EX27.c: 142:             tempo = 0;
   301   007B02  0E00               	movlw	0
   302   007B04  6E2F               	movwf	(_tempo+1)^0,c
   303   007B06  0E00               	movlw	0
   304   007B08  6E2E               	movwf	_tempo^0,c
   305   007B0A                     l918:
   306                           
   307                           ;EX27.c: 144:             seleciona_7seg(conta);
   308   007B0A  C02C  F021         	movff	_conta,seleciona_7seg@dig
   309   007B0E  C02D  F022         	movff	_conta+1,seleciona_7seg@dig+1
   310   007B12  ECC9  F03D         	call	_seleciona_7seg	;wreg free
   311   007B16  EF63  F03D         	goto	l908
   312   007B1A  EF00  F000         	goto	start
   313   007B1E                     __end_of_main:
   314                           	callstack 0
   315                           
   316 ;; *************** function _seleciona_7seg *****************
   317 ;; Defined at:
   318 ;;		line 48 in file "EX27.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;  dig             2   12[COMRAM] unsigned int 
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   332 ;;      Params:         2       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0
   334 ;;      Temps:          1       0       0       0       0       0       0
   335 ;;      Totals:         3       0       0       0       0       0       0
   336 ;;Total ram usage:        3 bytes
   337 ;; Hardware stack levels used: 1
   338 ;; Hardware stack levels required when called: 1
   339 ;; This function calls:
   340 ;;		___lwdiv
   341 ;;		___lwmod
   342 ;;		_escreve_7seg
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text1
   349   007B92                     __ptext1:
   350                           	callstack 0
   351   007B92                     _seleciona_7seg:
   352                           	callstack 29
   353   007B92                     
   354                           ;EX27.c: 48: void seleciona_7seg(unsigned int dig);EX27.c: 49: {;EX27.c: 50:     dig1 = 
      +                          (dig / 1000);
   355   007B92  C021  F015         	movff	seleciona_7seg@dig,___lwdiv@dividend
   356   007B96  C022  F016         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   357   007B9A  0E03               	movlw	3
   358   007B9C  6E18               	movwf	(___lwdiv@divisor+1)^0,c
   359   007B9E  0EE8               	movlw	232
   360   007BA0  6E17               	movwf	___lwdiv@divisor^0,c
   361   007BA2  EC8F  F03D         	call	___lwdiv	;wreg free
   362   007BA6  C015  F02A         	movff	?___lwdiv,_dig1
   363   007BAA  C016  F02B         	movff	?___lwdiv+1,_dig1+1
   364                           
   365                           ;EX27.c: 52:     dig2 = (dig / 100) % 10;
   366   007BAE  0E00               	movlw	0
   367   007BB0  6E18               	movwf	(___lwdiv@divisor+1)^0,c
   368   007BB2  0E64               	movlw	100
   369   007BB4  6E17               	movwf	___lwdiv@divisor^0,c
   370   007BB6  C021  F015         	movff	seleciona_7seg@dig,___lwdiv@dividend
   371   007BBA  C022  F016         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   372   007BBE  EC8F  F03D         	call	___lwdiv	;wreg free
   373   007BC2  C015  F01C         	movff	?___lwdiv,___lwmod@dividend
   374   007BC6  C016  F01D         	movff	?___lwdiv+1,___lwmod@dividend+1
   375   007BCA  0E00               	movlw	0
   376   007BCC  6E1F               	movwf	(___lwmod@divisor+1)^0,c
   377   007BCE  0E0A               	movlw	10
   378   007BD0  6E1E               	movwf	___lwmod@divisor^0,c
   379   007BD2  EC29  F03D         	call	___lwmod	;wreg free
   380   007BD6  C01C  F028         	movff	?___lwmod,_dig2
   381   007BDA  C01D  F029         	movff	?___lwmod+1,_dig2+1
   382                           
   383                           ;EX27.c: 54:     dig3 = (dig / 10) % 10;
   384   007BDE  0E00               	movlw	0
   385   007BE0  6E18               	movwf	(___lwdiv@divisor+1)^0,c
   386   007BE2  0E0A               	movlw	10
   387   007BE4  6E17               	movwf	___lwdiv@divisor^0,c
   388   007BE6  C021  F015         	movff	seleciona_7seg@dig,___lwdiv@dividend
   389   007BEA  C022  F016         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   390   007BEE  EC8F  F03D         	call	___lwdiv	;wreg free
   391   007BF2  C015  F01C         	movff	?___lwdiv,___lwmod@dividend
   392   007BF6  C016  F01D         	movff	?___lwdiv+1,___lwmod@dividend+1
   393   007BFA  0E00               	movlw	0
   394   007BFC  6E1F               	movwf	(___lwmod@divisor+1)^0,c
   395   007BFE  0E0A               	movlw	10
   396   007C00  6E1E               	movwf	___lwmod@divisor^0,c
   397   007C02  EC29  F03D         	call	___lwmod	;wreg free
   398   007C06  C01C  F026         	movff	?___lwmod,_dig3
   399   007C0A  C01D  F027         	movff	?___lwmod+1,_dig3+1
   400                           
   401                           ;EX27.c: 56:     dig4 = dig % 10;
   402   007C0E  C021  F01C         	movff	seleciona_7seg@dig,___lwmod@dividend
   403   007C12  C022  F01D         	movff	seleciona_7seg@dig+1,___lwmod@dividend+1
   404   007C16  0E00               	movlw	0
   405   007C18  6E1F               	movwf	(___lwmod@divisor+1)^0,c
   406   007C1A  0E0A               	movlw	10
   407   007C1C  6E1E               	movwf	___lwmod@divisor^0,c
   408   007C1E  EC29  F03D         	call	___lwmod	;wreg free
   409   007C22  C01C  F024         	movff	?___lwmod,_dig4
   410   007C26  C01D  F025         	movff	?___lwmod+1,_dig4+1
   411   007C2A                     
   412                           ;EX27.c: 60:     PORTD = 0b00001111;
   413   007C2A  0E0F               	movlw	15
   414   007C2C  6E83               	movwf	131,c	;volatile
   415   007C2E                     
   416                           ;EX27.c: 64:     escreve_7seg(digito[dig1]);
   417   007C2E  90D8               	bcf	status,0,c
   418   007C30  342A               	rlcf	_dig1^0,w,c
   419   007C32  6ED9               	movwf	fsr2l,c
   420   007C34  342B               	rlcf	(_dig1+1)^0,w,c
   421   007C36  6EDA               	movwf	fsr2h,c
   422   007C38  0E01               	movlw	low _digito
   423   007C3A  26D9               	addwf	fsr2l,f,c
   424   007C3C  0E00               	movlw	high _digito
   425   007C3E  22DA               	addwfc	fsr2h,f,c
   426   007C40  CFDE F015          	movff	postinc2,escreve_7seg@num
   427   007C44  CFDD F016          	movff	postdec2,escreve_7seg@num+1
   428   007C48  ECFD  F03C         	call	_escreve_7seg	;wreg free
   429   007C4C                     
   430                           ;EX27.c: 69:     PORTD = 0b00001110;
   431   007C4C  0E0E               	movlw	14
   432   007C4E  6E83               	movwf	131,c	;volatile
   433   007C50                     
   434                           ;EX27.c: 75:     _delay((unsigned long)((5)*(8000000/4000.0)));
   435   007C50  0E0D               	movlw	13
   436   007C52  6E23               	movwf	??_seleciona_7seg^0,c
   437   007C54  0EFC               	movlw	252
   438   007C56                     u217:
   439   007C56  2EE8               	decfsz	wreg,f,c
   440   007C58  D7FE               	bra	u217
   441   007C5A  2E23               	decfsz	??_seleciona_7seg^0,f,c
   442   007C5C  D7FC               	bra	u217
   443   007C5E                     
   444                           ;EX27.c: 77:     PORTD = 0b00001111;
   445   007C5E  0E0F               	movlw	15
   446   007C60  6E83               	movwf	131,c	;volatile
   447   007C62                     
   448                           ;EX27.c: 81:     escreve_7seg(digito[dig2]);
   449   007C62  90D8               	bcf	status,0,c
   450   007C64  3428               	rlcf	_dig2^0,w,c
   451   007C66  6ED9               	movwf	fsr2l,c
   452   007C68  3429               	rlcf	(_dig2+1)^0,w,c
   453   007C6A  6EDA               	movwf	fsr2h,c
   454   007C6C  0E01               	movlw	low _digito
   455   007C6E  26D9               	addwf	fsr2l,f,c
   456   007C70  0E00               	movlw	high _digito
   457   007C72  22DA               	addwfc	fsr2h,f,c
   458   007C74  CFDE F015          	movff	postinc2,escreve_7seg@num
   459   007C78  CFDD F016          	movff	postdec2,escreve_7seg@num+1
   460   007C7C  ECFD  F03C         	call	_escreve_7seg	;wreg free
   461   007C80                     
   462                           ;EX27.c: 86:     PORTD = 0b00001101;
   463   007C80  0E0D               	movlw	13
   464   007C82  6E83               	movwf	131,c	;volatile
   465   007C84                     
   466                           ;EX27.c: 92:     _delay((unsigned long)((5)*(8000000/4000.0)));
   467   007C84  0E0D               	movlw	13
   468   007C86  6E23               	movwf	??_seleciona_7seg^0,c
   469   007C88  0EFC               	movlw	252
   470   007C8A                     u227:
   471   007C8A  2EE8               	decfsz	wreg,f,c
   472   007C8C  D7FE               	bra	u227
   473   007C8E  2E23               	decfsz	??_seleciona_7seg^0,f,c
   474   007C90  D7FC               	bra	u227
   475   007C92                     
   476                           ;EX27.c: 94:     PORTD = 0b00001111;
   477   007C92  0E0F               	movlw	15
   478   007C94  6E83               	movwf	131,c	;volatile
   479   007C96                     
   480                           ;EX27.c: 98:     escreve_7seg(digito[dig3]);
   481   007C96  90D8               	bcf	status,0,c
   482   007C98  3426               	rlcf	_dig3^0,w,c
   483   007C9A  6ED9               	movwf	fsr2l,c
   484   007C9C  3427               	rlcf	(_dig3+1)^0,w,c
   485   007C9E  6EDA               	movwf	fsr2h,c
   486   007CA0  0E01               	movlw	low _digito
   487   007CA2  26D9               	addwf	fsr2l,f,c
   488   007CA4  0E00               	movlw	high _digito
   489   007CA6  22DA               	addwfc	fsr2h,f,c
   490   007CA8  CFDE F015          	movff	postinc2,escreve_7seg@num
   491   007CAC  CFDD F016          	movff	postdec2,escreve_7seg@num+1
   492   007CB0  ECFD  F03C         	call	_escreve_7seg	;wreg free
   493   007CB4                     
   494                           ;EX27.c: 103:     PORTD = 0b00001011;
   495   007CB4  0E0B               	movlw	11
   496   007CB6  6E83               	movwf	131,c	;volatile
   497   007CB8                     
   498                           ;EX27.c: 109:     _delay((unsigned long)((5)*(8000000/4000.0)));
   499   007CB8  0E0D               	movlw	13
   500   007CBA  6E23               	movwf	??_seleciona_7seg^0,c
   501   007CBC  0EFC               	movlw	252
   502   007CBE                     u237:
   503   007CBE  2EE8               	decfsz	wreg,f,c
   504   007CC0  D7FE               	bra	u237
   505   007CC2  2E23               	decfsz	??_seleciona_7seg^0,f,c
   506   007CC4  D7FC               	bra	u237
   507   007CC6                     
   508                           ;EX27.c: 111:     PORTD = 0b00001111;
   509   007CC6  0E0F               	movlw	15
   510   007CC8  6E83               	movwf	131,c	;volatile
   511   007CCA                     
   512                           ;EX27.c: 115:     escreve_7seg(digito[dig4]);
   513   007CCA  90D8               	bcf	status,0,c
   514   007CCC  3424               	rlcf	_dig4^0,w,c
   515   007CCE  6ED9               	movwf	fsr2l,c
   516   007CD0  3425               	rlcf	(_dig4+1)^0,w,c
   517   007CD2  6EDA               	movwf	fsr2h,c
   518   007CD4  0E01               	movlw	low _digito
   519   007CD6  26D9               	addwf	fsr2l,f,c
   520   007CD8  0E00               	movlw	high _digito
   521   007CDA  22DA               	addwfc	fsr2h,f,c
   522   007CDC  CFDE F015          	movff	postinc2,escreve_7seg@num
   523   007CE0  CFDD F016          	movff	postdec2,escreve_7seg@num+1
   524   007CE4  ECFD  F03C         	call	_escreve_7seg	;wreg free
   525   007CE8                     
   526                           ;EX27.c: 119:     PORTD = 0b00000111;
   527   007CE8  0E07               	movlw	7
   528   007CEA  6E83               	movwf	131,c	;volatile
   529   007CEC                     
   530                           ;EX27.c: 122:     _delay((unsigned long)((5)*(8000000/4000.0)));
   531   007CEC  0E0D               	movlw	13
   532   007CEE  6E23               	movwf	??_seleciona_7seg^0,c
   533   007CF0  0EFC               	movlw	252
   534   007CF2                     u247:
   535   007CF2  2EE8               	decfsz	wreg,f,c
   536   007CF4  D7FE               	bra	u247
   537   007CF6  2E23               	decfsz	??_seleciona_7seg^0,f,c
   538   007CF8  D7FC               	bra	u247
   539   007CFA  0012               	return		;funcret
   540   007CFC                     __end_of_seleciona_7seg:
   541                           	callstack 0
   542                           
   543 ;; *************** function _escreve_7seg *****************
   544 ;; Defined at:
   545 ;;		line 25 in file "EX27.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;  num             2    0[COMRAM] unsigned int 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  j               2    4[COMRAM] unsigned int 
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, status,2, status,0
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   559 ;;      Params:         2       0       0       0       0       0       0
   560 ;;      Locals:         2       0       0       0       0       0       0
   561 ;;      Temps:          2       0       0       0       0       0       0
   562 ;;      Totals:         6       0       0       0       0       0       0
   563 ;;Total ram usage:        6 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_seleciona_7seg
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text2
   573   0079FA                     __ptext2:
   574                           	callstack 0
   575   0079FA                     _escreve_7seg:
   576                           	callstack 29
   577   0079FA                     
   578                           ;EX27.c: 25: void escreve_7seg(unsigned int num);EX27.c: 26: {;EX27.c: 27:     unsigned 
      +                          int j;;EX27.c: 29:     for(j = 0x80; j > 0; j = j >> 1)
   579   0079FA  0E00               	movlw	0
   580   0079FC  6E1A               	movwf	(escreve_7seg@j+1)^0,c
   581   0079FE  0E80               	movlw	128
   582   007A00  6E19               	movwf	escreve_7seg@j^0,c
   583   007A02                     l828:
   584                           
   585                           ;EX27.c: 30:     {;EX27.c: 33:         if(num & j)
   586   007A02  5019               	movf	escreve_7seg@j^0,w,c
   587   007A04  1415               	andwf	escreve_7seg@num^0,w,c
   588   007A06  6E17               	movwf	??_escreve_7seg^0,c
   589   007A08  501A               	movf	(escreve_7seg@j+1)^0,w,c
   590   007A0A  1416               	andwf	(escreve_7seg@num+1)^0,w,c
   591   007A0C  6E18               	movwf	(??_escreve_7seg+1)^0,c
   592   007A0E  5017               	movf	??_escreve_7seg^0,w,c
   593   007A10  1018               	iorwf	(??_escreve_7seg+1)^0,w,c
   594   007A12  B4D8               	btfsc	status,2,c
   595   007A14  EF0E  F03D         	goto	u111
   596   007A18  EF10  F03D         	goto	u110
   597   007A1C                     u111:
   598   007A1C  EF13  F03D         	goto	l33
   599   007A20                     u110:
   600   007A20                     
   601                           ;EX27.c: 34:             PORTEbits.RE0 = 1;
   602   007A20  8084               	bsf	132,0,c	;volatile
   603   007A22  EF14  F03D         	goto	l34
   604   007A26                     l33:
   605                           
   606                           ;EX27.c: 36:             PORTEbits.RE0 = 0;
   607   007A26  9084               	bcf	132,0,c	;volatile
   608   007A28                     l34:
   609                           
   610                           ;EX27.c: 39:         PORTEbits.RE1 = 1;
   611   007A28  8284               	bsf	132,1,c	;volatile
   612                           
   613                           ;EX27.c: 40:         PORTEbits.RE1 = 0;
   614   007A2A  9284               	bcf	132,1,c	;volatile
   615   007A2C                     
   616                           ;EX27.c: 41:     }
   617   007A2C  90D8               	bcf	status,0,c
   618   007A2E  301A               	rrcf	(escreve_7seg@j+1)^0,w,c
   619   007A30  6E17               	movwf	??_escreve_7seg^0,c
   620   007A32  3019               	rrcf	escreve_7seg@j^0,w,c
   621   007A34  6E19               	movwf	escreve_7seg@j^0,c
   622   007A36  C017  F01A         	movff	??_escreve_7seg,escreve_7seg@j+1
   623   007A3A  5019               	movf	escreve_7seg@j^0,w,c
   624   007A3C  101A               	iorwf	(escreve_7seg@j+1)^0,w,c
   625   007A3E  A4D8               	btfss	status,2,c
   626   007A40  EF24  F03D         	goto	u121
   627   007A44  EF26  F03D         	goto	u120
   628   007A48                     u121:
   629   007A48  EF01  F03D         	goto	l828
   630   007A4C                     u120:
   631   007A4C                     
   632                           ;EX27.c: 44:     PORTEbits.RE2 = 1;
   633   007A4C  8484               	bsf	132,2,c	;volatile
   634                           
   635                           ;EX27.c: 45:     PORTEbits.RE2 = 0;
   636   007A4E  9484               	bcf	132,2,c	;volatile
   637   007A50  0012               	return		;funcret
   638   007A52                     __end_of_escreve_7seg:
   639                           	callstack 0
   640                           
   641 ;; *************** function ___lwmod *****************
   642 ;; Defined at:
   643 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  dividend        2    7[COMRAM] unsigned int 
   646 ;;  divisor         2    9[COMRAM] unsigned int 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  counter         1   11[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  2    7[COMRAM] unsigned int 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   658 ;;      Params:         4       0       0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0
   661 ;;      Totals:         5       0       0       0       0       0       0
   662 ;;Total ram usage:        5 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_seleciona_7seg
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text3
   672   007A52                     __ptext3:
   673                           	callstack 0
   674   007A52                     ___lwmod:
   675                           	callstack 29
   676   007A52  501E               	movf	___lwmod@divisor^0,w,c
   677   007A54  101F               	iorwf	(___lwmod@divisor+1)^0,w,c
   678   007A56  B4D8               	btfsc	status,2,c
   679   007A58  EF30  F03D         	goto	u161
   680   007A5C  EF32  F03D         	goto	u160
   681   007A60                     u161:
   682   007A60  EF56  F03D         	goto	l552
   683   007A64                     u160:
   684   007A64  0E01               	movlw	1
   685   007A66  6E20               	movwf	___lwmod@counter^0,c
   686   007A68  EF3A  F03D         	goto	l862
   687   007A6C                     l860:
   688   007A6C  90D8               	bcf	status,0,c
   689   007A6E  361E               	rlcf	___lwmod@divisor^0,f,c
   690   007A70  361F               	rlcf	(___lwmod@divisor+1)^0,f,c
   691   007A72  2A20               	incf	___lwmod@counter^0,f,c
   692   007A74                     l862:
   693   007A74  AE1F               	btfss	(___lwmod@divisor+1)^0,7,c
   694   007A76  EF3F  F03D         	goto	u171
   695   007A7A  EF41  F03D         	goto	u170
   696   007A7E                     u171:
   697   007A7E  EF36  F03D         	goto	l860
   698   007A82                     u170:
   699   007A82                     l864:
   700   007A82  501E               	movf	___lwmod@divisor^0,w,c
   701   007A84  5C1C               	subwf	___lwmod@dividend^0,w,c
   702   007A86  501F               	movf	(___lwmod@divisor+1)^0,w,c
   703   007A88  581D               	subwfb	(___lwmod@dividend+1)^0,w,c
   704   007A8A  A0D8               	btfss	status,0,c
   705   007A8C  EF4A  F03D         	goto	u181
   706   007A90  EF4C  F03D         	goto	u180
   707   007A94                     u181:
   708   007A94  EF50  F03D         	goto	l868
   709   007A98                     u180:
   710   007A98  501E               	movf	___lwmod@divisor^0,w,c
   711   007A9A  5E1C               	subwf	___lwmod@dividend^0,f,c
   712   007A9C  501F               	movf	(___lwmod@divisor+1)^0,w,c
   713   007A9E  5A1D               	subwfb	(___lwmod@dividend+1)^0,f,c
   714   007AA0                     l868:
   715   007AA0  90D8               	bcf	status,0,c
   716   007AA2  321F               	rrcf	(___lwmod@divisor+1)^0,f,c
   717   007AA4  321E               	rrcf	___lwmod@divisor^0,f,c
   718   007AA6  2E20               	decfsz	___lwmod@counter^0,f,c
   719   007AA8  EF41  F03D         	goto	l864
   720   007AAC                     l552:
   721   007AAC  C01C  F01C         	movff	___lwmod@dividend,?___lwmod
   722   007AB0  C01D  F01D         	movff	___lwmod@dividend+1,?___lwmod+1
   723   007AB4  0012               	return		;funcret
   724   007AB6                     __end_of___lwmod:
   725                           	callstack 0
   726                           
   727 ;; *************** function ___lwdiv *****************
   728 ;; Defined at:
   729 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  dividend        2    0[COMRAM] unsigned int 
   732 ;;  divisor         2    2[COMRAM] unsigned int 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  quotient        2    4[COMRAM] unsigned int 
   735 ;;  counter         1    6[COMRAM] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  2    0[COMRAM] unsigned int 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   745 ;;      Params:         4       0       0       0       0       0       0
   746 ;;      Locals:         3       0       0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0
   748 ;;      Totals:         7       0       0       0       0       0       0
   749 ;;Total ram usage:        7 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_seleciona_7seg
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text4
   759   007B1E                     __ptext4:
   760                           	callstack 0
   761   007B1E                     ___lwdiv:
   762                           	callstack 29
   763   007B1E  0E00               	movlw	0
   764   007B20  6E1A               	movwf	(___lwdiv@quotient+1)^0,c
   765   007B22  0E00               	movlw	0
   766   007B24  6E19               	movwf	___lwdiv@quotient^0,c
   767   007B26  5017               	movf	___lwdiv@divisor^0,w,c
   768   007B28  1018               	iorwf	(___lwdiv@divisor+1)^0,w,c
   769   007B2A  B4D8               	btfsc	status,2,c
   770   007B2C  EF9A  F03D         	goto	u131
   771   007B30  EF9C  F03D         	goto	u130
   772   007B34                     u131:
   773   007B34  EFC4  F03D         	goto	l542
   774   007B38                     u130:
   775   007B38  0E01               	movlw	1
   776   007B3A  6E1B               	movwf	___lwdiv@counter^0,c
   777   007B3C  EFA4  F03D         	goto	l842
   778   007B40                     l840:
   779   007B40  90D8               	bcf	status,0,c
   780   007B42  3617               	rlcf	___lwdiv@divisor^0,f,c
   781   007B44  3618               	rlcf	(___lwdiv@divisor+1)^0,f,c
   782   007B46  2A1B               	incf	___lwdiv@counter^0,f,c
   783   007B48                     l842:
   784   007B48  AE18               	btfss	(___lwdiv@divisor+1)^0,7,c
   785   007B4A  EFA9  F03D         	goto	u141
   786   007B4E  EFAB  F03D         	goto	u140
   787   007B52                     u141:
   788   007B52  EFA0  F03D         	goto	l840
   789   007B56                     u140:
   790   007B56                     l844:
   791   007B56  90D8               	bcf	status,0,c
   792   007B58  3619               	rlcf	___lwdiv@quotient^0,f,c
   793   007B5A  361A               	rlcf	(___lwdiv@quotient+1)^0,f,c
   794   007B5C  5017               	movf	___lwdiv@divisor^0,w,c
   795   007B5E  5C15               	subwf	___lwdiv@dividend^0,w,c
   796   007B60  5018               	movf	(___lwdiv@divisor+1)^0,w,c
   797   007B62  5816               	subwfb	(___lwdiv@dividend+1)^0,w,c
   798   007B64  A0D8               	btfss	status,0,c
   799   007B66  EFB7  F03D         	goto	u151
   800   007B6A  EFB9  F03D         	goto	u150
   801   007B6E                     u151:
   802   007B6E  EFBE  F03D         	goto	l852
   803   007B72                     u150:
   804   007B72  5017               	movf	___lwdiv@divisor^0,w,c
   805   007B74  5E15               	subwf	___lwdiv@dividend^0,f,c
   806   007B76  5018               	movf	(___lwdiv@divisor+1)^0,w,c
   807   007B78  5A16               	subwfb	(___lwdiv@dividend+1)^0,f,c
   808   007B7A  8019               	bsf	___lwdiv@quotient^0,0,c
   809   007B7C                     l852:
   810   007B7C  90D8               	bcf	status,0,c
   811   007B7E  3218               	rrcf	(___lwdiv@divisor+1)^0,f,c
   812   007B80  3217               	rrcf	___lwdiv@divisor^0,f,c
   813   007B82  2E1B               	decfsz	___lwdiv@counter^0,f,c
   814   007B84  EFAB  F03D         	goto	l844
   815   007B88                     l542:
   816   007B88  C019  F015         	movff	___lwdiv@quotient,?___lwdiv
   817   007B8C  C01A  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
   818   007B90  0012               	return		;funcret
   819   007B92                     __end_of___lwdiv:
   820                           	callstack 0
   821   000000                     
   822                           	psect	rparam
   823   000000                     
   824                           	psect	idloc
   825                           
   826                           ;Config register IDLOC0 @ 0x200000
   827                           ;	unspecified, using default values
   828   200000                     	org	2097152
   829   200000  FF                 	db	255
   830                           
   831                           ;Config register IDLOC1 @ 0x200001
   832                           ;	unspecified, using default values
   833   200001                     	org	2097153
   834   200001  FF                 	db	255
   835                           
   836                           ;Config register IDLOC2 @ 0x200002
   837                           ;	unspecified, using default values
   838   200002                     	org	2097154
   839   200002  FF                 	db	255
   840                           
   841                           ;Config register IDLOC3 @ 0x200003
   842                           ;	unspecified, using default values
   843   200003                     	org	2097155
   844   200003  FF                 	db	255
   845                           
   846                           ;Config register IDLOC4 @ 0x200004
   847                           ;	unspecified, using default values
   848   200004                     	org	2097156
   849   200004  FF                 	db	255
   850                           
   851                           ;Config register IDLOC5 @ 0x200005
   852                           ;	unspecified, using default values
   853   200005                     	org	2097157
   854   200005  FF                 	db	255
   855                           
   856                           ;Config register IDLOC6 @ 0x200006
   857                           ;	unspecified, using default values
   858   200006                     	org	2097158
   859   200006  FF                 	db	255
   860                           
   861                           ;Config register IDLOC7 @ 0x200007
   862                           ;	unspecified, using default values
   863   200007                     	org	2097159
   864   200007  FF                 	db	255
   865                           
   866                           	psect	config
   867                           
   868                           ; Padding undefined space
   869   300000                     	org	3145728
   870   300000  FF                 	db	255
   871                           
   872                           ;Config register CONFIG1H @ 0x300001
   873                           ;	Oscillator Selection bits
   874                           ;	OSC = HS, HS oscillator
   875                           ;	Fail-Safe Clock Monitor Enable bit
   876                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   877                           ;	Internal/External Oscillator Switchover bit
   878                           ;	IESO = OFF, Oscillator Switchover mode disabled
   879   300001                     	org	3145729
   880   300001  02                 	db	2
   881                           
   882                           ;Config register CONFIG2L @ 0x300002
   883                           ;	Power-up Timer Enable bit
   884                           ;	PWRT = ON, PWRT enabled
   885                           ;	Brown-out Reset Enable bits
   886                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   887                           ;	Brown Out Reset Voltage bits
   888                           ;	BORV = 3, Minimum setting
   889   300002                     	org	3145730
   890   300002  18                 	db	24
   891                           
   892                           ;Config register CONFIG2H @ 0x300003
   893                           ;	Watchdog Timer Enable bit
   894                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   895                           ;	Watchdog Timer Postscale Select bits
   896                           ;	WDTPS = 32768, 1:32768
   897   300003                     	org	3145731
   898   300003  1E                 	db	30
   899                           
   900                           ; Padding undefined space
   901   300004                     	org	3145732
   902   300004  FF                 	db	255
   903                           
   904                           ;Config register CONFIG3H @ 0x300005
   905                           ;	CCP2 MUX bit
   906                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   907                           ;	PORTB A/D Enable bit
   908                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   909                           ;	Low-Power Timer1 Oscillator Enable bit
   910                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   911                           ;	MCLR Pin Enable bit
   912                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   913   300005                     	org	3145733
   914   300005  81                 	db	129
   915                           
   916                           ;Config register CONFIG4L @ 0x300006
   917                           ;	Stack Full/Underflow Reset Enable bit
   918                           ;	STVREN = ON, Stack full/underflow will cause Reset
   919                           ;	Single-Supply ICSP Enable bit
   920                           ;	LVP = OFF, Single-Supply ICSP disabled
   921                           ;	Extended Instruction Set Enable bit
   922                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   923                           ;	Background Debugger Enable bit
   924                           ;	DEBUG = 0x1, unprogrammed default
   925   300006                     	org	3145734
   926   300006  81                 	db	129
   927                           
   928                           ; Padding undefined space
   929   300007                     	org	3145735
   930   300007  FF                 	db	255
   931                           
   932                           ;Config register CONFIG5L @ 0x300008
   933                           ;	Code Protection bit
   934                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   935                           ;	Code Protection bit
   936                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   937                           ;	Code Protection bit
   938                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   939                           ;	Code Protection bit
   940                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   941   300008                     	org	3145736
   942   300008  0F                 	db	15
   943                           
   944                           ;Config register CONFIG5H @ 0x300009
   945                           ;	Boot Block Code Protection bit
   946                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   947                           ;	Data EEPROM Code Protection bit
   948                           ;	CPD = OFF, Data EEPROM not code-protected
   949   300009                     	org	3145737
   950   300009  C0                 	db	192
   951                           
   952                           ;Config register CONFIG6L @ 0x30000A
   953                           ;	Write Protection bit
   954                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   955                           ;	Write Protection bit
   956                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   957                           ;	Write Protection bit
   958                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   959                           ;	Write Protection bit
   960                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   961   30000A                     	org	3145738
   962   30000A  0F                 	db	15
   963                           
   964                           ;Config register CONFIG6H @ 0x30000B
   965                           ;	Configuration Register Write Protection bit
   966                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   967                           ;	Boot Block Write Protection bit
   968                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   969                           ;	Data EEPROM Write Protection bit
   970                           ;	WRTD = OFF, Data EEPROM not write-protected
   971   30000B                     	org	3145739
   972   30000B  E0                 	db	224
   973                           
   974                           ;Config register CONFIG7L @ 0x30000C
   975                           ;	Table Read Protection bit
   976                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   977                           ;	Table Read Protection bit
   978                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   979                           ;	Table Read Protection bit
   980                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   981                           ;	Table Read Protection bit
   982                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   983   30000C                     	org	3145740
   984   30000C  0F                 	db	15
   985                           
   986                           ;Config register CONFIG7H @ 0x30000D
   987                           ;	Boot Block Table Read Protection bit
   988                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   989   30000D                     	org	3145741
   990   30000D  40                 	db	64
   991                           tosu	equ	0xFFF
   992                           tosh	equ	0xFFE
   993                           tosl	equ	0xFFD
   994                           stkptr	equ	0xFFC
   995                           pclatu	equ	0xFFB
   996                           pclath	equ	0xFFA
   997                           pcl	equ	0xFF9
   998                           tblptru	equ	0xFF8
   999                           tblptrh	equ	0xFF7
  1000                           tblptrl	equ	0xFF6
  1001                           tablat	equ	0xFF5
  1002                           prodh	equ	0xFF4
  1003                           prodl	equ	0xFF3
  1004                           indf0	equ	0xFEF
  1005                           postinc0	equ	0xFEE
  1006                           postdec0	equ	0xFED
  1007                           preinc0	equ	0xFEC
  1008                           plusw0	equ	0xFEB
  1009                           fsr0h	equ	0xFEA
  1010                           fsr0l	equ	0xFE9
  1011                           wreg	equ	0xFE8
  1012                           indf1	equ	0xFE7
  1013                           postinc1	equ	0xFE6
  1014                           postdec1	equ	0xFE5
  1015                           preinc1	equ	0xFE4
  1016                           plusw1	equ	0xFE3
  1017                           fsr1h	equ	0xFE2
  1018                           fsr1l	equ	0xFE1
  1019                           bsr	equ	0xFE0
  1020                           indf2	equ	0xFDF
  1021                           postinc2	equ	0xFDE
  1022                           postdec2	equ	0xFDD
  1023                           preinc2	equ	0xFDC
  1024                           plusw2	equ	0xFDB
  1025                           fsr2h	equ	0xFDA
  1026                           fsr2l	equ	0xFD9
  1027                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_seleciona_7seg
    _seleciona_7seg->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1813
                     _seleciona_7seg
 ---------------------------------------------------------------------------------
 (1) _seleciona_7seg                                       3     1      2    1813
                                             12 COMRAM     3     1      2
                            ___lwdiv
                            ___lwmod
                       _escreve_7seg
 ---------------------------------------------------------------------------------
 (2) _escreve_7seg                                         6     4      2     416
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _seleciona_7seg
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _escreve_7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      F      2F       1       37.0%
BITBIGSFRhh         3E      0       0      16        0.0%
BITBIGSFRhlh        2A      0       0      17        0.0%
BITBIGSFRhll        10      0       0      18        0.0%
BITBIGSFRl           3      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      20        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 28 15:23:34 2022

                     l32 7A4C                       l33 7A26                       l34 7A28  
                     l35 7A50                       l45 7B02                       l38 7CFA  
                    l542 7B88                      l552 7AAC                      l900 7CCA  
                    l549 7B90                      l830 7A20                      l822 79FA  
                    l902 7CE8                      l910 7ACA                      l559 7AB4  
                    l840 7B40                      l832 7A2C                      l904 7CEC  
                    l912 7AE0                      l850 7B7A                      l842 7B48  
                    l834 7B1E                      l914 7AE4                      l906 7AB6  
                    l852 7B7C                      l844 7B56                      l836 7B26  
                    l860 7A6C                      l828 7A02                      l916 7AFA  
                    l908 7AC6                      l854 7B82                      l846 7B5C  
                    l838 7B38                      l870 7AA6                      l862 7A74  
                    l918 7B0A                      l848 7B72                      l864 7A82  
                    l856 7A52                      l880 7C50                      l872 7B92  
                    l866 7A98                      l858 7A64                      l890 7C92  
                    l882 7C5E                      l874 7C2A                      l868 7AA0  
                    l892 7C96                      l884 7C62                      l876 7C2E  
                    l894 7CB4                      l886 7C80                      l878 7C4C  
                    l896 7CB8                      l888 7C84                      l898 7CC6  
                    u110 7A20                      u111 7A1C                      u120 7A4C  
                    u200 7AFA                      u121 7A48                      u201 7AF6  
                    u130 7B38                      u131 7B34                      u140 7B56  
                    u141 7B52                      u150 7B72                      u151 7B6E  
                    u160 7A64                      u161 7A60                      u217 7C56  
                    u170 7A82                      u171 7A7E                      u227 7C8A  
                    u180 7A98                      u181 7A94                      u237 7CBE  
                    u190 7AE0                      u247 7CF2                      u191 7ADC  
                    wreg 000FE8                     _dig1 002A                     _dig2 0028  
                   _dig3 0026                     _dig4 0024                     _main 7AB6  
                   fsr2h 000FDA                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000                    ?_main 0015  
          ?_escreve_7seg 0015          __end_of___lwdiv 7B92          __end_of___lwmod 7AB6  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISD 000F95  
                  _TRISE 000F96                    _conta 002C                    _tempo 002E  
                  tablat 000FF5                    status 000FD8          __initialization 79C8  
           __end_of_main 7B1E        seleciona_7seg@dig 0021           ??_escreve_7seg 0017  
                 ??_main 0024            __activetblptr 000000                   _ADCON1 000FC1  
                 _digito 0001                ??___lwdiv 0019                ??___lwmod 0020  
                 clear_0 79EE                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
         _seleciona_7seg 7B92               __accesstop 0080  __end_of__initialization 79F4  
          ___rparam_used 000001           __pcstackCOMRAM 0015   __end_of_seleciona_7seg 7CFC  
   __end_of_escreve_7seg 7A52          ?_seleciona_7seg 0021                  __Hparam 0000  
                __Lparam 0000                  ___lwdiv 7B1E                  ___lwmod 7A52  
                __pcinit 79C8                  __ramtop 0600                  __ptext0 7AB6  
                __ptext1 7B92                  __ptext2 79FA                  __ptext3 7A52  
                __ptext4 7B1E     end_of_initialization 79F4                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
              _PORTEbits 000F84            escreve_7seg@j 0019            __pidataCOMRAM 79B4  
           _escreve_7seg 79FA      start_initialization 79C8         ??_seleciona_7seg 0023  
            __pbssCOMRAM 0024         ___lwdiv@dividend 0015                 ?___lwdiv 0015  
               ?___lwmod 001C         ___lwdiv@quotient 0019                copy_data0 79DC  
               __Hrparam 0000                 __Lrparam 0000          ___lwdiv@divisor 0017  
        ___lwdiv@counter 001B                 isa$xinst 000000         ___lwmod@dividend 001C  
        ___lwmod@divisor 001E          ___lwmod@counter 0020          escreve_7seg@num 0015  
