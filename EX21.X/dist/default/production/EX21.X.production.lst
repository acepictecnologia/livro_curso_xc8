

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 10:53:07 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55  0000                     
    56                           ; Version 2.05
    57                           ; Generated 20/12/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4520 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     _PORTDbits	set	3971
    91  0000                     _PORTEbits	set	3972
    92  0000                     _PORTD	set	3971
    93  0000                     _TRISEbits	set	3990
    94  0000                     _TRISD	set	3989
    95  0000                     _ADRESL	set	4035
    96  0000                     _ADRESH	set	4036
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADCON2	set	4032
    99  0000                     _ADCON1	set	4033
   100  0000                     _ADCON0	set	4034
   101                           
   102                           	psect	smallconst
   103  000600                     __psmallconst:
   104                           	opt callstack 0
   105  000600  00                 	db	0
   106  000601                     STR_3:
   107  000601  25                 	db	37
   108  000602  30                 	db	48	;'0'
   109  000603  2E                 	db	46
   110  000604  31                 	db	49	;'1'
   111  000605  66                 	db	102	;'f'
   112  000606  20                 	db	32
   113  000607  25                 	db	37
   114  000608  63                 	db	99	;'c'
   115  000609  43                 	db	67	;'C'
   116  00060A  00                 	db	0
   117  00060B                     STR_4:
   118  00060B  25                 	db	37
   119  00060C  30                 	db	48	;'0'
   120  00060D  34                 	db	52	;'4'
   121  00060E  6C                 	db	108	;'l'
   122  00060F  75                 	db	117	;'u'
   123  000610  20                 	db	32
   124  000611  6D                 	db	109	;'m'
   125  000612  56                 	db	86	;'V'
   126  000613  00                 	db	0
   127  000614                     STR_1:
   128  000614  54                 	db	84	;'T'
   129  000615  65                 	db	101	;'e'
   130  000616  6D                 	db	109	;'m'
   131  000617  70                 	db	112	;'p'
   132  000618  3A                 	db	58	;':'
   133  000619  00                 	db	0
   134  00061A                     STR_2:
   135  00061A  56                 	db	86	;'V'
   136  00061B  6F                 	db	111	;'o'
   137  00061C  6C                 	db	108	;'l'
   138  00061D  74                 	db	116	;'t'
   139  00061E  3A                 	db	58	;':'
   140  00061F  00                 	db	0
   141  000620                     STR_5:
   142  000620  49                 	db	73	;'I'
   143  000621  4E                 	db	78	;'N'
   144  000622  46                 	db	70	;'F'
   145  000623  00                 	db	0
   146  000624                     STR_9:
   147  000624  4E                 	db	78	;'N'
   148  000625  41                 	db	65	;'A'
   149  000626  4E                 	db	78	;'N'
   150  000627  00                 	db	0
   151  000628                     STR_6:
   152  000628  69                 	db	105	;'i'
   153  000629  6E                 	db	110	;'n'
   154  00062A  66                 	db	102	;'f'
   155  00062B  00                 	db	0
   156  00062C                     STR_10:
   157  00062C  6E                 	db	110	;'n'
   158  00062D  61                 	db	97	;'a'
   159  00062E  6E                 	db	110	;'n'
   160  00062F  00                 	db	0
   161  000630                     STR_13:
   162  000630  6C                 	db	108	;'l'
   163  000631  66                 	db	102	;'f'
   164  000632  00                 	db	0
   165  000633                     STR_18:
   166  000633  6C                 	db	108	;'l'
   167  000634  75                 	db	117	;'u'
   168  000635  00                 	db	0
   169  0000                     
   170                           ; #config settings
   171  000636  00                 	db	0	; dummy byte at the end
   172  0000                     
   173                           	psect	cinit
   174  0034D4                     __pcinit:
   175                           	opt callstack 0
   176  0034D4                     start_initialization:
   177                           	opt callstack 0
   178  0034D4                     __initialization:
   179                           	opt callstack 0
   180                           
   181                           ; Clear objects allocated to BANK1 (96 bytes)
   182  0034D4  EE01  F000         	lfsr	0,__pbssBANK1
   183  0034D8  0E60               	movlw	96
   184  0034DA                     clear_0:
   185  0034DA  6AEE               	clrf	postinc0,c
   186  0034DC  06E8               	decf	wreg,f,c
   187  0034DE  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (26 bytes)
   190  0034E0  EE00  F0DC         	lfsr	0,__pbssBANK0
   191  0034E4  0E1A               	movlw	26
   192  0034E6                     clear_1:
   193  0034E6  6AEE               	clrf	postinc0,c
   194  0034E8  06E8               	decf	wreg,f,c
   195  0034EA  E1FD               	bnz	clear_1
   196  0034EC                     end_of_initialization:
   197                           	opt callstack 0
   198  0034EC                     __end_of__initialization:
   199                           	opt callstack 0
   200  0034EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   201  0034EE  6EF8               	movwf	tblptru,c
   202  0034F0  0100               	movlb	0
   203  0034F2  EF90  F00F         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssBANK0
   206  0000DC                     __pbssBANK0:
   207                           	opt callstack 0
   208  0000DC                     floorf@F524:
   209                           	opt callstack 0
   210  0000DC                     	ds	4
   211  0000E0                     ___fpclassifyf@F463:
   212                           	opt callstack 0
   213  0000E0                     	ds	4
   214  0000E4                     _temp:
   215                           	opt callstack 0
   216  0000E4                     	ds	4
   217  0000E8                     _volt:
   218                           	opt callstack 0
   219  0000E8                     	ds	4
   220  0000EC                     _nout:
   221                           	opt callstack 0
   222  0000EC                     	ds	2
   223  0000EE                     _width:
   224                           	opt callstack 0
   225  0000EE                     	ds	2
   226  0000F0                     _prec:
   227                           	opt callstack 0
   228  0000F0                     	ds	2
   229  0000F2                     _flags:
   230                           	opt callstack 0
   231  0000F2                     	ds	2
   232  0000F4                     _adc:
   233                           	opt callstack 0
   234  0000F4                     	ds	2
   235                           
   236                           	psect	bssBANK1
   237  000100                     __pbssBANK1:
   238                           	opt callstack 0
   239  000100                     _dbuf:
   240                           	opt callstack 0
   241  000100                     	ds	80
   242  000150                     _bufferLCD:
   243                           	opt callstack 0
   244  000150                     	ds	16
   245                           
   246                           	psect	cstackBANK0
   247  000080                     __pcstackBANK0:
   248                           	opt callstack 0
   249  000080                     efgtoa@ou:
   250                           	opt callstack 0
   251                           
   252                           ; 4 bytes @ 0x0
   253  000080                     	ds	4
   254  000084                     _efgtoa$474:
   255                           	opt callstack 0
   256                           
   257                           ; 2 bytes @ 0x4
   258  000084                     	ds	2
   259  000086                     _efgtoa$475:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x6
   263  000086                     	ds	2
   264  000088                     _efgtoa$479:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x8
   268  000088                     	ds	2
   269  00008A                     _efgtoa$483:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0xA
   273  00008A                     	ds	2
   274  00008C                     _efgtoa$484:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0xC
   278  00008C                     	ds	2
   279  00008E                     _efgtoa$485:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0xE
   283  00008E                     	ds	2
   284  000090                     efgtoa@t:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0x10
   288  000090                     	ds	2
   289  000092                     efgtoa@pp:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x12
   293  000092                     	ds	2
   294  000094                     efgtoa@m:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x14
   298  000094                     	ds	2
   299  000096                     efgtoa@ne:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x16
   303  000096                     	ds	2
   304  000098                     efgtoa@d:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0x18
   308  000098                     	ds	2
   309  00009A                     efgtoa@sign:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x1A
   313  00009A                     	ds	2
   314  00009C                     efgtoa@p:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x1C
   318  00009C                     	ds	2
   319  00009E                     efgtoa@nmode:
   320                           	opt callstack 0
   321                           
   322                           ; 1 bytes @ 0x1E
   323  00009E                     	ds	1
   324  00009F                     efgtoa@w:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0x1F
   328  00009F                     	ds	2
   329  0000A1                     efgtoa@mode:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0x21
   333  0000A1                     	ds	1
   334  0000A2                     efgtoa@h:
   335                           	opt callstack 0
   336                           
   337                           ; 4 bytes @ 0x22
   338  0000A2                     	ds	4
   339  0000A6                     efgtoa@l:
   340                           	opt callstack 0
   341                           
   342                           ; 4 bytes @ 0x26
   343  0000A6                     	ds	4
   344  0000AA                     efgtoa@i:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x2A
   348  0000AA                     	ds	2
   349  0000AC                     efgtoa@g:
   350                           	opt callstack 0
   351                           
   352                           ; 4 bytes @ 0x2C
   353  0000AC                     	ds	4
   354  0000B0                     efgtoa@e:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0x30
   358  0000B0                     	ds	2
   359  0000B2                     efgtoa@n:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x32
   363  0000B2                     	ds	2
   364  0000B4                     efgtoa@u:
   365                           	opt callstack 0
   366                           
   367                           ; 4 bytes @ 0x34
   368  0000B4                     	ds	4
   369  0000B8                     vfpfcnvrt@done:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x38
   373  0000B8                     	ds	2
   374  0000BA                     _vfpfcnvrt$506:
   375                           	opt callstack 0
   376                           
   377                           ; 2 bytes @ 0x3A
   378  0000BA                     	ds	2
   379  0000BC                     _vfpfcnvrt$507:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x3C
   383  0000BC                     	ds	2
   384  0000BE                     _vfpfcnvrt$512:
   385                           	opt callstack 0
   386                           
   387                           ; 2 bytes @ 0x3E
   388  0000BE                     	ds	2
   389  0000C0                     vfpfcnvrt@llu:
   390                           	opt callstack 0
   391                           
   392                           ; 8 bytes @ 0x40
   393  0000C0                     	ds	8
   394  0000C8                     vfpfcnvrt@f:
   395                           	opt callstack 0
   396                           
   397                           ; 4 bytes @ 0x48
   398  0000C8                     	ds	4
   399  0000CC                     vfpfcnvrt@ct:
   400                           	opt callstack 0
   401                           
   402                           ; 3 bytes @ 0x4C
   403  0000CC                     	ds	3
   404  0000CF                     vfpfcnvrt@c:
   405                           	opt callstack 0
   406                           
   407                           ; 1 bytes @ 0x4F
   408  0000CF                     	ds	3
   409  0000D2                     sprintf@ap:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x52
   413  0000D2                     	ds	2
   414  0000D4                     sprintf@f:
   415                           	opt callstack 0
   416                           
   417                           ; 6 bytes @ 0x54
   418  0000D4                     	ds	6
   419  0000DA                     ??_main:
   420                           
   421                           ; 1 bytes @ 0x5A
   422  0000DA                     	ds	2
   423                           
   424                           	psect	cstackCOMRAM
   425  000001                     __pcstackCOMRAM:
   426                           	opt callstack 0
   427  000001                     ?_strlen:
   428                           	opt callstack 0
   429  000001                     ?___fpclassifyf:
   430                           	opt callstack 0
   431  000001                     ?_isupper:
   432                           	opt callstack 0
   433  000001                     ?_isdigit:
   434                           	opt callstack 0
   435  000001                     ?_strncmp:
   436                           	opt callstack 0
   437  000001                     ?_isspace:
   438                           	opt callstack 0
   439  000001                     ?___wmul:
   440                           	opt callstack 0
   441  000001                     ?___awdiv:
   442                           	opt callstack 0
   443  000001                     ?___awmod:
   444                           	opt callstack 0
   445  000001                     ?___fladd:
   446                           	opt callstack 0
   447  000001                     ?___lmul:
   448                           	opt callstack 0
   449  000001                     ?___flneg:
   450                           	opt callstack 0
   451  000001                     ?___fltol:
   452                           	opt callstack 0
   453  000001                     ?___xxtofl:
   454                           	opt callstack 0
   455  000001                     ?___lodiv:
   456                           	opt callstack 0
   457  000001                     ?___lomod:
   458                           	opt callstack 0
   459  000001                     set_bit@comp:
   460                           	opt callstack 0
   461  000001                     ___wmul@multiplier:
   462                           	opt callstack 0
   463  000001                     ___awdiv@dividend:
   464                           	opt callstack 0
   465  000001                     ___awmod@dividend:
   466                           	opt callstack 0
   467  000001                     isdigit@c:
   468                           	opt callstack 0
   469  000001                     isspace@c:
   470                           	opt callstack 0
   471  000001                     isupper@c:
   472                           	opt callstack 0
   473  000001                     fputc@c:
   474                           	opt callstack 0
   475  000001                     strcpy@dest:
   476                           	opt callstack 0
   477  000001                     strlen@s:
   478                           	opt callstack 0
   479  000001                     strncmp@_l:
   480                           	opt callstack 0
   481  000001                     ___lmul@multiplier:
   482                           	opt callstack 0
   483  000001                     ___fleq@ff1:
   484                           	opt callstack 0
   485  000001                     ___flneg@f1:
   486                           	opt callstack 0
   487  000001                     ___fltol@f1:
   488                           	opt callstack 0
   489  000001                     ___fladd@b:
   490                           	opt callstack 0
   491  000001                     ___xxtofl@val:
   492                           	opt callstack 0
   493  000001                     ___fpclassifyf@x:
   494                           	opt callstack 0
   495  000001                     ___lodiv@dividend:
   496                           	opt callstack 0
   497  000001                     ___lomod@dividend:
   498                           	opt callstack 0
   499                           
   500                           ; 8 bytes @ 0x0
   501  000001                     	ds	1
   502  000002                     set_bit@cmd:
   503                           	opt callstack 0
   504                           
   505                           ; 1 bytes @ 0x1
   506  000002                     	ds	1
   507  000003                     ??_lcd_cmd:
   508  000003                     ??_isupper:
   509  000003                     ??_isdigit:
   510  000003                     ??_isspace:
   511  000003                     ___wmul@multiplicand:
   512                           	opt callstack 0
   513  000003                     ___awdiv@divisor:
   514                           	opt callstack 0
   515  000003                     ___awmod@divisor:
   516                           	opt callstack 0
   517  000003                     fputc@fp:
   518                           	opt callstack 0
   519  000003                     strcpy@src:
   520                           	opt callstack 0
   521  000003                     strlen@a:
   522                           	opt callstack 0
   523  000003                     strncmp@_r:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x2
   527  000003                     	ds	1
   528  000004                     lcd_cmd@cmd:
   529                           	opt callstack 0
   530                           
   531                           ; 1 bytes @ 0x3
   532  000004                     	ds	1
   533  000005                     ??_lcd_ini:
   534  000005                     ??_fputc:
   535  000005                     ??___fpclassifyf:
   536  000005                     ??_strcpy:
   537  000005                     ??___fltol:
   538  000005                     ??___xxtofl:
   539  000005                     lcd_envia_byte@dado:
   540                           	opt callstack 0
   541  000005                     ___awdiv@counter:
   542                           	opt callstack 0
   543  000005                     ___awmod@counter:
   544                           	opt callstack 0
   545  000005                     ___wmul@product:
   546                           	opt callstack 0
   547  000005                     strncmp@n:
   548                           	opt callstack 0
   549  000005                     ___lmul@multiplicand:
   550                           	opt callstack 0
   551  000005                     ___fleq@ff2:
   552                           	opt callstack 0
   553  000005                     ___fladd@a:
   554                           	opt callstack 0
   555                           
   556                           ; 4 bytes @ 0x4
   557  000005                     	ds	1
   558  000006                     lcd_ini@i:
   559                           	opt callstack 0
   560  000006                     lcd_envia_byte@nivel:
   561                           	opt callstack 0
   562  000006                     ___awdiv@sign:
   563                           	opt callstack 0
   564  000006                     ___awmod@sign:
   565                           	opt callstack 0
   566                           
   567                           ; 1 bytes @ 0x5
   568  000006                     	ds	1
   569  000007                     ??_strncmp:
   570  000007                     ?_tolower:
   571                           	opt callstack 0
   572  000007                     lcd_escreve_bf@col:
   573                           	opt callstack 0
   574  000007                     _isspace$1020:
   575                           	opt callstack 0
   576  000007                     ___awdiv@quotient:
   577                           	opt callstack 0
   578  000007                     strcpy@s:
   579                           	opt callstack 0
   580  000007                     tolower@c:
   581                           	opt callstack 0
   582                           
   583                           ; 2 bytes @ 0x6
   584  000007                     	ds	1
   585  000008                     ?_atoi:
   586                           	opt callstack 0
   587  000008                     lcd_escreve_bf@str:
   588                           	opt callstack 0
   589  000008                     atoi@s:
   590                           	opt callstack 0
   591  000008                     strncmp@l:
   592                           	opt callstack 0
   593                           
   594                           ; 2 bytes @ 0x7
   595  000008                     	ds	1
   596  000009                     ??_tolower:
   597  000009                     ??___fladd:
   598  000009                     ??___fleq:
   599  000009                     ___fltol@sign1:
   600                           	opt callstack 0
   601  000009                     ___xxtofl@sign:
   602                           	opt callstack 0
   603  000009                     ___fpclassifyf@e:
   604                           	opt callstack 0
   605  000009                     strcpy@d:
   606                           	opt callstack 0
   607  000009                     ___lmul@product:
   608                           	opt callstack 0
   609  000009                     ___lodiv@divisor:
   610                           	opt callstack 0
   611  000009                     ___lomod@divisor:
   612                           	opt callstack 0
   613                           
   614                           ; 8 bytes @ 0x8
   615  000009                     	ds	1
   616  00000A                     ??_atoi:
   617  00000A                     lcd_escreve_bf@end:
   618                           	opt callstack 0
   619  00000A                     ___fltol@exp1:
   620                           	opt callstack 0
   621  00000A                     ___xxtofl@exp:
   622                           	opt callstack 0
   623  00000A                     fputs@s:
   624                           	opt callstack 0
   625  00000A                     strncmp@r:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x9
   629  00000A                     	ds	1
   630  00000B                     lcd_escreve_bf@lin:
   631                           	opt callstack 0
   632  00000B                     ___xxtofl@arg:
   633                           	opt callstack 0
   634  00000B                     ___fpclassifyf@u:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0xA
   638  00000B                     	ds	1
   639  00000C                     fputs@fp:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0xB
   643  00000C                     	ds	1
   644  00000D                     ?___aldiv:
   645                           	opt callstack 0
   646  00000D                     ___fladd@signs:
   647                           	opt callstack 0
   648  00000D                     _tolower$1105:
   649                           	opt callstack 0
   650  00000D                     ___aldiv@dividend:
   651                           	opt callstack 0
   652                           
   653                           ; 4 bytes @ 0xC
   654  00000D                     	ds	1
   655  00000E                     ___fladd@aexp:
   656                           	opt callstack 0
   657  00000E                     fputs@c:
   658                           	opt callstack 0
   659  00000E                     atoi@neg:
   660                           	opt callstack 0
   661                           
   662                           ; 2 bytes @ 0xD
   663  00000E                     	ds	1
   664  00000F                     ?___flmul:
   665                           	opt callstack 0
   666  00000F                     ___fladd@bexp:
   667                           	opt callstack 0
   668  00000F                     fputs@i:
   669                           	opt callstack 0
   670  00000F                     ___flmul@b:
   671                           	opt callstack 0
   672                           
   673                           ; 4 bytes @ 0xE
   674  00000F                     	ds	1
   675  000010                     ___fladd@grs:
   676                           	opt callstack 0
   677  000010                     _atoi$989:
   678                           	opt callstack 0
   679                           
   680                           ; 2 bytes @ 0xF
   681  000010                     	ds	1
   682  000011                     ?_pad:
   683                           	opt callstack 0
   684  000011                     ___lomod@counter:
   685                           	opt callstack 0
   686  000011                     pad@fp:
   687                           	opt callstack 0
   688  000011                     ___aldiv@divisor:
   689                           	opt callstack 0
   690  000011                     ___lodiv@quotient:
   691                           	opt callstack 0
   692                           
   693                           ; 8 bytes @ 0x10
   694  000011                     	ds	1
   695  000012                     _atoi$991:
   696                           	opt callstack 0
   697                           
   698                           ; 2 bytes @ 0x11
   699  000012                     	ds	1
   700  000013                     pad@buf:
   701                           	opt callstack 0
   702  000013                     ___flmul@a:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x12
   706  000013                     	ds	1
   707  000014                     _atoi$990:
   708                           	opt callstack 0
   709                           
   710                           ; 1 bytes @ 0x13
   711  000014                     	ds	1
   712  000015                     ___aldiv@counter:
   713                           	opt callstack 0
   714  000015                     pad@p:
   715                           	opt callstack 0
   716  000015                     atoi@n:
   717                           	opt callstack 0
   718                           
   719                           ; 2 bytes @ 0x14
   720  000015                     	ds	1
   721  000016                     ___aldiv@sign:
   722                           	opt callstack 0
   723                           
   724                           ; 1 bytes @ 0x15
   725  000016                     	ds	1
   726  000017                     ??___flmul:
   727  000017                     ??_pad:
   728  000017                     ___aldiv@quotient:
   729                           	opt callstack 0
   730                           
   731                           ; 4 bytes @ 0x16
   732  000017                     	ds	1
   733  000018                     pad@i:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x17
   737  000018                     	ds	1
   738  000019                     ___lodiv@counter:
   739                           	opt callstack 0
   740                           
   741                           ; 1 bytes @ 0x18
   742  000019                     	ds	1
   743  00001A                     pad@w:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x19
   747  00001A                     	ds	1
   748  00001B                     ___flmul@sign:
   749                           	opt callstack 0
   750                           
   751                           ; 1 bytes @ 0x1A
   752  00001B                     	ds	1
   753  00001C                     ?_ctoa:
   754                           	opt callstack 0
   755  00001C                     ?_utoa:
   756                           	opt callstack 0
   757  00001C                     ctoa@fp:
   758                           	opt callstack 0
   759  00001C                     utoa@fp:
   760                           	opt callstack 0
   761  00001C                     ___flmul@grs:
   762                           	opt callstack 0
   763                           
   764                           ; 4 bytes @ 0x1B
   765  00001C                     	ds	2
   766  00001E                     ctoa@c:
   767                           	opt callstack 0
   768  00001E                     utoa@d:
   769                           	opt callstack 0
   770                           
   771                           ; 8 bytes @ 0x1D
   772  00001E                     	ds	1
   773  00001F                     ctoa@w:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x1E
   777  00001F                     	ds	1
   778  000020                     ___flmul@aexp:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x1F
   782  000020                     	ds	1
   783  000021                     ___flmul@bexp:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x20
   787  000021                     	ds	1
   788  000022                     ___flmul@prod:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x21
   792  000022                     	ds	4
   793  000026                     ??_utoa:
   794  000026                     ___flmul@temp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x25
   798  000026                     	ds	2
   799  000028                     ?___fldiv:
   800                           	opt callstack 0
   801  000028                     ?___flsub:
   802                           	opt callstack 0
   803  000028                     ___flge@ff1:
   804                           	opt callstack 0
   805  000028                     ___flsub@b:
   806                           	opt callstack 0
   807  000028                     ___fldiv@b:
   808                           	opt callstack 0
   809                           
   810                           ; 4 bytes @ 0x27
   811  000028                     	ds	4
   812  00002C                     ___flge@ff2:
   813                           	opt callstack 0
   814  00002C                     ___flsub@a:
   815                           	opt callstack 0
   816  00002C                     ___fldiv@a:
   817                           	opt callstack 0
   818                           
   819                           ; 4 bytes @ 0x2B
   820  00002C                     	ds	2
   821  00002E                     utoa@p:
   822                           	opt callstack 0
   823                           
   824                           ; 2 bytes @ 0x2D
   825  00002E                     	ds	2
   826  000030                     ??___fldiv:
   827  000030                     ??___flge:
   828  000030                     utoa@w:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x2F
   832  000030                     	ds	2
   833  000032                     utoa@n:
   834                           	opt callstack 0
   835                           
   836                           ; 8 bytes @ 0x31
   837  000032                     	ds	2
   838  000034                     ___fldiv@rem:
   839                           	opt callstack 0
   840                           
   841                           ; 4 bytes @ 0x33
   842  000034                     	ds	4
   843  000038                     ___fldiv@sign:
   844                           	opt callstack 0
   845                           
   846                           ; 1 bytes @ 0x37
   847  000038                     	ds	1
   848  000039                     ___fldiv@new_exp:
   849                           	opt callstack 0
   850                           
   851                           ; 2 bytes @ 0x38
   852  000039                     	ds	1
   853  00003A                     utoa@i:
   854                           	opt callstack 0
   855                           
   856                           ; 2 bytes @ 0x39
   857  00003A                     	ds	1
   858  00003B                     ___fldiv@grs:
   859                           	opt callstack 0
   860                           
   861                           ; 4 bytes @ 0x3A
   862  00003B                     	ds	4
   863  00003F                     ___fldiv@bexp:
   864                           	opt callstack 0
   865                           
   866                           ; 1 bytes @ 0x3E
   867  00003F                     	ds	1
   868  000040                     ___fldiv@aexp:
   869                           	opt callstack 0
   870                           
   871                           ; 1 bytes @ 0x3F
   872  000040                     	ds	1
   873  000041                     ?_floorf:
   874                           	opt callstack 0
   875  000041                     floorf@x:
   876                           	opt callstack 0
   877                           
   878                           ; 4 bytes @ 0x40
   879  000041                     	ds	4
   880  000045                     ??_floorf:
   881                           
   882                           ; 1 bytes @ 0x44
   883  000045                     	ds	6
   884  00004B                     floorf@m:
   885                           	opt callstack 0
   886                           
   887                           ; 4 bytes @ 0x4A
   888  00004B                     	ds	4
   889  00004F                     floorf@e:
   890                           	opt callstack 0
   891                           
   892                           ; 2 bytes @ 0x4E
   893  00004F                     	ds	2
   894  000051                     floorf@u:
   895                           	opt callstack 0
   896                           
   897                           ; 4 bytes @ 0x50
   898  000051                     	ds	4
   899  000055                     ?_efgtoa:
   900                           	opt callstack 0
   901  000055                     efgtoa@fp:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x54
   905  000055                     	ds	2
   906  000057                     efgtoa@f:
   907                           	opt callstack 0
   908                           
   909                           ; 4 bytes @ 0x56
   910  000057                     	ds	4
   911  00005B                     efgtoa@c:
   912                           	opt callstack 0
   913                           
   914                           ; 1 bytes @ 0x5A
   915  00005B                     	ds	1
   916  00005C                     ??_efgtoa:
   917                           
   918                           ; 1 bytes @ 0x5B
   919  00005C                     	ds	5
   920  000061                     ?_vfpfcnvrt:
   921                           	opt callstack 0
   922  000061                     vfpfcnvrt@fp:
   923                           	opt callstack 0
   924                           
   925                           ; 2 bytes @ 0x60
   926  000061                     	ds	2
   927  000063                     vfpfcnvrt@fmt:
   928                           	opt callstack 0
   929                           
   930                           ; 2 bytes @ 0x62
   931  000063                     	ds	2
   932  000065                     vfpfcnvrt@ap:
   933                           	opt callstack 0
   934                           
   935                           ; 2 bytes @ 0x64
   936  000065                     	ds	2
   937  000067                     ??_vfpfcnvrt:
   938                           
   939                           ; 1 bytes @ 0x66
   940  000067                     	ds	6
   941  00006D                     ?_vfprintf:
   942                           	opt callstack 0
   943  00006D                     vfprintf@fp:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0x6C
   947  00006D                     	ds	2
   948  00006F                     vfprintf@fmt:
   949                           	opt callstack 0
   950                           
   951                           ; 2 bytes @ 0x6E
   952  00006F                     	ds	2
   953  000071                     vfprintf@ap:
   954                           	opt callstack 0
   955                           
   956                           ; 2 bytes @ 0x70
   957  000071                     	ds	2
   958  000073                     vfprintf@cfmt:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x72
   962  000073                     	ds	2
   963  000075                     ?_sprintf:
   964                           	opt callstack 0
   965  000075                     sprintf@s:
   966                           	opt callstack 0
   967                           
   968                           ; 2 bytes @ 0x74
   969  000075                     	ds	2
   970  000077                     sprintf@fmt:
   971                           	opt callstack 0
   972                           
   973                           ; 2 bytes @ 0x76
   974  000077                     	ds	8
   975  00007F                     
   976                           ; 1 bytes @ 0x7E
   977 ;;
   978 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   979 ;;
   980 ;; *************** function _main *****************
   981 ;; Defined at:
   982 ;;		line 14 in file "EX21.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0
   998 ;;      Temps:          0       2       0       0       0       0       0
   999 ;;      Totals:         0       2       0       0       0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels required when called:    8
  1002 ;; This function calls:
  1003 ;;		___aldiv
  1004 ;;		___fldiv
  1005 ;;		___flmul
  1006 ;;		___lmul
  1007 ;;		___xxtofl
  1008 ;;		_lcd_escreve_bf
  1009 ;;		_lcd_ini
  1010 ;;		_sprintf
  1011 ;; This function is called by:
  1012 ;;		Startup code after reset
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text0
  1017  001F20                     __ptext0:
  1018                           	opt callstack 0
  1019  001F20                     _main:
  1020                           	opt callstack 23
  1021                           
  1022                           ;EX21.c: 16:     ADCON0 = 0b00000101;
  1023                           
  1024                           ;incstack = 0
  1025  001F20  0E05               	movlw	5
  1026  001F22  6EC2               	movwf	4034,c	;volatile
  1027                           
  1028                           ;EX21.c: 23:     ADCON1 = 0b00001101;
  1029  001F24  0E0D               	movlw	13
  1030  001F26  6EC1               	movwf	4033,c	;volatile
  1031                           
  1032                           ;EX21.c: 28:     ADCON2 = 0b10000111;
  1033  001F28  0E87               	movlw	135
  1034  001F2A  6EC0               	movwf	4032,c	;volatile
  1035                           
  1036                           ;EX21.c: 34:     lcd_ini();
  1037  001F2C  EC62  F017         	call	_lcd_ini	;wreg free
  1038                           
  1039                           ;EX21.c: 37:     lcd_escreve_bf(1, 1, "Temp:");
  1040  001F30  0E01               	movlw	1
  1041  001F32  6E07               	movwf	lcd_escreve_bf@col,c
  1042  001F34  0E14               	movlw	low STR_1
  1043  001F36  6E08               	movwf	lcd_escreve_bf@str,c
  1044  001F38  0E06               	movlw	high STR_1
  1045  001F3A  6E09               	movwf	lcd_escreve_bf@str+1,c
  1046  001F3C  0E01               	movlw	1
  1047  001F3E  EC31  F018         	call	_lcd_escreve_bf
  1048                           
  1049                           ;EX21.c: 40:     lcd_escreve_bf(2, 1, "Volt:");
  1050  001F42  0E01               	movlw	1
  1051  001F44  6E07               	movwf	lcd_escreve_bf@col,c
  1052  001F46  0E1A               	movlw	low STR_2
  1053  001F48  6E08               	movwf	lcd_escreve_bf@str,c
  1054  001F4A  0E06               	movlw	high STR_2
  1055  001F4C  6E09               	movwf	lcd_escreve_bf@str+1,c
  1056  001F4E  0E02               	movlw	2
  1057  001F50  EC31  F018         	call	_lcd_escreve_bf
  1058  001F54                     l4445:
  1059                           
  1060                           ;EX21.c: 43:     {;EX21.c: 44:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1061  001F54  0E04               	movlw	4
  1062  001F56  0100               	movlb	0	; () banked
  1063  001F58  6FDB               	movwf	(??_main+1)& (0+255),b
  1064  001F5A  0E0C               	movlw	12
  1065  001F5C  6FDA               	movwf	??_main& (0+255),b
  1066  001F5E  0E33               	movlw	51
  1067  001F60                     u5637:
  1068  001F60  2EE8               	decfsz	wreg,f,c
  1069  001F62  D7FE               	bra	u5637
  1070  001F64  2FDA               	decfsz	??_main& (0+255),f,b
  1071  001F66  D7FC               	bra	u5637
  1072  001F68  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  1073  001F6A  D7FA               	bra	u5637
  1074  001F6C  D000               	nop2	
  1075                           
  1076                           ;EX21.c: 46:         ADCON0 = 0b00000001;
  1077  001F6E  0E01               	movlw	1
  1078  001F70  6EC2               	movwf	4034,c	;volatile
  1079                           
  1080                           ;EX21.c: 48:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1081  001F72  0E42               	movlw	66
  1082  001F74                     u5647:
  1083  001F74  2EE8               	decfsz	wreg,f,c
  1084  001F76  D7FE               	bra	u5647
  1085  001F78  D000               	nop2	
  1086                           
  1087                           ;EX21.c: 50:         ADCON0bits.GO = 1;
  1088  001F7A  82C2               	bsf	4034,1,c	;volatile
  1089  001F7C                     l34:
  1090  001F7C  B2C2               	btfsc	4034,1,c	;volatile
  1091  001F7E  D7FE               	goto	l34
  1092                           
  1093                           ;EX21.c: 54:         adc = ADRESH;
  1094  001F80  CFC4 F0F4          	movff	4036,_adc	;volatile
  1095  001F84  0100               	movlb	0	; () banked
  1096  001F86  6BF5               	clrf	(_adc+1)& (0+255),b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;EX21.c: 56:         adc = (adc << 8) + ADRESL;
  1100  001F88  51F4               	movf	_adc& (0+255),w,b
  1101  001F8A  6FDB               	movwf	(??_main+1)& (0+255),b
  1102  001F8C  6BDA               	clrf	??_main& (0+255),b
  1103  001F8E  50C3               	movf	4035,w,c	;volatile
  1104  001F90  25DA               	addwf	??_main& (0+255),w,b
  1105  001F92  6FF4               	movwf	_adc& (0+255),b
  1106  001F94  0E00               	movlw	0
  1107  001F96  21DB               	addwfc	(??_main+1)& (0+255),w,b
  1108  001F98  6FF5               	movwf	(_adc+1)& (0+255),b
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;EX21.c: 59:         temp = ((float)adc * 5000) / 1023;
  1112  001F9A  0E00               	movlw	0
  1113  001F9C  6E13               	movwf	___flmul@a,c
  1114  001F9E  0E40               	movlw	64
  1115  001FA0  6E14               	movwf	___flmul@a+1,c
  1116  001FA2  0E9C               	movlw	156
  1117  001FA4  6E15               	movwf	___flmul@a+2,c
  1118  001FA6  0E45               	movlw	69
  1119  001FA8  6E16               	movwf	___flmul@a+3,c
  1120  001FAA  C0F4  F001         	movff	_adc,___xxtofl@val
  1121  001FAE  C0F5  F002         	movff	_adc+1,___xxtofl@val+1
  1122  001FB2  0E00               	movlw	0
  1123  001FB4  BE02               	btfsc	___xxtofl@val+1,7,c
  1124  001FB6  0EFF               	movlw	-1
  1125  001FB8  6E03               	movwf	___xxtofl@val+2,c
  1126  001FBA  6E04               	movwf	___xxtofl@val+3,c
  1127  001FBC  0E01               	movlw	1
  1128  001FBE  ECF1  F012         	call	___xxtofl
  1129  001FC2  C001  F00F         	movff	?___xxtofl,___flmul@b
  1130  001FC6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1131  001FCA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1132  001FCE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1133  001FD2  EC1D  F00B         	call	___flmul	;wreg free
  1134  001FD6  C00F  F028         	movff	?___flmul,___fldiv@b
  1135  001FDA  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1136  001FDE  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1137  001FE2  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1138  001FE6  0E00               	movlw	0
  1139  001FE8  6E2C               	movwf	___fldiv@a,c
  1140  001FEA  0EC0               	movlw	192
  1141  001FEC  6E2D               	movwf	___fldiv@a+1,c
  1142  001FEE  0E7F               	movlw	127
  1143  001FF0  6E2E               	movwf	___fldiv@a+2,c
  1144  001FF2  0E44               	movlw	68
  1145  001FF4  6E2F               	movwf	___fldiv@a+3,c
  1146  001FF6  EC4C  F00E         	call	___fldiv	;wreg free
  1147  001FFA  C028  F0E4         	movff	?___fldiv,_temp
  1148  001FFE  C029  F0E5         	movff	?___fldiv+1,_temp+1
  1149  002002  C02A  F0E6         	movff	?___fldiv+2,_temp+2
  1150  002006  C02B  F0E7         	movff	?___fldiv+3,_temp+3
  1151                           
  1152                           ;EX21.c: 60:         temp = temp / 10;
  1153  00200A  C0E4  F028         	movff	_temp,___fldiv@b
  1154  00200E  C0E5  F029         	movff	_temp+1,___fldiv@b+1
  1155  002012  C0E6  F02A         	movff	_temp+2,___fldiv@b+2
  1156  002016  C0E7  F02B         	movff	_temp+3,___fldiv@b+3
  1157  00201A  0E00               	movlw	0
  1158  00201C  6E2C               	movwf	___fldiv@a,c
  1159  00201E  0E00               	movlw	0
  1160  002020  6E2D               	movwf	___fldiv@a+1,c
  1161  002022  0E20               	movlw	32
  1162  002024  6E2E               	movwf	___fldiv@a+2,c
  1163  002026  0E41               	movlw	65
  1164  002028  6E2F               	movwf	___fldiv@a+3,c
  1165  00202A  EC4C  F00E         	call	___fldiv	;wreg free
  1166  00202E  C028  F0E4         	movff	?___fldiv,_temp
  1167  002032  C029  F0E5         	movff	?___fldiv+1,_temp+1
  1168  002036  C02A  F0E6         	movff	?___fldiv+2,_temp+2
  1169  00203A  C02B  F0E7         	movff	?___fldiv+3,_temp+3
  1170                           
  1171                           ;EX21.c: 62:         ADCON0 = 0b00000101;
  1172  00203E  0E05               	movlw	5
  1173  002040  6EC2               	movwf	4034,c	;volatile
  1174                           
  1175                           ;EX21.c: 64:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  1176  002042  0E42               	movlw	66
  1177  002044                     u5657:
  1178  002044  2EE8               	decfsz	wreg,f,c
  1179  002046  D7FE               	bra	u5657
  1180  002048  D000               	nop2	
  1181                           
  1182                           ;EX21.c: 66:         ADCON0bits.GO = 1;
  1183  00204A  82C2               	bsf	4034,1,c	;volatile
  1184  00204C                     l37:
  1185  00204C  B2C2               	btfsc	4034,1,c	;volatile
  1186  00204E  D7FE               	goto	l37
  1187                           
  1188                           ;EX21.c: 70:         adc = ADRESH;
  1189  002050  CFC4 F0F4          	movff	4036,_adc	;volatile
  1190  002054  0100               	movlb	0	; () banked
  1191  002056  6BF5               	clrf	(_adc+1)& (0+255),b
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;EX21.c: 72:         adc = (adc << 8) + ADRESL;
  1195  002058  51F4               	movf	_adc& (0+255),w,b
  1196  00205A  6FDB               	movwf	(??_main+1)& (0+255),b
  1197  00205C  6BDA               	clrf	??_main& (0+255),b
  1198  00205E  50C3               	movf	4035,w,c	;volatile
  1199  002060  25DA               	addwf	??_main& (0+255),w,b
  1200  002062  6FF4               	movwf	_adc& (0+255),b
  1201  002064  0E00               	movlw	0
  1202  002066  21DB               	addwfc	(??_main+1)& (0+255),w,b
  1203  002068  6FF5               	movwf	(_adc+1)& (0+255),b
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;EX21.c: 75:         volt = ((long)adc * 5000) / 1023;
  1207  00206A  C0F4  F001         	movff	_adc,___lmul@multiplier
  1208  00206E  C0F5  F002         	movff	_adc+1,___lmul@multiplier+1
  1209  002072  0E00               	movlw	0
  1210  002074  BE02               	btfsc	___lmul@multiplier+1,7,c
  1211  002076  0EFF               	movlw	-1
  1212  002078  6E03               	movwf	___lmul@multiplier+2,c
  1213  00207A  6E04               	movwf	___lmul@multiplier+3,c
  1214  00207C  0E88               	movlw	136
  1215  00207E  6E05               	movwf	___lmul@multiplicand,c
  1216  002080  0E13               	movlw	19
  1217  002082  6E06               	movwf	___lmul@multiplicand+1,c
  1218  002084  0E00               	movlw	0
  1219  002086  6E07               	movwf	___lmul@multiplicand+2,c
  1220  002088  0E00               	movlw	0
  1221  00208A  6E08               	movwf	___lmul@multiplicand+3,c
  1222  00208C  ECD2  F018         	call	___lmul	;wreg free
  1223  002090  C001  F00D         	movff	?___lmul,___aldiv@dividend
  1224  002094  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  1225  002098  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  1226  00209C  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  1227  0020A0  0EFF               	movlw	255
  1228  0020A2  6E11               	movwf	___aldiv@divisor,c
  1229  0020A4  0E03               	movlw	3
  1230  0020A6  6E12               	movwf	___aldiv@divisor+1,c
  1231  0020A8  0E00               	movlw	0
  1232  0020AA  6E13               	movwf	___aldiv@divisor+2,c
  1233  0020AC  0E00               	movlw	0
  1234  0020AE  6E14               	movwf	___aldiv@divisor+3,c
  1235  0020B0  ECAB  F015         	call	___aldiv	;wreg free
  1236  0020B4  C00D  F0E8         	movff	?___aldiv,_volt
  1237  0020B8  C00E  F0E9         	movff	?___aldiv+1,_volt+1
  1238  0020BC  C00F  F0EA         	movff	?___aldiv+2,_volt+2
  1239  0020C0  C010  F0EB         	movff	?___aldiv+3,_volt+3
  1240                           
  1241                           ;EX21.c: 78:         sprintf(bufferLCD, "%0.1f %cC", temp, 0xDF);
  1242  0020C4  0E50               	movlw	low _bufferLCD
  1243  0020C6  6E75               	movwf	sprintf@s,c
  1244  0020C8  0E01               	movlw	high _bufferLCD
  1245  0020CA  6E76               	movwf	sprintf@s+1,c
  1246  0020CC  0E01               	movlw	low STR_3
  1247  0020CE  6E77               	movwf	sprintf@fmt,c
  1248  0020D0  0E06               	movlw	high STR_3
  1249  0020D2  6E78               	movwf	sprintf@fmt+1,c
  1250  0020D4  C0E4  F079         	movff	_temp,?_sprintf+4
  1251  0020D8  C0E5  F07A         	movff	_temp+1,?_sprintf+5
  1252  0020DC  C0E6  F07B         	movff	_temp+2,?_sprintf+6
  1253  0020E0  C0E7  F07C         	movff	_temp+3,?_sprintf+7
  1254  0020E4  0E00               	movlw	0
  1255  0020E6  6E7E               	movwf	?_sprintf+9,c
  1256  0020E8  0EDF               	movlw	223
  1257  0020EA  6E7D               	movwf	?_sprintf+8,c
  1258  0020EC  ECFD  F018         	call	_sprintf	;wreg free
  1259                           
  1260                           ;EX21.c: 81:         lcd_escreve_bf(1, 7, bufferLCD);
  1261  0020F0  0E07               	movlw	7
  1262  0020F2  6E07               	movwf	lcd_escreve_bf@col,c
  1263  0020F4  0E50               	movlw	low _bufferLCD
  1264  0020F6  6E08               	movwf	lcd_escreve_bf@str,c
  1265  0020F8  0E01               	movlw	high _bufferLCD
  1266  0020FA  6E09               	movwf	lcd_escreve_bf@str+1,c
  1267  0020FC  0E01               	movlw	1
  1268  0020FE  EC31  F018         	call	_lcd_escreve_bf
  1269                           
  1270                           ;EX21.c: 84:         sprintf(bufferLCD, "%04lu mV", volt);
  1271  002102  0E50               	movlw	low _bufferLCD
  1272  002104  6E75               	movwf	sprintf@s,c
  1273  002106  0E01               	movlw	high _bufferLCD
  1274  002108  6E76               	movwf	sprintf@s+1,c
  1275  00210A  0E0B               	movlw	low STR_4
  1276  00210C  6E77               	movwf	sprintf@fmt,c
  1277  00210E  0E06               	movlw	high STR_4
  1278  002110  6E78               	movwf	sprintf@fmt+1,c
  1279  002112  C0E8  F079         	movff	_volt,?_sprintf+4
  1280  002116  C0E9  F07A         	movff	_volt+1,?_sprintf+5
  1281  00211A  C0EA  F07B         	movff	_volt+2,?_sprintf+6
  1282  00211E  C0EB  F07C         	movff	_volt+3,?_sprintf+7
  1283  002122  ECFD  F018         	call	_sprintf	;wreg free
  1284                           
  1285                           ;EX21.c: 87:         lcd_escreve_bf(2, 7, bufferLCD);
  1286  002126  0E07               	movlw	7
  1287  002128  6E07               	movwf	lcd_escreve_bf@col,c
  1288  00212A  0E50               	movlw	low _bufferLCD
  1289  00212C  6E08               	movwf	lcd_escreve_bf@str,c
  1290  00212E  0E01               	movlw	high _bufferLCD
  1291  002130  6E09               	movwf	lcd_escreve_bf@str+1,c
  1292  002132  0E02               	movlw	2
  1293  002134  EC31  F018         	call	_lcd_escreve_bf
  1294  002138  D70D               	goto	l4445
  1295  00213A                     __end_of_main:
  1296                           	opt callstack 0
  1297                           
  1298 ;; *************** function _sprintf *****************
  1299 ;; Defined at:
  1300 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_sprintf.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  s               2  116[COMRAM] PTR unsigned char 
  1303 ;;		 -> bufferLCD(16), 
  1304 ;;  fmt             2  118[COMRAM] PTR const unsigned char 
  1305 ;;		 -> STR_4(9), STR_3(10), 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  f               6   84[BANK0 ] struct _IO_FILE
  1308 ;;  ap              2   82[BANK0 ] PTR void [1]
  1309 ;;		 -> ?_sprintf(2), 
  1310 ;;  ret             2    0        int 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2  116[COMRAM] int 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1320 ;;      Params:        10       0       0       0       0       0       0
  1321 ;;      Locals:         0      10       0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0
  1323 ;;      Totals:        10      10       0       0       0       0       0
  1324 ;;Total ram usage:       20 bytes
  1325 ;; Hardware stack levels used:    1
  1326 ;; Hardware stack levels required when called:    7
  1327 ;; This function calls:
  1328 ;;		_vfprintf
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text1
  1335  0031FA                     __ptext1:
  1336                           	opt callstack 0
  1337  0031FA                     _sprintf:
  1338                           	opt callstack 23
  1339                           
  1340                           ;incstack = 0
  1341  0031FA  0E79               	movlw	low (?_sprintf+4)
  1342  0031FC  0100               	movlb	0	; () banked
  1343  0031FE  6FD2               	movwf	sprintf@ap& (0+255),b
  1344  003200  0E00               	movlw	high (?_sprintf+4)
  1345  003202  6FD3               	movwf	(sprintf@ap+1)& (0+255),b
  1346  003204  C075  F0D4         	movff	sprintf@s,sprintf@f
  1347  003208  C076  F0D5         	movff	sprintf@s+1,sprintf@f+1
  1348                           
  1349                           ; BSR set to: 0
  1350  00320C  0E00               	movlw	0
  1351  00320E  6FD7               	movwf	(sprintf@f+3)& (0+255),b
  1352  003210  0E00               	movlw	0
  1353  003212  6FD6               	movwf	(sprintf@f+2)& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356  003214  0E00               	movlw	0
  1357  003216  6FD9               	movwf	(sprintf@f+5)& (0+255),b
  1358  003218  0E00               	movlw	0
  1359  00321A  6FD8               	movwf	(sprintf@f+4)& (0+255),b
  1360                           
  1361                           ; BSR set to: 0
  1362  00321C  0ED4               	movlw	low sprintf@f
  1363  00321E  6E6D               	movwf	vfprintf@fp,c
  1364  003220  0E00               	movlw	high sprintf@f
  1365  003222  6E6E               	movwf	vfprintf@fp+1,c
  1366  003224  C077  F06F         	movff	sprintf@fmt,vfprintf@fmt
  1367  003228  C078  F070         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1368  00322C  0ED2               	movlw	low sprintf@ap
  1369  00322E  6E71               	movwf	vfprintf@ap,c
  1370  003230  0E00               	movlw	high sprintf@ap
  1371  003232  6E72               	movwf	vfprintf@ap+1,c
  1372  003234  ECA7  F018         	call	_vfprintf	;wreg free
  1373  003238  0100               	movlb	0	; () banked
  1374  00323A  51D6               	movf	(sprintf@f+2)& (0+255),w,b
  1375  00323C  2475               	addwf	sprintf@s,w,c
  1376  00323E  6ED9               	movwf	fsr2l,c
  1377  003240  51D7               	movf	(sprintf@f+3)& (0+255),w,b
  1378  003242  2076               	addwfc	sprintf@s+1,w,c
  1379  003244  6EDA               	movwf	fsr2h,c
  1380  003246  0E00               	movlw	0
  1381  003248  6EDF               	movwf	indf2,c
  1382                           
  1383                           ; BSR set to: 0
  1384  00324A  0012               	return		;funcret
  1385  00324C                     __end_of_sprintf:
  1386                           	opt callstack 0
  1387                           
  1388 ;; *************** function _vfprintf *****************
  1389 ;; Defined at:
  1390 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  fp              2  108[COMRAM] PTR struct _IO_FILE
  1393 ;;		 -> sprintf@f(6), 
  1394 ;;  fmt             2  110[COMRAM] PTR const unsigned char 
  1395 ;;		 -> STR_4(9), STR_3(10), 
  1396 ;;  ap              2  112[COMRAM] PTR PTR void 
  1397 ;;		 -> sprintf@ap(2), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  cfmt            2  114[COMRAM] PTR unsigned char 
  1400 ;;		 -> STR_4(9), STR_3(10), 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2  108[COMRAM] int 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1410 ;;      Params:         6       0       0       0       0       0       0
  1411 ;;      Locals:         2       0       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0
  1413 ;;      Totals:         8       0       0       0       0       0       0
  1414 ;;Total ram usage:        8 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    6
  1417 ;; This function calls:
  1418 ;;		_vfpfcnvrt
  1419 ;; This function is called by:
  1420 ;;		_sprintf
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text2
  1425  00314E                     __ptext2:
  1426                           	opt callstack 0
  1427  00314E                     _vfprintf:
  1428                           	opt callstack 23
  1429                           
  1430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;incstack = 0
  1434  00314E  C06F  F073         	movff	vfprintf@fmt,vfprintf@cfmt
  1435  003152  C070  F074         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1436                           
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1438  003156  0E00               	movlw	0
  1439  003158  0100               	movlb	0	; () banked
  1440  00315A  6FED               	movwf	(_nout+1)& (0+255),b
  1441  00315C  0E00               	movlw	0
  1442  00315E  6FEC               	movwf	_nout& (0+255),b
  1443                           
  1444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1445  003160  D013               	goto	l4267
  1446  003162                     l4265:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1450  003162  C06D  F061         	movff	vfprintf@fp,vfpfcnvrt@fp
  1451  003166  C06E  F062         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1452  00316A  0E73               	movlw	low vfprintf@cfmt
  1453  00316C  6E63               	movwf	vfpfcnvrt@fmt,c
  1454  00316E  0E00               	movlw	high vfprintf@cfmt
  1455  003170  6E64               	movwf	vfpfcnvrt@fmt+1,c
  1456  003172  C071  F065         	movff	vfprintf@ap,vfpfcnvrt@ap
  1457  003176  C072  F066         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1458  00317A  ECDA  F007         	call	_vfpfcnvrt	;wreg free
  1459  00317E  5061               	movf	?_vfpfcnvrt,w,c
  1460  003180  0100               	movlb	0	; () banked
  1461  003182  27EC               	addwf	_nout& (0+255),f,b
  1462  003184  5062               	movf	?_vfpfcnvrt+1,w,c
  1463  003186  23ED               	addwfc	(_nout+1)& (0+255),f,b
  1464  003188                     l4267:
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1468  003188  C073  FFF6         	movff	vfprintf@cfmt,tblptrl
  1469  00318C  C074  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1470  003190                     	if	0	;tblptru may be non-zero
  1471  003190                     	endif
  1472  003190                     	if	0	;tblptru may be non-zero
  1473  003190                     	endif
  1474  003190  0008               	tblrd		*
  1475  003192  50F5               	movf	tablat,w,c
  1476  003194  0900               	iorlw	0
  1477  003196  A4D8               	btfss	status,2,c
  1478  003198  D7E4               	goto	l4265
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1482  00319A  C0EC  F06D         	movff	_nout,?_vfprintf
  1483  00319E  C0ED  F06E         	movff	_nout+1,?_vfprintf+1
  1484                           
  1485                           ; BSR set to: 0
  1486  0031A2  0012               	return		;funcret
  1487  0031A4                     __end_of_vfprintf:
  1488                           	opt callstack 0
  1489                           
  1490 ;; *************** function _vfpfcnvrt *****************
  1491 ;; Defined at:
  1492 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  fp              2   96[COMRAM] PTR struct _IO_FILE
  1495 ;;		 -> sprintf@f(6), 
  1496 ;;  fmt             2   98[COMRAM] PTR PTR unsigned char 
  1497 ;;		 -> vfprintf@cfmt(2), 
  1498 ;;  ap              2  100[COMRAM] PTR PTR void 
  1499 ;;		 -> sprintf@ap(2), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  llu             8   64[BANK0 ] unsigned long long 
  1502 ;;  ll              8    0        long long 
  1503 ;;  f               4   72[BANK0 ] long long 
  1504 ;;  ct              3   76[BANK0 ] unsigned char [3]
  1505 ;;  vp              3    0        PTR void 
  1506 ;;  cp              3    0        PTR unsigned char 
  1507 ;;  done            2   56[BANK0 ] int 
  1508 ;;  i               2    0        int 
  1509 ;;  c               1   79[BANK0 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  2   96[COMRAM] int 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1519 ;;      Params:         6       0       0       0       0       0       0
  1520 ;;      Locals:         0      24       0       0       0       0       0
  1521 ;;      Temps:          6       0       0       0       0       0       0
  1522 ;;      Totals:        12      24       0       0       0       0       0
  1523 ;;Total ram usage:       36 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    5
  1526 ;; This function calls:
  1527 ;;		_atoi
  1528 ;;		_ctoa
  1529 ;;		_efgtoa
  1530 ;;		_fputc
  1531 ;;		_isdigit
  1532 ;;		_isupper
  1533 ;;		_strncmp
  1534 ;;		_tolower
  1535 ;;		_utoa
  1536 ;; This function is called by:
  1537 ;;		_vfprintf
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text3
  1542  000FB4                     __ptext3:
  1543                           	opt callstack 0
  1544  000FB4                     _vfpfcnvrt:
  1545                           	opt callstack 23
  1546                           
  1547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;incstack = 0
  1551  000FB4  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1552  000FB8  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1553  000FBC  CFDE FFF6          	movff	postinc2,tblptrl
  1554  000FC0  CFDD FFF7          	movff	postdec2,tblptrh
  1555  000FC4                     	if	0	;tblptru may be non-zero
  1556  000FC4                     	endif
  1557  000FC4                     	if	0	;tblptru may be non-zero
  1558  000FC4                     	endif
  1559  000FC4  0008               	tblrd		*
  1560  000FC6  50F5               	movf	tablat,w,c
  1561  000FC8  0A25               	xorlw	37
  1562  000FCA  A4D8               	btfss	status,2,c
  1563  000FCC  D31C               	goto	l4239
  1564                           
  1565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1566  000FCE  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1567  000FD2  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1568  000FD6  2ADE               	incf	postinc2,f,c
  1569  000FD8  0E00               	movlw	0
  1570  000FDA  22DD               	addwfc	postdec2,f,c
  1571                           
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1573  000FDC  0E00               	movlw	0
  1574  000FDE  0100               	movlb	0	; () banked
  1575  000FE0  6FEF               	movwf	(_width+1)& (0+255),b
  1576  000FE2  0E00               	movlw	0
  1577  000FE4  6FEE               	movwf	_width& (0+255),b
  1578  000FE6  C0EE  F0F2         	movff	_width,_flags
  1579  000FEA  C0EF  F0F3         	movff	_width+1,_flags+1
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1583  000FEE  69F0               	setf	_prec& (0+255),b
  1584  000FF0  69F1               	setf	(_prec+1)& (0+255),b
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1588  000FF2  0E00               	movlw	0
  1589  000FF4  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1590  000FF6  0E00               	movlw	0
  1591  000FF8  D014               	goto	L1
  1592  000FFA                     l4093:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1596  000FFA  81F2               	bsf	_flags& (0+255),0,b
  1597  000FFC                     l4095:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1601  000FFC  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1602  001000  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1603  001004  2ADE               	incf	postinc2,f,c
  1604  001006  0E00               	movlw	0
  1605  001008  22DD               	addwfc	postdec2,f,c
  1606                           
  1607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1608  00100A  D02E               	goto	l4119
  1609  00100C                     l4097:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1613  00100C  83F2               	bsf	_flags& (0+255),1,b
  1614  00100E  D7F6               	goto	l4095
  1615  001010                     l4101:
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1619  001010  85F2               	bsf	_flags& (0+255),2,b
  1620  001012  D7F4               	goto	l4095
  1621  001014                     l4105:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1625  001014  87F2               	bsf	_flags& (0+255),3,b
  1626  001016  D7F2               	goto	l4095
  1627  001018                     l4109:
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1631  001018  89F2               	bsf	_flags& (0+255),4,b
  1632  00101A  D7F0               	goto	l4095
  1633  00101C                     l4113:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1637  00101C  0E00               	movlw	0
  1638  00101E  6FB9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1639  001020  0E01               	movlw	1
  1640  001022                     L1:
  1641  001022  6FB8               	movwf	vfpfcnvrt@done& (0+255),b
  1642                           
  1643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1644  001024  D021               	goto	l4119
  1645  001026                     l4117:
  1646                           
  1647                           ; BSR set to: 0
  1648  001026  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1649  00102A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1650  00102E  CFDE FFF6          	movff	postinc2,tblptrl
  1651  001032  CFDD FFF7          	movff	postdec2,tblptrh
  1652  001036                     	if	0	;tblptru may be non-zero
  1653  001036                     	endif
  1654  001036                     	if	0	;tblptru may be non-zero
  1655  001036                     	endif
  1656  001036  0008               	tblrd		*
  1657  001038  50F5               	movf	tablat,w,c
  1658  00103A  6E67               	movwf	??_vfpfcnvrt& (0+255),c
  1659  00103C  6A68               	clrf	(??_vfpfcnvrt+1)& (0+255),c
  1660                           
  1661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 1, Range of values is 0 to 0
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte            4     3 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668  00103E  5068               	movf	??_vfpfcnvrt+1,w,c
  1669  001040  0A00               	xorlw	0	; case 0
  1670  001042  A4D8               	btfss	status,2,c
  1671  001044  D7EB               	goto	l4113
  1672                           
  1673                           ; BSR set to: 0
  1674                           ; Switch size 1, requested type "simple"
  1675                           ; Number of cases is 5, Range of values is 32 to 48
  1676                           ; switch strategies available:
  1677                           ; Name         Instructions Cycles
  1678                           ; simple_byte           16     9 (average)
  1679                           ;	Chosen strategy is simple_byte
  1680  001046  5067               	movf	??_vfpfcnvrt,w,c
  1681  001048  0A20               	xorlw	32	; case 32
  1682  00104A  B4D8               	btfsc	status,2,c
  1683  00104C  D7E3               	goto	l4105
  1684  00104E  0A03               	xorlw	3	; case 35
  1685  001050  B4D8               	btfsc	status,2,c
  1686  001052  D7E2               	goto	l4109
  1687  001054  0A08               	xorlw	8	; case 43
  1688  001056  B4D8               	btfsc	status,2,c
  1689  001058  D7DB               	goto	l4101
  1690  00105A  0A06               	xorlw	6	; case 45
  1691  00105C  B4D8               	btfsc	status,2,c
  1692  00105E  D7CD               	goto	l4093
  1693  001060  0A1D               	xorlw	29	; case 48
  1694  001062  B4D8               	btfsc	status,2,c
  1695  001064  D7D3               	goto	l4097
  1696  001066  D7DA               	goto	l4113
  1697  001068                     l4119:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1701  001068  51B8               	movf	vfpfcnvrt@done& (0+255),w,b
  1702  00106A  11B9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1703  00106C  B4D8               	btfsc	status,2,c
  1704  00106E  D7DB               	goto	l4117
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1708  001070  B1F2               	btfsc	_flags& (0+255),0,b
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1712  001072  93F2               	bcf	_flags& (0+255),1,b
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  1716  001074  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1717  001078  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1718  00107C  CFDE FFF6          	movff	postinc2,tblptrl
  1719  001080  CFDD FFF7          	movff	postdec2,tblptrh
  1720  001084                     	if	0	;tblptru may be non-zero
  1721  001084                     	endif
  1722  001084                     	if	0	;tblptru may be non-zero
  1723  001084                     	endif
  1724  001084  0008               	tblrd		*
  1725  001086  50F5               	movf	tablat,w,c
  1726  001088  0A2A               	xorlw	42
  1727  00108A  A4D8               	btfss	status,2,c
  1728  00108C  D023               	goto	l4131
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  1732  00108E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1733  001092  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1734  001096  2ADE               	incf	postinc2,f,c
  1735  001098  0E00               	movlw	0
  1736  00109A  22DD               	addwfc	postdec2,f,c
  1737                           
  1738                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1739  00109C  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1740  0010A0  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1741  0010A4  CFDF F067          	movff	indf2,??_vfpfcnvrt
  1742  0010A8  0E02               	movlw	2
  1743  0010AA  26DE               	addwf	postinc2,f,c
  1744  0010AC  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  1745  0010B0  0E00               	movlw	0
  1746  0010B2  22DD               	addwfc	postdec2,f,c
  1747  0010B4  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1748  0010B8  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1749  0010BC  CFDE F0EE          	movff	postinc2,_width
  1750  0010C0  CFDD F0EF          	movff	postdec2,_width+1
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  1754  0010C4  AFEF               	btfss	(_width+1)& (0+255),7,b
  1755  0010C6  D040               	goto	u5180
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  1759  0010C8  81F2               	bsf	_flags& (0+255),0,b
  1760                           
  1761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  1762  0010CA  6DEE               	negf	_width& (0+255),b
  1763  0010CC  1FEF               	comf	(_width+1)& (0+255),f,b
  1764  0010CE  B0D8               	btfsc	status,0,c
  1765  0010D0  2BEF               	incf	(_width+1)& (0+255),f,b
  1766  0010D2  D03A               	goto	u5180
  1767  0010D4                     l4131:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  1771  0010D4  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1772  0010D8  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1773  0010DC  CFDE F008          	movff	postinc2,atoi@s
  1774  0010E0  CFDD F009          	movff	postdec2,atoi@s+1
  1775  0010E4  EC51  F012         	call	_atoi	;wreg free
  1776  0010E8  C008  F0EE         	movff	?_atoi,_width
  1777  0010EC  C009  F0EF         	movff	?_atoi+1,_width+1
  1778                           
  1779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1780  0010F0  D007               	goto	l4135
  1781  0010F2                     l4133:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  1785  0010F2  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1786  0010F6  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1787  0010FA  2ADE               	incf	postinc2,f,c
  1788  0010FC  0E00               	movlw	0
  1789  0010FE  22DD               	addwfc	postdec2,f,c
  1790  001100                     l4135:
  1791  001100  0ED0               	movlw	208
  1792  001102  6E67               	movwf	??_vfpfcnvrt& (0+255),c
  1793  001104  0EFF               	movlw	255
  1794  001106  6E68               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1795  001108  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1796  00110C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1797  001110  CFDE FFF6          	movff	postinc2,tblptrl
  1798  001114  CFDD FFF7          	movff	postdec2,tblptrh
  1799  001118                     	if	0	;tblptru may be non-zero
  1800  001118                     	endif
  1801  001118                     	if	0	;tblptru may be non-zero
  1802  001118                     	endif
  1803  001118  0008               	tblrd		*
  1804  00111A  50F5               	movf	tablat,w,c
  1805  00111C  6E69               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1806  00111E  6A6A               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1807  001120  5067               	movf	??_vfpfcnvrt,w,c
  1808  001122  2669               	addwf	??_vfpfcnvrt+2,f,c
  1809  001124  5068               	movf	??_vfpfcnvrt+1,w,c
  1810  001126  226A               	addwfc	??_vfpfcnvrt+3,f,c
  1811  001128  506A               	movf	??_vfpfcnvrt+3,w,c
  1812  00112A  E106               	bnz	u5160
  1813  00112C  0E0A               	movlw	10
  1814  00112E  5C69               	subwf	??_vfpfcnvrt+2,w,c
  1815  001130  B0D8               	btfsc	status,0,c
  1816  001132  D002               	goto	u5160
  1817  001134  0E01               	movlw	1
  1818  001136  D001               	goto	u5170
  1819  001138                     u5160:
  1820  001138  0E00               	movlw	0
  1821  00113A                     u5170:
  1822  00113A  0100               	movlb	0	; () banked
  1823  00113C  6FBA               	movwf	_vfpfcnvrt$506& (0+255),b
  1824  00113E  6BBB               	clrf	(_vfpfcnvrt$506+1)& (0+255),b
  1825                           
  1826                           ; BSR set to: 0
  1827  001140  51BA               	movf	_vfpfcnvrt$506& (0+255),w,b
  1828  001142  11BB               	iorwf	(_vfpfcnvrt$506+1)& (0+255),w,b
  1829  001144  A4D8               	btfss	status,2,c
  1830  001146  D7D5               	goto	l4133
  1831  001148                     u5180:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1835  001148  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1836  00114C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1837  001150  CFDE FFF6          	movff	postinc2,tblptrl
  1838  001154  CFDD FFF7          	movff	postdec2,tblptrh
  1839  001158                     	if	0	;tblptru may be non-zero
  1840  001158                     	endif
  1841  001158                     	if	0	;tblptru may be non-zero
  1842  001158                     	endif
  1843  001158  0008               	tblrd		*
  1844  00115A  50F5               	movf	tablat,w,c
  1845  00115C  0A2E               	xorlw	46
  1846  00115E  A4D8               	btfss	status,2,c
  1847  001160  D06E               	goto	u5230
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1851  001162  0E00               	movlw	0
  1852  001164  6FF1               	movwf	(_prec+1)& (0+255),b
  1853  001166  0E00               	movlw	0
  1854  001168  6FF0               	movwf	_prec& (0+255),b
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1858  00116A  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1859  00116E  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1860  001172  2ADE               	incf	postinc2,f,c
  1861  001174  0E00               	movlw	0
  1862  001176  22DD               	addwfc	postdec2,f,c
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1866  001178  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1867  00117C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1868  001180  CFDE FFF6          	movff	postinc2,tblptrl
  1869  001184  CFDD FFF7          	movff	postdec2,tblptrh
  1870  001188                     	if	0	;tblptru may be non-zero
  1871  001188                     	endif
  1872  001188                     	if	0	;tblptru may be non-zero
  1873  001188                     	endif
  1874  001188  0008               	tblrd		*
  1875  00118A  50F5               	movf	tablat,w,c
  1876  00118C  0A2A               	xorlw	42
  1877  00118E  A4D8               	btfss	status,2,c
  1878  001190  D01C               	goto	l4151
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1882  001192  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1883  001196  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1884  00119A  2ADE               	incf	postinc2,f,c
  1885  00119C  0E00               	movlw	0
  1886  00119E  22DD               	addwfc	postdec2,f,c
  1887                           
  1888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1889  0011A0  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1890  0011A4  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1891  0011A8  CFDF F067          	movff	indf2,??_vfpfcnvrt
  1892  0011AC  0E02               	movlw	2
  1893  0011AE  26DE               	addwf	postinc2,f,c
  1894  0011B0  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  1895  0011B4  0E00               	movlw	0
  1896  0011B6  22DD               	addwfc	postdec2,f,c
  1897  0011B8  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1898  0011BC  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1899  0011C0  CFDE F0F0          	movff	postinc2,_prec
  1900  0011C4  CFDD F0F1          	movff	postdec2,_prec+1
  1901                           
  1902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1903  0011C8  D03A               	goto	u5230
  1904  0011CA                     l4151:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1908  0011CA  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1909  0011CE  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1910  0011D2  CFDE F008          	movff	postinc2,atoi@s
  1911  0011D6  CFDD F009          	movff	postdec2,atoi@s+1
  1912  0011DA  EC51  F012         	call	_atoi	;wreg free
  1913  0011DE  C008  F0F0         	movff	?_atoi,_prec
  1914  0011E2  C009  F0F1         	movff	?_atoi+1,_prec+1
  1915                           
  1916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1917  0011E6  D007               	goto	l4155
  1918  0011E8                     l4153:
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1922  0011E8  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1923  0011EC  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1924  0011F0  2ADE               	incf	postinc2,f,c
  1925  0011F2  0E00               	movlw	0
  1926  0011F4  22DD               	addwfc	postdec2,f,c
  1927  0011F6                     l4155:
  1928  0011F6  0ED0               	movlw	208
  1929  0011F8  6E67               	movwf	??_vfpfcnvrt& (0+255),c
  1930  0011FA  0EFF               	movlw	255
  1931  0011FC  6E68               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  1932  0011FE  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1933  001202  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1934  001206  CFDE FFF6          	movff	postinc2,tblptrl
  1935  00120A  CFDD FFF7          	movff	postdec2,tblptrh
  1936  00120E                     	if	0	;tblptru may be non-zero
  1937  00120E                     	endif
  1938  00120E                     	if	0	;tblptru may be non-zero
  1939  00120E                     	endif
  1940  00120E  0008               	tblrd		*
  1941  001210  50F5               	movf	tablat,w,c
  1942  001212  6E69               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  1943  001214  6A6A               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  1944  001216  5067               	movf	??_vfpfcnvrt,w,c
  1945  001218  2669               	addwf	??_vfpfcnvrt+2,f,c
  1946  00121A  5068               	movf	??_vfpfcnvrt+1,w,c
  1947  00121C  226A               	addwfc	??_vfpfcnvrt+3,f,c
  1948  00121E  506A               	movf	??_vfpfcnvrt+3,w,c
  1949  001220  E106               	bnz	u5210
  1950  001222  0E0A               	movlw	10
  1951  001224  5C69               	subwf	??_vfpfcnvrt+2,w,c
  1952  001226  B0D8               	btfsc	status,0,c
  1953  001228  D002               	goto	u5210
  1954  00122A  0E01               	movlw	1
  1955  00122C  D001               	goto	u5220
  1956  00122E                     u5210:
  1957  00122E  0E00               	movlw	0
  1958  001230                     u5220:
  1959  001230  0100               	movlb	0	; () banked
  1960  001232  6FBC               	movwf	_vfpfcnvrt$507& (0+255),b
  1961  001234  6BBD               	clrf	(_vfpfcnvrt$507+1)& (0+255),b
  1962                           
  1963                           ; BSR set to: 0
  1964  001236  51BC               	movf	_vfpfcnvrt$507& (0+255),w,b
  1965  001238  11BD               	iorwf	(_vfpfcnvrt$507+1)& (0+255),w,b
  1966  00123A  A4D8               	btfss	status,2,c
  1967  00123C  D7D5               	goto	l4153
  1968  00123E                     u5230:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1972  00123E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1973  001242  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1974  001246  CFDE FFF6          	movff	postinc2,tblptrl
  1975  00124A  CFDD FFF7          	movff	postdec2,tblptrh
  1976  00124E                     	if	0	;tblptru may be non-zero
  1977  00124E                     	endif
  1978  00124E                     	if	0	;tblptru may be non-zero
  1979  00124E                     	endif
  1980  00124E  0008               	tblrd		*
  1981  001250  50F5               	movf	tablat,w,c
  1982  001252  6E07               	movwf	tolower@c,c
  1983  001254  6A08               	clrf	tolower@c+1,c
  1984  001256  EC77  F019         	call	_tolower	;wreg free
  1985  00125A  5007               	movf	?_tolower,w,c
  1986  00125C  0100               	movlb	0	; () banked
  1987  00125E  6FCC               	movwf	vfpfcnvrt@ct& (0+255),b
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1991  001260  51CC               	movf	vfpfcnvrt@ct& (0+255),w,b
  1992  001262  B4D8               	btfsc	status,2,c
  1993  001264  D035               	goto	l4171
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1997  001266  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1998  00126A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1999  00126E  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  2000  001272  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  2001  001276  0E01               	movlw	1
  2002  001278  2667               	addwf	??_vfpfcnvrt,f,c
  2003  00127A  0E00               	movlw	0
  2004  00127C  2268               	addwfc	??_vfpfcnvrt+1,f,c
  2005  00127E  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2006  001282  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2007  001286                     	if	0	;tblptru may be non-zero
  2008  001286                     	endif
  2009  001286                     	if	0	;tblptru may be non-zero
  2010  001286                     	endif
  2011  001286  0008               	tblrd		*
  2012  001288  50F5               	movf	tablat,w,c
  2013  00128A  6E07               	movwf	tolower@c,c
  2014  00128C  6A08               	clrf	tolower@c+1,c
  2015  00128E  EC77  F019         	call	_tolower	;wreg free
  2016  001292  5007               	movf	?_tolower,w,c
  2017  001294  0100               	movlb	0	; () banked
  2018  001296  6FCD               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  2022  001298  51CD               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2023  00129A  B4D8               	btfsc	status,2,c
  2024  00129C  D019               	goto	l4171
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  2028  00129E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2029  0012A2  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2030  0012A6  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  2031  0012AA  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  2032  0012AE  0E02               	movlw	2
  2033  0012B0  2667               	addwf	??_vfpfcnvrt,f,c
  2034  0012B2  0E00               	movlw	0
  2035  0012B4  2268               	addwfc	??_vfpfcnvrt+1,f,c
  2036  0012B6  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2037  0012BA  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2038  0012BE                     	if	0	;tblptru may be non-zero
  2039  0012BE                     	endif
  2040  0012BE                     	if	0	;tblptru may be non-zero
  2041  0012BE                     	endif
  2042  0012BE  0008               	tblrd		*
  2043  0012C0  50F5               	movf	tablat,w,c
  2044  0012C2  6E07               	movwf	tolower@c,c
  2045  0012C4  6A08               	clrf	tolower@c+1,c
  2046  0012C6  EC77  F019         	call	_tolower	;wreg free
  2047  0012CA  5007               	movf	?_tolower,w,c
  2048  0012CC  0100               	movlb	0	; () banked
  2049  0012CE  6FCE               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2050  0012D0                     l4171:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  2054  0012D0  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2055  0012D4  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2056  0012D8  CFDE FFF6          	movff	postinc2,tblptrl
  2057  0012DC  CFDD FFF7          	movff	postdec2,tblptrh
  2058  0012E0                     	if	0	;tblptru may be non-zero
  2059  0012E0                     	endif
  2060  0012E0                     	if	0	;tblptru may be non-zero
  2061  0012E0                     	endif
  2062  0012E0  0008               	tblrd		*
  2063  0012E2  50F5               	movf	tablat,w,c
  2064  0012E4  0A63               	xorlw	99
  2065  0012E6  A4D8               	btfss	status,2,c
  2066  0012E8  D026               	goto	l4179
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  2070  0012EA  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2071  0012EE  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2072  0012F2  2ADE               	incf	postinc2,f,c
  2073  0012F4  0E00               	movlw	0
  2074  0012F6  22DD               	addwfc	postdec2,f,c
  2075                           
  2076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2077  0012F8  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2078  0012FC  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2079  001300  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2080  001304  0E02               	movlw	2
  2081  001306  26DE               	addwf	postinc2,f,c
  2082  001308  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2083  00130C  0E00               	movlw	0
  2084  00130E  22DD               	addwfc	postdec2,f,c
  2085  001310  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2086  001314  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2087  001318  50DF               	movf	indf2,w,c
  2088  00131A  6FCF               	movwf	vfpfcnvrt@c& (0+255),b
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  2092  00131C  C061  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2093  001320  C062  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2094  001324  C0CF  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2095  001328  EC4F  F019         	call	_ctoa	;wreg free
  2096  00132C  C01C  F061         	movff	?_ctoa,?_vfpfcnvrt
  2097  001330  C01D  F062         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2098  001334  0012               	return	
  2099  001336                     l4179:
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  2103  001336  0E66               	movlw	102
  2104  001338  19CC               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2105  00133A  A4D8               	btfss	status,2,c
  2106  00133C  D03F               	goto	l4191
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  2110  00133E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2111  001342  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2112  001346  CFDE FFF6          	movff	postinc2,tblptrl
  2113  00134A  CFDD FFF7          	movff	postdec2,tblptrh
  2114  00134E                     	if	0	;tblptru may be non-zero
  2115  00134E                     	endif
  2116  00134E                     	if	0	;tblptru may be non-zero
  2117  00134E                     	endif
  2118  00134E  0008               	tblrd		*
  2119  001350  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  2123  001354  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2124  001358  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2125  00135C  2ADE               	incf	postinc2,f,c
  2126  00135E  0E00               	movlw	0
  2127  001360  22DD               	addwfc	postdec2,f,c
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2131  001362  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2132  001366  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2133  00136A  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2134  00136E  0E04               	movlw	4
  2135  001370  26DE               	addwf	postinc2,f,c
  2136  001372  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2137  001376  0E00               	movlw	0
  2138  001378  22DD               	addwfc	postdec2,f,c
  2139  00137A  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2140  00137E  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2141  001382  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2142  001386  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2143  00138A  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2144  00138E  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2145  001392                     l4187:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  2149  001392  C061  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2150  001396  C062  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2151  00139A  C0C8  F057         	movff	vfpfcnvrt@f,efgtoa@f
  2152  00139E  C0C9  F058         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2153  0013A2  C0CA  F059         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2154  0013A6  C0CB  F05A         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2155  0013AA  C0CF  F05B         	movff	vfpfcnvrt@c,efgtoa@c
  2156  0013AE  EC1C  F003         	call	_efgtoa	;wreg free
  2157  0013B2  C055  F061         	movff	?_efgtoa,?_vfpfcnvrt
  2158  0013B6  C056  F062         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2159  0013BA  0012               	return	
  2160  0013BC                     l4191:
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2164  0013BC  0ECC               	movlw	low vfpfcnvrt@ct
  2165  0013BE  6E01               	movwf	strncmp@_l,c
  2166  0013C0  0E00               	movlw	high vfpfcnvrt@ct
  2167  0013C2  6E02               	movwf	strncmp@_l+1,c
  2168  0013C4  0E30               	movlw	low STR_13
  2169  0013C6  6E03               	movwf	strncmp@_r,c
  2170  0013C8  0E06               	movlw	high STR_13
  2171  0013CA  6E04               	movwf	strncmp@_r+1,c
  2172  0013CC  0E00               	movlw	0
  2173  0013CE  6E06               	movwf	strncmp@n+1,c
  2174  0013D0  0E02               	movlw	2
  2175  0013D2  6E05               	movwf	strncmp@n,c
  2176  0013D4  EC91  F013         	call	_strncmp	;wreg free
  2177  0013D8  5001               	movf	?_strncmp,w,c
  2178  0013DA  1002               	iorwf	?_strncmp+1,w,c
  2179  0013DC  A4D8               	btfss	status,2,c
  2180  0013DE  D056               	goto	l4207
  2181                           
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2183  0013E0  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2184  0013E4  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2185  0013E8  CFDE F067          	movff	postinc2,??_vfpfcnvrt
  2186  0013EC  CFDD F068          	movff	postdec2,??_vfpfcnvrt+1
  2187  0013F0  0E01               	movlw	1
  2188  0013F2  2667               	addwf	??_vfpfcnvrt,f,c
  2189  0013F4  0E00               	movlw	0
  2190  0013F6  2268               	addwfc	??_vfpfcnvrt+1,f,c
  2191  0013F8  C067  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2192  0013FC  C068  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2193  001400                     	if	0	;tblptru may be non-zero
  2194  001400                     	endif
  2195  001400                     	if	0	;tblptru may be non-zero
  2196  001400                     	endif
  2197  001400  0008               	tblrd		*
  2198  001402  CFF5 F0CF          	movff	tablat,vfpfcnvrt@c
  2199  001406  0EBF               	movlw	191
  2200  001408  6E67               	movwf	??_vfpfcnvrt& (0+255),c
  2201  00140A  0EFF               	movlw	255
  2202  00140C  6E68               	movwf	(??_vfpfcnvrt+1)& (0+255),c
  2203  00140E  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2204  001412  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2205  001416  CFDE FFF6          	movff	postinc2,tblptrl
  2206  00141A  CFDD FFF7          	movff	postdec2,tblptrh
  2207  00141E                     	if	0	;tblptru may be non-zero
  2208  00141E                     	endif
  2209  00141E                     	if	0	;tblptru may be non-zero
  2210  00141E                     	endif
  2211  00141E  0008               	tblrd		*
  2212  001420  50F5               	movf	tablat,w,c
  2213  001422  6E69               	movwf	(??_vfpfcnvrt+2)& (0+255),c
  2214  001424  6A6A               	clrf	(??_vfpfcnvrt+3)& (0+255),c
  2215  001426  5067               	movf	??_vfpfcnvrt,w,c
  2216  001428  2669               	addwf	??_vfpfcnvrt+2,f,c
  2217  00142A  5068               	movf	??_vfpfcnvrt+1,w,c
  2218  00142C  226A               	addwfc	??_vfpfcnvrt+3,f,c
  2219  00142E  506A               	movf	??_vfpfcnvrt+3,w,c
  2220  001430  E106               	bnz	u5290
  2221  001432  0E1A               	movlw	26
  2222  001434  5C69               	subwf	??_vfpfcnvrt+2,w,c
  2223  001436  B0D8               	btfsc	status,0,c
  2224  001438  D002               	goto	u5290
  2225  00143A  0E01               	movlw	1
  2226  00143C  D001               	goto	u5300
  2227  00143E                     u5290:
  2228  00143E  0E00               	movlw	0
  2229  001440                     u5300:
  2230  001440  0100               	movlb	0	; () banked
  2231  001442  6FBE               	movwf	_vfpfcnvrt$512& (0+255),b
  2232  001444  6BBF               	clrf	(_vfpfcnvrt$512+1)& (0+255),b
  2233                           
  2234                           ; BSR set to: 0
  2235  001446  51BE               	movf	_vfpfcnvrt$512& (0+255),w,b
  2236  001448  11BF               	iorwf	(_vfpfcnvrt$512+1)& (0+255),w,b
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2240                           
  2241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2245  00144A  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2246  00144E  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2247  001452  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2248  001456  0E04               	movlw	4
  2249  001458  26DE               	addwf	postinc2,f,c
  2250  00145A  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2251  00145E  0E00               	movlw	0
  2252  001460  22DD               	addwfc	postdec2,f,c
  2253  001462  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2254  001466  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2255  00146A  CFDE F0C8          	movff	postinc2,vfpfcnvrt@f
  2256  00146E  CFDE F0C9          	movff	postinc2,vfpfcnvrt@f+1
  2257  001472  CFDE F0CA          	movff	postinc2,vfpfcnvrt@f+2
  2258  001476  CFDE F0CB          	movff	postinc2,vfpfcnvrt@f+3
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2262                           
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 935:       
      +                                }
  2264  00147A  0E02               	movlw	2
  2265  00147C  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2266  001480  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2267  001484  26DE               	addwf	postinc2,f,c
  2268  001486  0E00               	movlw	0
  2269  001488  22DD               	addwfc	postdec2,f,c
  2270  00148A  D783               	goto	l4187
  2271  00148C                     l4207:
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  2274  00148C  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2275  001490  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2276  001494  CFDE FFF6          	movff	postinc2,tblptrl
  2277  001498  CFDD FFF7          	movff	postdec2,tblptrh
  2278  00149C                     	if	0	;tblptru may be non-zero
  2279  00149C                     	endif
  2280  00149C                     	if	0	;tblptru may be non-zero
  2281  00149C                     	endif
  2282  00149C  0008               	tblrd		*
  2283  00149E  50F5               	movf	tablat,w,c
  2284  0014A0  0A75               	xorlw	117
  2285  0014A2  A4D8               	btfss	status,2,c
  2286  0014A4  D041               	goto	l4215
  2287                           
  2288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  2289  0014A6  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290  0014AA  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291  0014AE  2ADE               	incf	postinc2,f,c
  2292  0014B0  0E00               	movlw	0
  2293  0014B2  22DD               	addwfc	postdec2,f,c
  2294                           
  2295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  2296  0014B4  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2297  0014B8  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2298  0014BC  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2299  0014C0  0E02               	movlw	2
  2300  0014C2  26DE               	addwf	postinc2,f,c
  2301  0014C4  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2302  0014C8  0E00               	movlw	0
  2303  0014CA  22DD               	addwfc	postdec2,f,c
  2304  0014CC  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2305  0014D0  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2306  0014D4  CFDE F069          	movff	postinc2,??_vfpfcnvrt+2
  2307  0014D8  CFDD F06A          	movff	postdec2,??_vfpfcnvrt+3
  2308  0014DC  C069  F0C0         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2309  0014E0  C06A  F0C1         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2310  0014E4  0100               	movlb	0	; () banked
  2311  0014E6  6BC2               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  2312  0014E8  6BC3               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  2313  0014EA  6BC4               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  2314  0014EC  6BC5               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  2315  0014EE  6BC6               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  2316  0014F0  6BC7               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  2320  0014F2  C061  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  2321  0014F6  C062  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2322  0014FA  C0C0  F01E         	movff	vfpfcnvrt@llu,utoa@d
  2323  0014FE  C0C1  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  2324  001502  C0C2  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  2325  001506  C0C3  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  2326  00150A  C0C4  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  2327  00150E  C0C5  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  2328  001512  C0C6  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  2329  001516  C0C7  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  2330  00151A  EC78  F011         	call	_utoa	;wreg free
  2331  00151E  C01C  F061         	movff	?_utoa,?_vfpfcnvrt
  2332  001522  C01D  F062         	movff	?_utoa+1,?_vfpfcnvrt+1
  2333  001526  0012               	return	
  2334  001528                     l4215:
  2335                           
  2336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  2337  001528  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  00152C  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  001530  CFDE F001          	movff	postinc2,strncmp@_l
  2340  001534  CFDD F002          	movff	postdec2,strncmp@_l+1
  2341  001538  0E33               	movlw	low STR_18
  2342  00153A  6E03               	movwf	strncmp@_r,c
  2343  00153C  0E06               	movlw	high STR_18
  2344  00153E  6E04               	movwf	strncmp@_r+1,c
  2345  001540  0E00               	movlw	0
  2346  001542  6E06               	movwf	strncmp@n+1,c
  2347  001544  0E02               	movlw	2
  2348  001546  6E05               	movwf	strncmp@n,c
  2349  001548  EC91  F013         	call	_strncmp	;wreg free
  2350  00154C  5001               	movf	?_strncmp,w,c
  2351  00154E  1002               	iorwf	?_strncmp+1,w,c
  2352  001550  A4D8               	btfss	status,2,c
  2353  001552  D02A               	goto	l4223
  2354                           
  2355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  2356  001554  0E02               	movlw	2
  2357  001556  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358  00155A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  00155E  26DE               	addwf	postinc2,f,c
  2360  001560  0E00               	movlw	0
  2361  001562  22DD               	addwfc	postdec2,f,c
  2362                           
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
  2364  001564  C065  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2365  001568  C066  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2366  00156C  CFDF F067          	movff	indf2,??_vfpfcnvrt
  2367  001570  0E04               	movlw	4
  2368  001572  26DE               	addwf	postinc2,f,c
  2369  001574  CFDF F068          	movff	indf2,??_vfpfcnvrt+1
  2370  001578  0E00               	movlw	0
  2371  00157A  22DD               	addwfc	postdec2,f,c
  2372  00157C  C067  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2373  001580  C068  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2374  001584  CFDE F069          	movff	postinc2,??_vfpfcnvrt+2
  2375  001588  CFDE F06A          	movff	postinc2,??_vfpfcnvrt+3
  2376  00158C  CFDE F06B          	movff	postinc2,??_vfpfcnvrt+4
  2377  001590  CFDE F06C          	movff	postinc2,??_vfpfcnvrt+5
  2378  001594  5069               	movf	??_vfpfcnvrt+2,w,c
  2379  001596  0100               	movlb	0	; () banked
  2380  001598  6FC0               	movwf	vfpfcnvrt@llu& (0+255),b
  2381  00159A  506A               	movf	??_vfpfcnvrt+3,w,c
  2382  00159C  6FC1               	movwf	(vfpfcnvrt@llu+1)& (0+255),b
  2383  00159E  506B               	movf	??_vfpfcnvrt+4,w,c
  2384  0015A0  6FC2               	movwf	(vfpfcnvrt@llu+2)& (0+255),b
  2385  0015A2  506C               	movf	??_vfpfcnvrt+5,w,c
  2386  0015A4  6FC3               	movwf	(vfpfcnvrt@llu+3)& (0+255),b
  2387  0015A6  D7A1               	goto	L2
  2388  0015A8                     l4223:
  2389                           
  2390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  2391  0015A8  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2392  0015AC  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2393  0015B0  CFDE FFF6          	movff	postinc2,tblptrl
  2394  0015B4  CFDD FFF7          	movff	postdec2,tblptrh
  2395  0015B8                     	if	0	;tblptru may be non-zero
  2396  0015B8                     	endif
  2397  0015B8                     	if	0	;tblptru may be non-zero
  2398  0015B8                     	endif
  2399  0015B8  0008               	tblrd		*
  2400  0015BA  50F5               	movf	tablat,w,c
  2401  0015BC  0A25               	xorlw	37
  2402  0015BE  A4D8               	btfss	status,2,c
  2403  0015C0  D016               	goto	l4233
  2404                           
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  2406  0015C2  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2407  0015C6  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2408  0015CA  2ADE               	incf	postinc2,f,c
  2409  0015CC  0E00               	movlw	0
  2410  0015CE  22DD               	addwfc	postdec2,f,c
  2411                           
  2412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  2413  0015D0  0E00               	movlw	0
  2414  0015D2  6E02               	movwf	fputc@c+1,c
  2415  0015D4  0E25               	movlw	37
  2416  0015D6  6E01               	movwf	fputc@c,c
  2417  0015D8  C061  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2418  0015DC  C062  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2419  0015E0  ECC5  F016         	call	_fputc	;wreg free
  2420  0015E4                     l4229:
  2421                           
  2422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  2423  0015E4  0E00               	movlw	0
  2424  0015E6  6E62               	movwf	?_vfpfcnvrt+1,c
  2425  0015E8  0E01               	movlw	1
  2426  0015EA  6E61               	movwf	?_vfpfcnvrt,c
  2427  0015EC  0012               	return	
  2428  0015EE                     l4233:
  2429                           
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  2431  0015EE  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432  0015F2  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433  0015F6  2ADE               	incf	postinc2,f,c
  2434  0015F8  0E00               	movlw	0
  2435  0015FA  22DD               	addwfc	postdec2,f,c
  2436                           
  2437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  2438  0015FC  0E00               	movlw	0
  2439  0015FE  6E62               	movwf	?_vfpfcnvrt+1,c
  2440  001600  0E00               	movlw	0
  2441  001602  6E61               	movwf	?_vfpfcnvrt,c
  2442  001604  0012               	return	
  2443  001606                     l4239:
  2444                           
  2445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  2446  001606  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2447  00160A  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2448  00160E  CFDE FFF6          	movff	postinc2,tblptrl
  2449  001612  CFDD FFF7          	movff	postdec2,tblptrh
  2450  001616                     	if	0	;tblptru may be non-zero
  2451  001616                     	endif
  2452  001616                     	if	0	;tblptru may be non-zero
  2453  001616                     	endif
  2454  001616  0008               	tblrd		*
  2455  001618  50F5               	movf	tablat,w,c
  2456  00161A  6E01               	movwf	fputc@c,c
  2457  00161C  6A02               	clrf	fputc@c+1,c
  2458  00161E  C061  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2459  001622  C062  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2460  001626  ECC5  F016         	call	_fputc	;wreg free
  2461                           
  2462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  2463  00162A  C063  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  00162E  C064  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  001632  2ADE               	incf	postinc2,f,c
  2466  001634  0E00               	movlw	0
  2467  001636  22DD               	addwfc	postdec2,f,c
  2468  001638  D7D5               	goto	l4229
  2469  00163A                     __end_of_vfpfcnvrt:
  2470                           	opt callstack 0
  2471                           
  2472 ;; *************** function _utoa *****************
  2473 ;; Defined at:
  2474 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2477 ;;		 -> sprintf@f(6), 
  2478 ;;  d               8   29[COMRAM] unsigned long long 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  n               8   49[COMRAM] unsigned long long 
  2481 ;;  i               2   57[COMRAM] int 
  2482 ;;  w               2   47[COMRAM] int 
  2483 ;;  p               2   45[COMRAM] int 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2   27[COMRAM] int 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2493 ;;      Params:        10       0       0       0       0       0       0
  2494 ;;      Locals:        14       0       0       0       0       0       0
  2495 ;;      Temps:          8       0       0       0       0       0       0
  2496 ;;      Totals:        32       0       0       0       0       0       0
  2497 ;;Total ram usage:       32 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    4
  2500 ;; This function calls:
  2501 ;;		___lodiv
  2502 ;;		___lomod
  2503 ;;		_pad
  2504 ;; This function is called by:
  2505 ;;		_vfpfcnvrt
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text4
  2510  0022F0                     __ptext4:
  2511                           	opt callstack 0
  2512  0022F0                     _utoa:
  2513                           	opt callstack 23
  2514                           
  2515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  2516                           
  2517                           ;incstack = 0
  2518  0022F0  0100               	movlb	0	; () banked
  2519  0022F2  AFF1               	btfss	(_prec+1)& (0+255),7,b
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  2523  0022F4  93F2               	bcf	_flags& (0+255),1,b
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  2527  0022F6  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2528  0022F8  D005               	goto	u4910
  2529  0022FA  51F1               	movf	(_prec+1)& (0+255),w,b
  2530  0022FC  E108               	bnz	l230
  2531  0022FE  05F0               	decf	_prec& (0+255),w,b
  2532  002300  B0D8               	btfsc	status,0,c
  2533  002302  D005               	goto	l230
  2534  002304                     u4910:
  2535                           
  2536                           ; BSR set to: 0
  2537  002304  0E00               	movlw	0
  2538  002306  6E2F               	movwf	utoa@p+1,c
  2539  002308  0E01               	movlw	1
  2540  00230A  6E2E               	movwf	utoa@p,c
  2541  00230C  D004               	goto	l232
  2542  00230E                     l230:
  2543                           
  2544                           ; BSR set to: 0
  2545  00230E  C0F0  F02E         	movff	_prec,utoa@p
  2546  002312  C0F1  F02F         	movff	_prec+1,utoa@p+1
  2547  002316                     l232:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  2551  002316  C0EE  F030         	movff	_width,utoa@w
  2552  00231A  C0EF  F031         	movff	_width+1,utoa@w+1
  2553                           
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  2555  00231E  C01E  F032         	movff	utoa@d,utoa@n
  2556  002322  C01F  F033         	movff	utoa@d+1,utoa@n+1
  2557  002326  C020  F034         	movff	utoa@d+2,utoa@n+2
  2558  00232A  C021  F035         	movff	utoa@d+3,utoa@n+3
  2559  00232E  C022  F036         	movff	utoa@d+4,utoa@n+4
  2560  002332  C023  F037         	movff	utoa@d+5,utoa@n+5
  2561  002336  C024  F038         	movff	utoa@d+6,utoa@n+6
  2562  00233A  C025  F039         	movff	utoa@d+7,utoa@n+7
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  2566  00233E  0E00               	movlw	0
  2567  002340  6E3B               	movwf	utoa@i+1,c
  2568  002342  0E4F               	movlw	79
  2569  002344  6E3A               	movwf	utoa@i,c
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  2573  002346  0E00               	movlw	0
  2574  002348  0101               	movlb	1	; () banked
  2575  00234A  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2576                           
  2577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2578  00234C  D076               	goto	l3987
  2579  00234E                     l3977:
  2580                           
  2581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  2582  00234E  063A               	decf	utoa@i,f,c
  2583  002350  A0D8               	btfss	status,0,c
  2584  002352  063B               	decf	utoa@i+1,f,c
  2585                           
  2586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  2587  002354  0E00               	movlw	low _dbuf
  2588  002356  243A               	addwf	utoa@i,w,c
  2589  002358  6ED9               	movwf	fsr2l,c
  2590  00235A  0E01               	movlw	high _dbuf
  2591  00235C  203B               	addwfc	utoa@i+1,w,c
  2592  00235E  6EDA               	movwf	fsr2h,c
  2593  002360  C032  F001         	movff	utoa@n,___lomod@dividend
  2594  002364  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  2595  002368  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  2596  00236C  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  2597  002370  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  2598  002374  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  2599  002378  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  2600  00237C  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  2601  002380  0E0A               	movlw	10
  2602  002382  6E09               	movwf	___lomod@divisor,c
  2603  002384  0E00               	movlw	0
  2604  002386  6E0A               	movwf	___lomod@divisor+1,c
  2605  002388  0E00               	movlw	0
  2606  00238A  6E0B               	movwf	___lomod@divisor+2,c
  2607  00238C  0E00               	movlw	0
  2608  00238E  6E0C               	movwf	___lomod@divisor+3,c
  2609  002390  0E00               	movlw	0
  2610  002392  6E0D               	movwf	___lomod@divisor+4,c
  2611  002394  0E00               	movlw	0
  2612  002396  6E0E               	movwf	___lomod@divisor+5,c
  2613  002398  0E00               	movlw	0
  2614  00239A  6E0F               	movwf	___lomod@divisor+6,c
  2615  00239C  0E00               	movlw	0
  2616  00239E  6E10               	movwf	___lomod@divisor+7,c
  2617  0023A0  EC6E  F016         	call	___lomod	;wreg free
  2618  0023A4  C001  F026         	movff	?___lomod,??_utoa
  2619  0023A8  C002  F027         	movff	?___lomod+1,??_utoa+1
  2620  0023AC  C003  F028         	movff	?___lomod+2,??_utoa+2
  2621  0023B0  C004  F029         	movff	?___lomod+3,??_utoa+3
  2622  0023B4  C005  F02A         	movff	?___lomod+4,??_utoa+4
  2623  0023B8  C006  F02B         	movff	?___lomod+5,??_utoa+5
  2624  0023BC  C007  F02C         	movff	?___lomod+6,??_utoa+6
  2625  0023C0  C008  F02D         	movff	?___lomod+7,??_utoa+7
  2626  0023C4  5026               	movf	??_utoa,w,c
  2627  0023C6  0F30               	addlw	48
  2628  0023C8  6EDF               	movwf	indf2,c
  2629                           
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  2631  0023CA  062E               	decf	utoa@p,f,c
  2632  0023CC  A0D8               	btfss	status,0,c
  2633  0023CE  062F               	decf	utoa@p+1,f,c
  2634                           
  2635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  2636  0023D0  0630               	decf	utoa@w,f,c
  2637  0023D2  A0D8               	btfss	status,0,c
  2638  0023D4  0631               	decf	utoa@w+1,f,c
  2639                           
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  2641  0023D6  C032  F001         	movff	utoa@n,___lodiv@dividend
  2642  0023DA  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  2643  0023DE  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  2644  0023E2  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  2645  0023E6  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  2646  0023EA  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  2647  0023EE  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  2648  0023F2  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  2649  0023F6  0E0A               	movlw	10
  2650  0023F8  6E09               	movwf	___lodiv@divisor,c
  2651  0023FA  0E00               	movlw	0
  2652  0023FC  6E0A               	movwf	___lodiv@divisor+1,c
  2653  0023FE  0E00               	movlw	0
  2654  002400  6E0B               	movwf	___lodiv@divisor+2,c
  2655  002402  0E00               	movlw	0
  2656  002404  6E0C               	movwf	___lodiv@divisor+3,c
  2657  002406  0E00               	movlw	0
  2658  002408  6E0D               	movwf	___lodiv@divisor+4,c
  2659  00240A  0E00               	movlw	0
  2660  00240C  6E0E               	movwf	___lodiv@divisor+5,c
  2661  00240E  0E00               	movlw	0
  2662  002410  6E0F               	movwf	___lodiv@divisor+6,c
  2663  002412  0E00               	movlw	0
  2664  002414  6E10               	movwf	___lodiv@divisor+7,c
  2665  002416  ECDE  F014         	call	___lodiv	;wreg free
  2666  00241A  C001  F032         	movff	?___lodiv,utoa@n
  2667  00241E  C002  F033         	movff	?___lodiv+1,utoa@n+1
  2668  002422  C003  F034         	movff	?___lodiv+2,utoa@n+2
  2669  002426  C004  F035         	movff	?___lodiv+3,utoa@n+3
  2670  00242A  C005  F036         	movff	?___lodiv+4,utoa@n+4
  2671  00242E  C006  F037         	movff	?___lodiv+5,utoa@n+5
  2672  002432  C007  F038         	movff	?___lodiv+6,utoa@n+6
  2673  002436  C008  F039         	movff	?___lodiv+7,utoa@n+7
  2674  00243A                     l3987:
  2675                           
  2676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2677  00243A  503A               	movf	utoa@i,w,c
  2678  00243C  103B               	iorwf	utoa@i+1,w,c
  2679  00243E  B4D8               	btfsc	status,2,c
  2680  002440  D01B               	goto	u4960
  2681  002442  5032               	movf	utoa@n,w,c
  2682  002444  1033               	iorwf	utoa@n+1,w,c
  2683  002446  1034               	iorwf	utoa@n+2,w,c
  2684  002448  1035               	iorwf	utoa@n+3,w,c
  2685  00244A  1036               	iorwf	utoa@n+4,w,c
  2686  00244C  1037               	iorwf	utoa@n+5,w,c
  2687  00244E  1038               	iorwf	utoa@n+6,w,c
  2688  002450  1039               	iorwf	utoa@n+7,w,c
  2689  002452  A4D8               	btfss	status,2,c
  2690  002454  D77C               	goto	l3977
  2691  002456  BE2F               	btfsc	utoa@p+1,7,c
  2692  002458  D005               	goto	u4940
  2693  00245A  502F               	movf	utoa@p+1,w,c
  2694  00245C  E102               	bnz	u4941
  2695  00245E  042E               	decf	utoa@p,w,c
  2696  002460  B0D8               	btfsc	status,0,c
  2697  002462                     u4941:
  2698  002462  D775               	goto	l3977
  2699  002464                     u4940:
  2700  002464  BE31               	btfsc	utoa@w+1,7,c
  2701  002466  D008               	goto	u4960
  2702  002468  5031               	movf	utoa@w+1,w,c
  2703  00246A  E103               	bnz	u4950
  2704  00246C  0430               	decf	utoa@w,w,c
  2705  00246E  A0D8               	btfss	status,0,c
  2706  002470  D003               	goto	u4960
  2707  002472                     u4950:
  2708  002472  0100               	movlb	0	; () banked
  2709  002474  B3F2               	btfsc	_flags& (0+255),1,b
  2710  002476  D76B               	goto	l3977
  2711  002478                     u4960:
  2712                           
  2713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  2714  002478  C01C  F011         	movff	utoa@fp,pad@fp
  2715  00247C  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2716  002480  0E00               	movlw	low _dbuf
  2717  002482  243A               	addwf	utoa@i,w,c
  2718  002484  6E13               	movwf	pad@buf,c
  2719  002486  0E01               	movlw	high _dbuf
  2720  002488  203B               	addwfc	utoa@i+1,w,c
  2721  00248A  6E14               	movwf	pad@buf+1,c
  2722  00248C  C030  F015         	movff	utoa@w,pad@p
  2723  002490  C031  F016         	movff	utoa@w+1,pad@p+1
  2724  002494  EC15  F017         	call	_pad	;wreg free
  2725  002498  C011  F01C         	movff	?_pad,?_utoa
  2726  00249C  C012  F01D         	movff	?_pad+1,?_utoa+1
  2727  0024A0  0012               	return		;funcret
  2728  0024A2                     __end_of_utoa:
  2729                           	opt callstack 0
  2730                           
  2731 ;; *************** function ___lomod *****************
  2732 ;; Defined at:
  2733 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  dividend        8    0[COMRAM] unsigned long long 
  2736 ;;  divisor         8    8[COMRAM] unsigned long long 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  counter         1   16[COMRAM] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  8    0[COMRAM] unsigned long long 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2748 ;;      Params:        16       0       0       0       0       0       0
  2749 ;;      Locals:         1       0       0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0
  2751 ;;      Totals:        17       0       0       0       0       0       0
  2752 ;;Total ram usage:       17 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_utoa
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text5
  2762  002CDC                     __ptext5:
  2763                           	opt callstack 0
  2764  002CDC                     ___lomod:
  2765                           	opt callstack 26
  2766                           
  2767                           ;incstack = 0
  2768  002CDC  5009               	movf	___lomod@divisor,w,c
  2769  002CDE  100A               	iorwf	___lomod@divisor+1,w,c
  2770  002CE0  100B               	iorwf	___lomod@divisor+2,w,c
  2771  002CE2  100C               	iorwf	___lomod@divisor+3,w,c
  2772  002CE4  100D               	iorwf	___lomod@divisor+4,w,c
  2773  002CE6  100E               	iorwf	___lomod@divisor+5,w,c
  2774  002CE8  100F               	iorwf	___lomod@divisor+6,w,c
  2775  002CEA  1010               	iorwf	___lomod@divisor+7,w,c
  2776  002CEC  B4D8               	btfsc	status,2,c
  2777  002CEE  D03C               	goto	l747
  2778  002CF0  0E01               	movlw	1
  2779  002CF2  6E11               	movwf	___lomod@counter,c
  2780  002CF4  D00A               	goto	l3619
  2781  002CF6                     l3617:
  2782  002CF6  90D8               	bcf	status,0,c
  2783  002CF8  3609               	rlcf	___lomod@divisor,f,c
  2784  002CFA  360A               	rlcf	___lomod@divisor+1,f,c
  2785  002CFC  360B               	rlcf	___lomod@divisor+2,f,c
  2786  002CFE  360C               	rlcf	___lomod@divisor+3,f,c
  2787  002D00  360D               	rlcf	___lomod@divisor+4,f,c
  2788  002D02  360E               	rlcf	___lomod@divisor+5,f,c
  2789  002D04  360F               	rlcf	___lomod@divisor+6,f,c
  2790  002D06  3610               	rlcf	___lomod@divisor+7,f,c
  2791  002D08  2A11               	incf	___lomod@counter,f,c
  2792  002D0A                     l3619:
  2793  002D0A  AE10               	btfss	___lomod@divisor+7,7,c
  2794  002D0C  D7F4               	goto	l3617
  2795  002D0E                     u4320:
  2796  002D0E  5009               	movf	___lomod@divisor,w,c
  2797  002D10  5C01               	subwf	___lomod@dividend,w,c
  2798  002D12  500A               	movf	___lomod@divisor+1,w,c
  2799  002D14  5802               	subwfb	___lomod@dividend+1,w,c
  2800  002D16  500B               	movf	___lomod@divisor+2,w,c
  2801  002D18  5803               	subwfb	___lomod@dividend+2,w,c
  2802  002D1A  500C               	movf	___lomod@divisor+3,w,c
  2803  002D1C  5804               	subwfb	___lomod@dividend+3,w,c
  2804  002D1E  500D               	movf	___lomod@divisor+4,w,c
  2805  002D20  5805               	subwfb	___lomod@dividend+4,w,c
  2806  002D22  500E               	movf	___lomod@divisor+5,w,c
  2807  002D24  5806               	subwfb	___lomod@dividend+5,w,c
  2808  002D26  500F               	movf	___lomod@divisor+6,w,c
  2809  002D28  5807               	subwfb	___lomod@dividend+6,w,c
  2810  002D2A  5010               	movf	___lomod@divisor+7,w,c
  2811  002D2C  5808               	subwfb	___lomod@dividend+7,w,c
  2812  002D2E  A0D8               	btfss	status,0,c
  2813  002D30  D010               	goto	l3625
  2814  002D32  5009               	movf	___lomod@divisor,w,c
  2815  002D34  5E01               	subwf	___lomod@dividend,f,c
  2816  002D36  500A               	movf	___lomod@divisor+1,w,c
  2817  002D38  5A02               	subwfb	___lomod@dividend+1,f,c
  2818  002D3A  500B               	movf	___lomod@divisor+2,w,c
  2819  002D3C  5A03               	subwfb	___lomod@dividend+2,f,c
  2820  002D3E  500C               	movf	___lomod@divisor+3,w,c
  2821  002D40  5A04               	subwfb	___lomod@dividend+3,f,c
  2822  002D42  500D               	movf	___lomod@divisor+4,w,c
  2823  002D44  5A05               	subwfb	___lomod@dividend+4,f,c
  2824  002D46  500E               	movf	___lomod@divisor+5,w,c
  2825  002D48  5A06               	subwfb	___lomod@dividend+5,f,c
  2826  002D4A  500F               	movf	___lomod@divisor+6,w,c
  2827  002D4C  5A07               	subwfb	___lomod@dividend+6,f,c
  2828  002D4E  5010               	movf	___lomod@divisor+7,w,c
  2829  002D50  5A08               	subwfb	___lomod@dividend+7,f,c
  2830  002D52                     l3625:
  2831  002D52  90D8               	bcf	status,0,c
  2832  002D54  3210               	rrcf	___lomod@divisor+7,f,c
  2833  002D56  320F               	rrcf	___lomod@divisor+6,f,c
  2834  002D58  320E               	rrcf	___lomod@divisor+5,f,c
  2835  002D5A  320D               	rrcf	___lomod@divisor+4,f,c
  2836  002D5C  320C               	rrcf	___lomod@divisor+3,f,c
  2837  002D5E  320B               	rrcf	___lomod@divisor+2,f,c
  2838  002D60  320A               	rrcf	___lomod@divisor+1,f,c
  2839  002D62  3209               	rrcf	___lomod@divisor,f,c
  2840  002D64  2E11               	decfsz	___lomod@counter,f,c
  2841  002D66  D7D3               	goto	u4320
  2842  002D68                     l747:
  2843  002D68  C001  F001         	movff	___lomod@dividend,?___lomod
  2844  002D6C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2845  002D70  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2846  002D74  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2847  002D78  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2848  002D7C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2849  002D80  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2850  002D84  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2851  002D88  0012               	return		;funcret
  2852  002D8A                     __end_of___lomod:
  2853                           	opt callstack 0
  2854                           
  2855 ;; *************** function ___lodiv *****************
  2856 ;; Defined at:
  2857 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  dividend        8    0[COMRAM] unsigned long long 
  2860 ;;  divisor         8    8[COMRAM] unsigned long long 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  quotient        8   16[COMRAM] unsigned long long 
  2863 ;;  counter         1   24[COMRAM] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  8    0[COMRAM] unsigned long long 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2873 ;;      Params:        16       0       0       0       0       0       0
  2874 ;;      Locals:         9       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0
  2876 ;;      Totals:        25       0       0       0       0       0       0
  2877 ;;Total ram usage:       25 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_utoa
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text6
  2887  0029BC                     __ptext6:
  2888                           	opt callstack 0
  2889  0029BC                     ___lodiv:
  2890                           	opt callstack 26
  2891                           
  2892                           ;incstack = 0
  2893  0029BC  EE20  F011         	lfsr	2,___lodiv@quotient
  2894  0029C0  0E07               	movlw	7
  2895  0029C2                     u4271:
  2896  0029C2  6ADE               	clrf	postinc2,c
  2897  0029C4  06E8               	decf	wreg,f,c
  2898  0029C6  E2FD               	bc	u4271
  2899  0029C8  5009               	movf	___lodiv@divisor,w,c
  2900  0029CA  100A               	iorwf	___lodiv@divisor+1,w,c
  2901  0029CC  100B               	iorwf	___lodiv@divisor+2,w,c
  2902  0029CE  100C               	iorwf	___lodiv@divisor+3,w,c
  2903  0029D0  100D               	iorwf	___lodiv@divisor+4,w,c
  2904  0029D2  100E               	iorwf	___lodiv@divisor+5,w,c
  2905  0029D4  100F               	iorwf	___lodiv@divisor+6,w,c
  2906  0029D6  1010               	iorwf	___lodiv@divisor+7,w,c
  2907  0029D8  B4D8               	btfsc	status,2,c
  2908  0029DA  D046               	goto	l737
  2909  0029DC  0E01               	movlw	1
  2910  0029DE  6E19               	movwf	___lodiv@counter,c
  2911  0029E0  D00A               	goto	l3599
  2912  0029E2                     l3597:
  2913  0029E2  90D8               	bcf	status,0,c
  2914  0029E4  3609               	rlcf	___lodiv@divisor,f,c
  2915  0029E6  360A               	rlcf	___lodiv@divisor+1,f,c
  2916  0029E8  360B               	rlcf	___lodiv@divisor+2,f,c
  2917  0029EA  360C               	rlcf	___lodiv@divisor+3,f,c
  2918  0029EC  360D               	rlcf	___lodiv@divisor+4,f,c
  2919  0029EE  360E               	rlcf	___lodiv@divisor+5,f,c
  2920  0029F0  360F               	rlcf	___lodiv@divisor+6,f,c
  2921  0029F2  3610               	rlcf	___lodiv@divisor+7,f,c
  2922  0029F4  2A19               	incf	___lodiv@counter,f,c
  2923  0029F6                     l3599:
  2924  0029F6  AE10               	btfss	___lodiv@divisor+7,7,c
  2925  0029F8  D7F4               	goto	l3597
  2926  0029FA                     u4290:
  2927  0029FA  90D8               	bcf	status,0,c
  2928  0029FC  3611               	rlcf	___lodiv@quotient,f,c
  2929  0029FE  3612               	rlcf	___lodiv@quotient+1,f,c
  2930  002A00  3613               	rlcf	___lodiv@quotient+2,f,c
  2931  002A02  3614               	rlcf	___lodiv@quotient+3,f,c
  2932  002A04  3615               	rlcf	___lodiv@quotient+4,f,c
  2933  002A06  3616               	rlcf	___lodiv@quotient+5,f,c
  2934  002A08  3617               	rlcf	___lodiv@quotient+6,f,c
  2935  002A0A  3618               	rlcf	___lodiv@quotient+7,f,c
  2936  002A0C  5009               	movf	___lodiv@divisor,w,c
  2937  002A0E  5C01               	subwf	___lodiv@dividend,w,c
  2938  002A10  500A               	movf	___lodiv@divisor+1,w,c
  2939  002A12  5802               	subwfb	___lodiv@dividend+1,w,c
  2940  002A14  500B               	movf	___lodiv@divisor+2,w,c
  2941  002A16  5803               	subwfb	___lodiv@dividend+2,w,c
  2942  002A18  500C               	movf	___lodiv@divisor+3,w,c
  2943  002A1A  5804               	subwfb	___lodiv@dividend+3,w,c
  2944  002A1C  500D               	movf	___lodiv@divisor+4,w,c
  2945  002A1E  5805               	subwfb	___lodiv@dividend+4,w,c
  2946  002A20  500E               	movf	___lodiv@divisor+5,w,c
  2947  002A22  5806               	subwfb	___lodiv@dividend+5,w,c
  2948  002A24  500F               	movf	___lodiv@divisor+6,w,c
  2949  002A26  5807               	subwfb	___lodiv@dividend+6,w,c
  2950  002A28  5010               	movf	___lodiv@divisor+7,w,c
  2951  002A2A  5808               	subwfb	___lodiv@dividend+7,w,c
  2952  002A2C  A0D8               	btfss	status,0,c
  2953  002A2E  D011               	goto	l3609
  2954  002A30  5009               	movf	___lodiv@divisor,w,c
  2955  002A32  5E01               	subwf	___lodiv@dividend,f,c
  2956  002A34  500A               	movf	___lodiv@divisor+1,w,c
  2957  002A36  5A02               	subwfb	___lodiv@dividend+1,f,c
  2958  002A38  500B               	movf	___lodiv@divisor+2,w,c
  2959  002A3A  5A03               	subwfb	___lodiv@dividend+2,f,c
  2960  002A3C  500C               	movf	___lodiv@divisor+3,w,c
  2961  002A3E  5A04               	subwfb	___lodiv@dividend+3,f,c
  2962  002A40  500D               	movf	___lodiv@divisor+4,w,c
  2963  002A42  5A05               	subwfb	___lodiv@dividend+4,f,c
  2964  002A44  500E               	movf	___lodiv@divisor+5,w,c
  2965  002A46  5A06               	subwfb	___lodiv@dividend+5,f,c
  2966  002A48  500F               	movf	___lodiv@divisor+6,w,c
  2967  002A4A  5A07               	subwfb	___lodiv@dividend+6,f,c
  2968  002A4C  5010               	movf	___lodiv@divisor+7,w,c
  2969  002A4E  5A08               	subwfb	___lodiv@dividend+7,f,c
  2970  002A50  8011               	bsf	___lodiv@quotient,0,c
  2971  002A52                     l3609:
  2972  002A52  90D8               	bcf	status,0,c
  2973  002A54  3210               	rrcf	___lodiv@divisor+7,f,c
  2974  002A56  320F               	rrcf	___lodiv@divisor+6,f,c
  2975  002A58  320E               	rrcf	___lodiv@divisor+5,f,c
  2976  002A5A  320D               	rrcf	___lodiv@divisor+4,f,c
  2977  002A5C  320C               	rrcf	___lodiv@divisor+3,f,c
  2978  002A5E  320B               	rrcf	___lodiv@divisor+2,f,c
  2979  002A60  320A               	rrcf	___lodiv@divisor+1,f,c
  2980  002A62  3209               	rrcf	___lodiv@divisor,f,c
  2981  002A64  2E19               	decfsz	___lodiv@counter,f,c
  2982  002A66  D7C9               	goto	u4290
  2983  002A68                     l737:
  2984  002A68  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2985  002A6C  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2986  002A70  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2987  002A74  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2988  002A78  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2989  002A7C  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2990  002A80  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2991  002A84  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2992  002A88  0012               	return		;funcret
  2993  002A8A                     __end_of___lodiv:
  2994                           	opt callstack 0
  2995                           
  2996 ;; *************** function _strncmp *****************
  2997 ;; Defined at:
  2998 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3001 ;;		 -> vfpfcnvrt@ct(3), STR_4(9), STR_3(10), 
  3002 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3003 ;;		 -> STR_20(3), STR_15(3), 
  3004 ;;  n               2    4[COMRAM] unsigned int 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3007 ;;		 -> STR_20(3), STR_15(3), 
  3008 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3009 ;;		 -> vfpfcnvrt@ct(3), STR_4(9), STR_3(10), 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2    0[COMRAM] int 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3019 ;;      Params:         6       0       0       0       0       0       0
  3020 ;;      Locals:         4       0       0       0       0       0       0
  3021 ;;      Temps:          1       0       0       0       0       0       0
  3022 ;;      Totals:        11       0       0       0       0       0       0
  3023 ;;Total ram usage:       11 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_vfpfcnvrt
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text7
  3033  002722                     __ptext7:
  3034                           	opt callstack 0
  3035  002722                     _strncmp:
  3036                           	opt callstack 27
  3037                           
  3038                           ;incstack = 0
  3039  002722  C001  F008         	movff	strncmp@_l,strncmp@l
  3040  002726  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3041  00272A  C003  F00A         	movff	strncmp@_r,strncmp@r
  3042  00272E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3043  002732  0605               	decf	strncmp@n,f,c
  3044  002734  A0D8               	btfss	status,0,c
  3045  002736  0606               	decf	strncmp@n+1,f,c
  3046  002738  2805               	incf	strncmp@n,w,c
  3047  00273A  E10F               	bnz	l4051
  3048  00273C  2806               	incf	strncmp@n+1,w,c
  3049  00273E  A4D8               	btfss	status,2,c
  3050  002740  D00C               	goto	l4051
  3051  002742  0E00               	movlw	0
  3052  002744  6E02               	movwf	?_strncmp+1,c
  3053  002746  0E00               	movlw	0
  3054  002748  6E01               	movwf	?_strncmp,c
  3055  00274A  0012               	return	
  3056  00274C                     l4049:
  3057  00274C  4A08               	infsnz	strncmp@l,f,c
  3058  00274E  2A09               	incf	strncmp@l+1,f,c
  3059  002750  4A0A               	infsnz	strncmp@r,f,c
  3060  002752  2A0B               	incf	strncmp@r+1,f,c
  3061  002754  0605               	decf	strncmp@n,f,c
  3062  002756  A0D8               	btfss	status,0,c
  3063  002758  0606               	decf	strncmp@n+1,f,c
  3064  00275A                     l4051:
  3065  00275A  C008  FFF6         	movff	strncmp@l,tblptrl
  3066  00275E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3067  002762  6AF8               	clrf	tblptru,c
  3068  002764  0E05               	movlw	(high __ramtop+-1)
  3069  002766  64F7               	cpfsgt	tblptrh,c
  3070  002768  D003               	bra	u5057
  3071  00276A  0008               	tblrd		*
  3072  00276C  50F5               	movf	tablat,w,c
  3073  00276E  D005               	bra	u5050
  3074  002770                     u5057:
  3075  002770  CFF6 FFE1          	movff	tblptrl,fsr1l
  3076  002774  CFF7 FFE2          	movff	tblptrh,fsr1h
  3077  002778  50E7               	movf	indf1,w,c
  3078  00277A                     u5050:
  3079  00277A  0900               	iorlw	0
  3080  00277C  B4D8               	btfsc	status,2,c
  3081  00277E  D027               	goto	u5090
  3082  002780  C00A  FFF6         	movff	strncmp@r,tblptrl
  3083  002784  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3084  002788                     	if	0	;tblptru may be non-zero
  3085  002788                     	endif
  3086  002788                     	if	0	;tblptru may be non-zero
  3087  002788                     	endif
  3088  002788  0008               	tblrd		*
  3089  00278A  50F5               	movf	tablat,w,c
  3090  00278C  0900               	iorlw	0
  3091  00278E  B4D8               	btfsc	status,2,c
  3092  002790  D01E               	goto	u5090
  3093  002792  5005               	movf	strncmp@n,w,c
  3094  002794  1006               	iorwf	strncmp@n+1,w,c
  3095  002796  B4D8               	btfsc	status,2,c
  3096  002798  D01A               	goto	u5090
  3097  00279A  C00A  FFF6         	movff	strncmp@r,tblptrl
  3098  00279E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3099  0027A2                     	if	0	;tblptru may be non-zero
  3100  0027A2                     	endif
  3101  0027A2                     	if	0	;tblptru may be non-zero
  3102  0027A2                     	endif
  3103  0027A2  0008               	tblrd		*
  3104  0027A4  CFF5 F007          	movff	tablat,??_strncmp
  3105  0027A8  C008  FFF6         	movff	strncmp@l,tblptrl
  3106  0027AC  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3107  0027B0  6AF8               	clrf	tblptru,c
  3108  0027B2  0E05               	movlw	(high __ramtop+-1)
  3109  0027B4  64F7               	cpfsgt	tblptrh,c
  3110  0027B6  D003               	bra	u5097
  3111  0027B8  0008               	tblrd		*
  3112  0027BA  50F5               	movf	tablat,w,c
  3113  0027BC  D005               	bra	u5095
  3114  0027BE                     u5097:
  3115  0027BE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3116  0027C2  CFF7 FFE2          	movff	tblptrh,fsr1h
  3117  0027C6  50E7               	movf	indf1,w,c
  3118  0027C8                     u5095:
  3119  0027C8  1807               	xorwf	??_strncmp,w,c
  3120  0027CA  B4D8               	btfsc	status,2,c
  3121  0027CC  D7BF               	goto	l4049
  3122  0027CE                     u5090:
  3123  0027CE  C008  FFF6         	movff	strncmp@l,tblptrl
  3124  0027D2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3125  0027D6  6AF8               	clrf	tblptru,c
  3126  0027D8  0E05               	movlw	(high __ramtop+-1)
  3127  0027DA  64F7               	cpfsgt	tblptrh,c
  3128  0027DC  D003               	bra	u5107
  3129  0027DE  0008               	tblrd		*
  3130  0027E0  50F5               	movf	tablat,w,c
  3131  0027E2  D005               	bra	u5100
  3132  0027E4                     u5107:
  3133  0027E4  CFF6 FFE1          	movff	tblptrl,fsr1l
  3134  0027E8  CFF7 FFE2          	movff	tblptrh,fsr1h
  3135  0027EC  50E7               	movf	indf1,w,c
  3136  0027EE                     u5100:
  3137  0027EE  6E07               	movwf	??_strncmp& (0+255),c
  3138  0027F0  C00A  FFF6         	movff	strncmp@r,tblptrl
  3139  0027F4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3140  0027F8                     	if	0	;tblptru may be non-zero
  3141  0027F8                     	endif
  3142  0027F8                     	if	0	;tblptru may be non-zero
  3143  0027F8                     	endif
  3144  0027F8  0008               	tblrd		*
  3145  0027FA  50F5               	movf	tablat,w,c
  3146  0027FC  5C07               	subwf	??_strncmp,w,c
  3147  0027FE  6E01               	movwf	?_strncmp,c
  3148  002800  6A02               	clrf	?_strncmp+1,c
  3149  002802  A0D8               	btfss	status,0,c
  3150  002804  0602               	decf	?_strncmp+1,f,c
  3151  002806  0012               	return		;funcret
  3152  002808                     __end_of_strncmp:
  3153                           	opt callstack 0
  3154                           
  3155 ;; *************** function _efgtoa *****************
  3156 ;; Defined at:
  3157 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  3160 ;;		 -> sprintf@f(6), 
  3161 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  3162 ;;  c               1   90[COMRAM] unsigned char 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  u               4   52[BANK0 ] unsigned char 
  3165 ;;  g               4   44[BANK0 ] unsigned char 
  3166 ;;  l               4   38[BANK0 ] unsigned char 
  3167 ;;  h               4   34[BANK0 ] unsigned char 
  3168 ;;  ou              4    0[BANK0 ] unsigned char 
  3169 ;;  n               2   50[BANK0 ] int 
  3170 ;;  e               2   48[BANK0 ] int 
  3171 ;;  i               2   42[BANK0 ] int 
  3172 ;;  w               2   31[BANK0 ] int 
  3173 ;;  p               2   28[BANK0 ] int 
  3174 ;;  sign            2   26[BANK0 ] int 
  3175 ;;  d               2   24[BANK0 ] int 
  3176 ;;  ne              2   22[BANK0 ] int 
  3177 ;;  m               2   20[BANK0 ] int 
  3178 ;;  pp              2   18[BANK0 ] int 
  3179 ;;  t               2   16[BANK0 ] int 
  3180 ;;  mode            1   33[BANK0 ] unsigned char 
  3181 ;;  nmode           1   30[BANK0 ] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  2   84[COMRAM] int 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3191 ;;      Params:         7       0       0       0       0       0       0
  3192 ;;      Locals:         0      56       0       0       0       0       0
  3193 ;;      Temps:          5       0       0       0       0       0       0
  3194 ;;      Totals:        12      56       0       0       0       0       0
  3195 ;;Total ram usage:       68 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    4
  3198 ;; This function calls:
  3199 ;;		___awdiv
  3200 ;;		___awmod
  3201 ;;		___fladd
  3202 ;;		___fldiv
  3203 ;;		___fleq
  3204 ;;		___flge
  3205 ;;		___flmul
  3206 ;;		___flneg
  3207 ;;		___flsub
  3208 ;;		___fltol
  3209 ;;		___fpclassifyf
  3210 ;;		_floorf
  3211 ;;		_isupper
  3212 ;;		_pad
  3213 ;;		_strcpy
  3214 ;;		_tolower
  3215 ;; This function is called by:
  3216 ;;		_vfpfcnvrt
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text8
  3221  000638                     __ptext8:
  3222                           	opt callstack 0
  3223  000638                     _efgtoa:
  3224                           	opt callstack 23
  3225                           
  3226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  3227                           
  3228                           ;incstack = 0
  3229  000638  0E00               	movlw	0
  3230  00063A  0100               	movlb	0	; () banked
  3231  00063C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3232  00063E  0E00               	movlw	0
  3233  000640  6F9A               	movwf	efgtoa@sign& (0+255),b
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  3237  000642  C057  F0AC         	movff	efgtoa@f,efgtoa@g
  3238  000646  C058  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  3239  00064A  C059  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  3240  00064E  C05A  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  3244  000652  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  3245  000654  D016               	goto	l3677
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  3249  000656  0E00               	movlw	0
  3250  000658  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  3251  00065A  0E01               	movlw	1
  3252  00065C  6F9A               	movwf	efgtoa@sign& (0+255),b
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  3256  00065E  C0AC  F001         	movff	efgtoa@g,___flneg@f1
  3257  000662  C0AD  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3258  000666  C0AE  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3259  00066A  C0AF  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3260  00066E  EC2B  F01A         	call	___flneg	;wreg free
  3261  000672  C001  F0AC         	movff	?___flneg,efgtoa@g
  3262  000676  C002  F0AD         	movff	?___flneg+1,efgtoa@g+1
  3263  00067A  C003  F0AE         	movff	?___flneg+2,efgtoa@g+2
  3264  00067E  C004  F0AF         	movff	?___flneg+3,efgtoa@g+3
  3265  000682                     l3677:
  3266                           
  3267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  3268  000682  0E00               	movlw	0
  3269  000684  0100               	movlb	0	; () banked
  3270  000686  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  3271  000688  0E00               	movlw	0
  3272  00068A  6FB2               	movwf	efgtoa@n& (0+255),b
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  3276  00068C  C0EE  F09F         	movff	_width,efgtoa@w
  3277  000690  C0EF  F0A0         	movff	_width+1,efgtoa@w+1
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  3281  000694  519A               	movf	efgtoa@sign& (0+255),w,b
  3282  000696  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3283  000698  A4D8               	btfss	status,2,c
  3284  00069A  D002               	goto	u4400
  3285                           
  3286                           ; BSR set to: 0
  3287  00069C  A5F2               	btfss	_flags& (0+255),2,b
  3288  00069E  D013               	goto	l3697
  3289  0006A0                     u4400:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  3293  0006A0  519A               	movf	efgtoa@sign& (0+255),w,b
  3294  0006A2  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3295  0006A4  A4D8               	btfss	status,2,c
  3296  0006A6  D004               	goto	l3689
  3297                           
  3298                           ; BSR set to: 0
  3299  0006A8  0E00               	movlw	0
  3300  0006AA  6F85               	movwf	(_efgtoa$474+1)& (0+255),b
  3301  0006AC  0E2B               	movlw	43
  3302  0006AE  D003               	goto	L3
  3303  0006B0                     l3689:
  3304                           
  3305                           ; BSR set to: 0
  3306  0006B0  0E00               	movlw	0
  3307  0006B2  6F85               	movwf	(_efgtoa$474+1)& (0+255),b
  3308  0006B4  0E2D               	movlw	45
  3309  0006B6                     L3:
  3310  0006B6  6F84               	movwf	_efgtoa$474& (0+255),b
  3311                           
  3312                           ; BSR set to: 0
  3313  0006B8  C084  F100         	movff	_efgtoa$474,_dbuf
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  3317  0006BC  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3318  0006BE  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  3322  0006C0  079F               	decf	efgtoa@w& (0+255),f,b
  3323  0006C2  A0D8               	btfss	status,0,c
  3324  0006C4  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3325  0006C6                     l3697:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3329  0006C6  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  3330  0006CA  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3331  0006CE  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3332  0006D2  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3333  0006D6  EC45  F015         	call	___fpclassifyf	;wreg free
  3334  0006DA  0401               	decf	?___fpclassifyf,w,c
  3335  0006DC  1002               	iorwf	?___fpclassifyf+1,w,c
  3336  0006DE  A4D8               	btfss	status,2,c
  3337  0006E0  D04C               	goto	l3715
  3338  0006E2  0EBF               	movlw	191
  3339  0006E4  6E5C               	movwf	??_efgtoa& (0+255),c
  3340  0006E6  0EFF               	movlw	255
  3341  0006E8  6E5D               	movwf	(??_efgtoa+1)& (0+255),c
  3342  0006EA  505B               	movf	efgtoa@c,w,c
  3343  0006EC  6E5E               	movwf	(??_efgtoa+2)& (0+255),c
  3344  0006EE  6A5F               	clrf	(??_efgtoa+3)& (0+255),c
  3345  0006F0  505C               	movf	??_efgtoa,w,c
  3346  0006F2  265E               	addwf	??_efgtoa+2,f,c
  3347  0006F4  505D               	movf	??_efgtoa+1,w,c
  3348  0006F6  225F               	addwfc	??_efgtoa+3,f,c
  3349  0006F8  505F               	movf	??_efgtoa+3,w,c
  3350  0006FA  E106               	bnz	u4430
  3351  0006FC  0E1A               	movlw	26
  3352  0006FE  5C5E               	subwf	??_efgtoa+2,w,c
  3353  000700  B0D8               	btfsc	status,0,c
  3354  000702  D002               	goto	u4430
  3355  000704  0E01               	movlw	1
  3356  000706  D001               	goto	u4440
  3357  000708                     u4430:
  3358  000708  0E00               	movlw	0
  3359  00070A                     u4440:
  3360  00070A  0100               	movlb	0	; () banked
  3361  00070C  6F86               	movwf	_efgtoa$475& (0+255),b
  3362  00070E  6B87               	clrf	(_efgtoa$475+1)& (0+255),b
  3363                           
  3364                           ; BSR set to: 0
  3365  000710  5186               	movf	_efgtoa$475& (0+255),w,b
  3366  000712  1187               	iorwf	(_efgtoa$475+1)& (0+255),w,b
  3367  000714  B4D8               	btfsc	status,2,c
  3368  000716  D00D               	goto	l3707
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  3372  000718  0E00               	movlw	low _dbuf
  3373  00071A  25B2               	addwf	efgtoa@n& (0+255),w,b
  3374  00071C  6E01               	movwf	strcpy@dest,c
  3375  00071E  0E01               	movlw	high _dbuf
  3376  000720  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3377  000722  6E02               	movwf	strcpy@dest+1,c
  3378  000724  0E20               	movlw	low STR_5
  3379  000726  6E03               	movwf	strcpy@src,c
  3380  000728  0E06               	movlw	high STR_5
  3381  00072A  6E04               	movwf	strcpy@src+1,c
  3382  00072C  EC26  F019         	call	_strcpy	;wreg free
  3383                           
  3384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  3385  000730  D00C               	goto	l3709
  3386  000732                     l3707:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  3390  000732  0E00               	movlw	low _dbuf
  3391  000734  25B2               	addwf	efgtoa@n& (0+255),w,b
  3392  000736  6E01               	movwf	strcpy@dest,c
  3393  000738  0E01               	movlw	high _dbuf
  3394  00073A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3395  00073C  6E02               	movwf	strcpy@dest+1,c
  3396  00073E  0E28               	movlw	low STR_6
  3397  000740  6E03               	movwf	strcpy@src,c
  3398  000742  0E06               	movlw	high STR_6
  3399  000744  6E04               	movwf	strcpy@src+1,c
  3400  000746  EC26  F019         	call	_strcpy	;wreg free
  3401  00074A                     l3709:
  3402                           
  3403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  3404  00074A  0100               	movlb	0	; () banked
  3405  00074C  0EFD               	movlw	253
  3406  00074E  279F               	addwf	efgtoa@w& (0+255),f,b
  3407  000750  0EFF               	movlw	255
  3408  000752  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3409  000754                     l3711:
  3410                           
  3411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  3412  000754  C055  F011         	movff	efgtoa@fp,pad@fp
  3413  000758  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3414  00075C  0E00               	movlw	low _dbuf
  3415  00075E  6E13               	movwf	pad@buf,c
  3416  000760  0E01               	movlw	high _dbuf
  3417  000762  6E14               	movwf	pad@buf+1,c
  3418  000764  C09F  F015         	movff	efgtoa@w,pad@p
  3419  000768  C0A0  F016         	movff	efgtoa@w+1,pad@p+1
  3420  00076C  EC15  F017         	call	_pad	;wreg free
  3421  000770  C011  F055         	movff	?_pad,?_efgtoa
  3422  000774  C012  F056         	movff	?_pad+1,?_efgtoa+1
  3423  000778  0012               	return	
  3424  00077A                     l3715:
  3425                           
  3426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3427  00077A  C0AC  F001         	movff	efgtoa@g,___fpclassifyf@x
  3428  00077E  C0AD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3429  000782  C0AE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3430  000786  C0AF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3431  00078A  EC45  F015         	call	___fpclassifyf	;wreg free
  3432  00078E  5001               	movf	?___fpclassifyf,w,c
  3433  000790  1002               	iorwf	?___fpclassifyf+1,w,c
  3434  000792  A4D8               	btfss	status,2,c
  3435  000794  D035               	goto	l3733
  3436  000796  0EBF               	movlw	191
  3437  000798  6E5C               	movwf	??_efgtoa& (0+255),c
  3438  00079A  0EFF               	movlw	255
  3439  00079C  6E5D               	movwf	(??_efgtoa+1)& (0+255),c
  3440  00079E  505B               	movf	efgtoa@c,w,c
  3441  0007A0  6E5E               	movwf	(??_efgtoa+2)& (0+255),c
  3442  0007A2  6A5F               	clrf	(??_efgtoa+3)& (0+255),c
  3443  0007A4  505C               	movf	??_efgtoa,w,c
  3444  0007A6  265E               	addwf	??_efgtoa+2,f,c
  3445  0007A8  505D               	movf	??_efgtoa+1,w,c
  3446  0007AA  225F               	addwfc	??_efgtoa+3,f,c
  3447  0007AC  505F               	movf	??_efgtoa+3,w,c
  3448  0007AE  E106               	bnz	u4470
  3449  0007B0  0E1A               	movlw	26
  3450  0007B2  5C5E               	subwf	??_efgtoa+2,w,c
  3451  0007B4  B0D8               	btfsc	status,0,c
  3452  0007B6  D002               	goto	u4470
  3453  0007B8  0E01               	movlw	1
  3454  0007BA  D001               	goto	u4480
  3455  0007BC                     u4470:
  3456  0007BC  0E00               	movlw	0
  3457  0007BE                     u4480:
  3458  0007BE  0100               	movlb	0	; () banked
  3459  0007C0  6F88               	movwf	_efgtoa$479& (0+255),b
  3460  0007C2  6B89               	clrf	(_efgtoa$479+1)& (0+255),b
  3461                           
  3462                           ; BSR set to: 0
  3463  0007C4  5188               	movf	_efgtoa$479& (0+255),w,b
  3464  0007C6  1189               	iorwf	(_efgtoa$479+1)& (0+255),w,b
  3465  0007C8  B4D8               	btfsc	status,2,c
  3466  0007CA  D00D               	goto	l3725
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  3470  0007CC  0E00               	movlw	low _dbuf
  3471  0007CE  25B2               	addwf	efgtoa@n& (0+255),w,b
  3472  0007D0  6E01               	movwf	strcpy@dest,c
  3473  0007D2  0E01               	movlw	high _dbuf
  3474  0007D4  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3475  0007D6  6E02               	movwf	strcpy@dest+1,c
  3476  0007D8  0E24               	movlw	low STR_9
  3477  0007DA  6E03               	movwf	strcpy@src,c
  3478  0007DC  0E06               	movlw	high STR_9
  3479  0007DE  6E04               	movwf	strcpy@src+1,c
  3480  0007E0  EC26  F019         	call	_strcpy	;wreg free
  3481                           
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  3483  0007E4  D7B2               	goto	l3709
  3484  0007E6                     l3725:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  3488  0007E6  0E00               	movlw	low _dbuf
  3489  0007E8  25B2               	addwf	efgtoa@n& (0+255),w,b
  3490  0007EA  6E01               	movwf	strcpy@dest,c
  3491  0007EC  0E01               	movlw	high _dbuf
  3492  0007EE  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3493  0007F0  6E02               	movwf	strcpy@dest+1,c
  3494  0007F2  0E2C               	movlw	low STR_10
  3495  0007F4  6E03               	movwf	strcpy@src,c
  3496  0007F6  0E06               	movlw	high STR_10
  3497  0007F8  6E04               	movwf	strcpy@src+1,c
  3498  0007FA  EC26  F019         	call	_strcpy	;wreg free
  3499  0007FE  D7A5               	goto	l3709
  3500  000800                     l3733:
  3501                           
  3502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  3503  000800  0E00               	movlw	0
  3504  000802  0100               	movlb	0	; () banked
  3505  000804  6FB4               	movwf	efgtoa@u& (0+255),b
  3506  000806  0E00               	movlw	0
  3507  000808  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3508  00080A  0E80               	movlw	128
  3509  00080C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3510  00080E  0E3F               	movlw	63
  3511  000810  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3512                           
  3513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  3514  000812  0E00               	movlw	0
  3515  000814  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3516  000816  0E00               	movlw	0
  3517  000818  6FB0               	movwf	efgtoa@e& (0+255),b
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  3521  00081A  C0AC  F001         	movff	efgtoa@g,___fleq@ff1
  3522  00081E  C0AD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3523  000822  C0AE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3524  000826  C0AF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3525  00082A  0E00               	movlw	0
  3526  00082C  6E05               	movwf	___fleq@ff2,c
  3527  00082E  0E00               	movlw	0
  3528  000830  6E06               	movwf	___fleq@ff2+1,c
  3529  000832  0E00               	movlw	0
  3530  000834  6E07               	movwf	___fleq@ff2+2,c
  3531  000836  0E00               	movlw	0
  3532  000838  6E08               	movwf	___fleq@ff2+3,c
  3533  00083A  ECAA  F017         	call	___fleq	;wreg free
  3534  00083E  A0D8               	btfss	status,0,c
  3535  000840  D01E               	goto	l3743
  3536  000842  D076               	goto	u4520
  3537  000844                     l3739:
  3538                           
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  3540  000844  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  3541  000848  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  3542  00084C  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  3543  000850  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  3544  000854  0E00               	movlw	0
  3545  000856  6E13               	movwf	___flmul@a,c
  3546  000858  0E00               	movlw	0
  3547  00085A  6E14               	movwf	___flmul@a+1,c
  3548  00085C  0E20               	movlw	32
  3549  00085E  6E15               	movwf	___flmul@a+2,c
  3550  000860  0E41               	movlw	65
  3551  000862  6E16               	movwf	___flmul@a+3,c
  3552  000864  EC1D  F00B         	call	___flmul	;wreg free
  3553  000868  C00F  F0B4         	movff	?___flmul,efgtoa@u
  3554  00086C  C010  F0B5         	movff	?___flmul+1,efgtoa@u+1
  3555  000870  C011  F0B6         	movff	?___flmul+2,efgtoa@u+2
  3556  000874  C012  F0B7         	movff	?___flmul+3,efgtoa@u+3
  3557                           
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  3559  000878  0100               	movlb	0	; () banked
  3560  00087A  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  3561  00087C  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3562  00087E                     l3743:
  3563                           
  3564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  3565  00087E  C0AC  F028         	movff	efgtoa@g,___flge@ff1
  3566  000882  C0AD  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3567  000886  C0AE  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3568  00088A  C0AF  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3569  00088E  0E00               	movlw	0
  3570  000890  6E13               	movwf	___flmul@a,c
  3571  000892  0E00               	movlw	0
  3572  000894  6E14               	movwf	___flmul@a+1,c
  3573  000896  0E20               	movlw	32
  3574  000898  6E15               	movwf	___flmul@a+2,c
  3575  00089A  0E41               	movlw	65
  3576  00089C  6E16               	movwf	___flmul@a+3,c
  3577  00089E  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  3578  0008A2  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  3579  0008A6  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  3580  0008AA  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  3581  0008AE  EC1D  F00B         	call	___flmul	;wreg free
  3582  0008B2  C00F  F02C         	movff	?___flmul,___flge@ff2
  3583  0008B6  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3584  0008BA  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3585  0008BE  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3586  0008C2  EC76  F014         	call	___flge	;wreg free
  3587  0008C6  A0D8               	btfss	status,0,c
  3588  0008C8  D01F               	goto	l3749
  3589  0008CA  D7BC               	goto	l3739
  3590  0008CC                     l3745:
  3591                           
  3592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  3593  0008CC  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  3594  0008D0  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3595  0008D4  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3596  0008D8  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3597  0008DC  0E00               	movlw	0
  3598  0008DE  6E2C               	movwf	___fldiv@a,c
  3599  0008E0  0E00               	movlw	0
  3600  0008E2  6E2D               	movwf	___fldiv@a+1,c
  3601  0008E4  0E20               	movlw	32
  3602  0008E6  6E2E               	movwf	___fldiv@a+2,c
  3603  0008E8  0E41               	movlw	65
  3604  0008EA  6E2F               	movwf	___fldiv@a+3,c
  3605  0008EC  EC4C  F00E         	call	___fldiv	;wreg free
  3606  0008F0  C028  F0B4         	movff	?___fldiv,efgtoa@u
  3607  0008F4  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3608  0008F8  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3609  0008FC  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3610                           
  3611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  3612  000900  0100               	movlb	0	; () banked
  3613  000902  07B0               	decf	efgtoa@e& (0+255),f,b
  3614  000904  A0D8               	btfss	status,0,c
  3615  000906  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  3616  000908                     l3749:
  3617                           
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  3619  000908  C0AC  F028         	movff	efgtoa@g,___flge@ff1
  3620  00090C  C0AD  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3621  000910  C0AE  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3622  000914  C0AF  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3623  000918  C0B4  F02C         	movff	efgtoa@u,___flge@ff2
  3624  00091C  C0B5  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3625  000920  C0B6  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3626  000924  C0B7  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3627  000928  EC76  F014         	call	___flge	;wreg free
  3628  00092C  A0D8               	btfss	status,0,c
  3629  00092E  D7CE               	goto	l3745
  3630  000930                     u4520:
  3631                           
  3632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  3633  000930  C05B  F007         	movff	efgtoa@c,tolower@c
  3634  000934  6A08               	clrf	tolower@c+1,c
  3635  000936  EC77  F019         	call	_tolower	;wreg free
  3636  00093A  5007               	movf	?_tolower,w,c
  3637  00093C  0100               	movlb	0	; () banked
  3638  00093E  6FA1               	movwf	efgtoa@mode& (0+255),b
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  3642  000940  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  3646  000944  0E67               	movlw	103
  3647  000946  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3648  000948  A4D8               	btfss	status,2,c
  3649  00094A  D019               	goto	l3765
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  3653  00094C  51F0               	movf	_prec& (0+255),w,b
  3654  00094E  11F1               	iorwf	(_prec+1)& (0+255),w,b
  3655  000950  A4D8               	btfss	status,2,c
  3656  000952  D004               	goto	l3761
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  3660  000954  0E00               	movlw	0
  3661  000956  6FF1               	movwf	(_prec+1)& (0+255),b
  3662  000958  0E01               	movlw	1
  3663  00095A  6FF0               	movwf	_prec& (0+255),b
  3664  00095C                     l3761:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  3668  00095C  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3669  00095E  D005               	goto	u4550
  3670  000960  51F1               	movf	(_prec+1)& (0+255),w,b
  3671  000962  E108               	bnz	l170
  3672  000964  05F0               	decf	_prec& (0+255),w,b
  3673  000966  B0D8               	btfsc	status,0,c
  3674  000968  D005               	goto	l170
  3675  00096A                     u4550:
  3676                           
  3677                           ; BSR set to: 0
  3678  00096A  0E00               	movlw	0
  3679  00096C  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  3680  00096E  0E06               	movlw	6
  3681  000970  6F9C               	movwf	efgtoa@p& (0+255),b
  3682  000972  D008               	goto	l3771
  3683  000974                     l170:
  3684                           
  3685                           ; BSR set to: 0
  3686  000974  C0F0  F09C         	movff	_prec,efgtoa@p
  3687  000978  C0F1  F09D         	movff	_prec+1,efgtoa@p+1
  3688  00097C  D003               	goto	l3771
  3689  00097E                     l3765:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  3693  00097E  AFF1               	btfss	(_prec+1)& (0+255),7,b
  3694  000980  D7F9               	goto	l170
  3695  000982  D7F3               	goto	u4550
  3696  000984                     l3771:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  3700  000984  0E67               	movlw	103
  3701  000986  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3702  000988  A4D8               	btfss	status,2,c
  3703  00098A  D022               	goto	l3781
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  3707  00098C  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3708  00098E  D006               	goto	u4580
  3709  000990  0EFC               	movlw	252
  3710  000992  5DB0               	subwf	efgtoa@e& (0+255),w,b
  3711  000994  0EFF               	movlw	255
  3712  000996  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3713  000998  A0D8               	btfss	status,0,c
  3714  00099A  D018               	goto	l3779
  3715  00099C                     u4580:
  3716                           
  3717                           ; BSR set to: 0
  3718  00099C  0EFF               	movlw	255
  3719  00099E  6E5C               	movwf	??_efgtoa& (0+255),c
  3720  0009A0  0EFF               	movlw	255
  3721  0009A2  6E5D               	movwf	(??_efgtoa+1)& (0+255),c
  3722  0009A4  C09C  F05E         	movff	efgtoa@p,??_efgtoa+2
  3723  0009A8  C09D  F05F         	movff	efgtoa@p+1,??_efgtoa+3
  3724  0009AC  505C               	movf	??_efgtoa,w,c
  3725  0009AE  265E               	addwf	??_efgtoa+2,f,c
  3726  0009B0  505D               	movf	??_efgtoa+1,w,c
  3727  0009B2  225F               	addwfc	??_efgtoa+3,f,c
  3728  0009B4  51B0               	movf	efgtoa@e& (0+255),w,b
  3729  0009B6  5C5E               	subwf	??_efgtoa+2,w,c
  3730  0009B8  505F               	movf	??_efgtoa+3,w,c
  3731  0009BA  0A80               	xorlw	128
  3732  0009BC  6E60               	movwf	(??_efgtoa+4)& (0+255),c
  3733  0009BE  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3734  0009C0  0A80               	xorlw	128
  3735  0009C2  5860               	subwfb	(??_efgtoa+4)& (0+255),w,c
  3736  0009C4  A0D8               	btfss	status,0,c
  3737  0009C6  D002               	goto	l3779
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  3741  0009C8  0E66               	movlw	102
  3742  0009CA  D001               	goto	L4
  3743  0009CC                     l3779:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  3747  0009CC  0E65               	movlw	101
  3748  0009CE                     L4:
  3749  0009CE  6F9E               	movwf	efgtoa@nmode& (0+255),b
  3750  0009D0                     l3781:
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  3754  0009D0  C09C  F094         	movff	efgtoa@p,efgtoa@m
  3755  0009D4  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  3759  0009D8  0E67               	movlw	103
  3760  0009DA  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3761  0009DC  A4D8               	btfss	status,2,c
  3762  0009DE  D005               	goto	u4620
  3763                           
  3764                           ; BSR set to: 0
  3765  0009E0  0E66               	movlw	102
  3766  0009E2  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3767  0009E4  B4D8               	btfsc	status,2,c
  3768                           
  3769                           ; BSR set to: 0
  3770  0009E6  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3771  0009E8  D002               	goto	l3791
  3772  0009EA                     u4620:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  3776  0009EA  4B94               	infsnz	efgtoa@m& (0+255),f,b
  3777  0009EC  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  3778  0009EE                     l3791:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  3782  0009EE  0E66               	movlw	102
  3783  0009F0  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3784  0009F2  A4D8               	btfss	status,2,c
  3785  0009F4  D016               	goto	l3801
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  3789  0009F6  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3790  0009F8  D00C               	goto	l3797
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  3794  0009FA  0E00               	movlw	0
  3795  0009FC  6FB4               	movwf	efgtoa@u& (0+255),b
  3796  0009FE  0E00               	movlw	0
  3797  000A00  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3798  000A02  0E80               	movlw	128
  3799  000A04  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3800  000A06  0E3F               	movlw	63
  3801  000A08  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3802                           
  3803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  3804  000A0A  0E00               	movlw	0
  3805  000A0C  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3806  000A0E  0E00               	movlw	0
  3807  000A10  6FB0               	movwf	efgtoa@e& (0+255),b
  3808  000A12                     l3797:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  3812  000A12  0E67               	movlw	103
  3813  000A14  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3814  000A16  B4D8               	btfsc	status,2,c
  3815  000A18  D004               	goto	l3801
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  3819  000A1A  51B0               	movf	efgtoa@e& (0+255),w,b
  3820  000A1C  2794               	addwf	efgtoa@m& (0+255),f,b
  3821  000A1E  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3822  000A20  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3823  000A22                     l3801:
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  3827  000A22  0E00               	movlw	0
  3828  000A24  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3829  000A26  0E00               	movlw	0
  3830  000A28  6FAA               	movwf	efgtoa@i& (0+255),b
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  3834  000A2A  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  3835  000A2E  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  3836  000A32  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  3837  000A36  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  3841  000A3A  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  3842  000A3E  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  3843  000A42  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  3844  000A46  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  3845                           
  3846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3847  000A4A  D07B               	goto	l3815
  3848  000A4C                     l3807:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  3852  000A4C  C0A2  F028         	movff	efgtoa@h,___fldiv@b
  3853  000A50  C0A3  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3854  000A54  C0A4  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3855  000A58  C0A5  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3856  000A5C  C0B4  F02C         	movff	efgtoa@u,___fldiv@a
  3857  000A60  C0B5  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3858  000A64  C0B6  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3859  000A68  C0B7  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3860  000A6C  EC4C  F00E         	call	___fldiv	;wreg free
  3861  000A70  C028  F041         	movff	?___fldiv,floorf@x
  3862  000A74  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3863  000A78  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3864  000A7C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3865  000A80  EC9D  F010         	call	_floorf	;wreg free
  3866  000A84  C041  F0A6         	movff	?_floorf,efgtoa@l
  3867  000A88  C042  F0A7         	movff	?_floorf+1,efgtoa@l+1
  3868  000A8C  C043  F0A8         	movff	?_floorf+2,efgtoa@l+2
  3869  000A90  C044  F0A9         	movff	?_floorf+3,efgtoa@l+3
  3870                           
  3871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  3872  000A94  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  3873  000A98  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3874  000A9C  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3875  000AA0  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3876  000AA4  EC11  F016         	call	___fltol	;wreg free
  3877  000AA8  C001  F098         	movff	?___fltol,efgtoa@d
  3878  000AAC  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  3879                           
  3880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  3881  000AB0  C0A2  F028         	movff	efgtoa@h,___flsub@b
  3882  000AB4  C0A3  F029         	movff	efgtoa@h+1,___flsub@b+1
  3883  000AB8  C0A4  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3884  000ABC  C0A5  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3885  000AC0  C0B4  F013         	movff	efgtoa@u,___flmul@a
  3886  000AC4  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  3887  000AC8  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  3888  000ACC  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  3889  000AD0  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  3890  000AD4  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  3891  000AD8  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  3892  000ADC  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  3893  000AE0  EC1D  F00B         	call	___flmul	;wreg free
  3894  000AE4  C00F  F02C         	movff	?___flmul,___flsub@a
  3895  000AE8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3896  000AEC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3897  000AF0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3898  000AF4  EC9D  F019         	call	___flsub	;wreg free
  3899  000AF8  C028  F0A2         	movff	?___flsub,efgtoa@h
  3900  000AFC  C029  F0A3         	movff	?___flsub+1,efgtoa@h+1
  3901  000B00  C02A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  3902  000B04  C02B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  3903                           
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  3905  000B08  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  3906  000B0C  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3907  000B10  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3908  000B14  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3909  000B18  0E00               	movlw	0
  3910  000B1A  6E2C               	movwf	___fldiv@a,c
  3911  000B1C  0E00               	movlw	0
  3912  000B1E  6E2D               	movwf	___fldiv@a+1,c
  3913  000B20  0E20               	movlw	32
  3914  000B22  6E2E               	movwf	___fldiv@a+2,c
  3915  000B24  0E41               	movlw	65
  3916  000B26  6E2F               	movwf	___fldiv@a+3,c
  3917  000B28  EC4C  F00E         	call	___fldiv	;wreg free
  3918  000B2C  C028  F0B4         	movff	?___fldiv,efgtoa@u
  3919  000B30  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3920  000B34  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3921  000B38  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3922                           
  3923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  3924  000B3C  0100               	movlb	0	; () banked
  3925  000B3E  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  3926  000B40  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  3927  000B42                     l3815:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  3931  000B42  5194               	movf	efgtoa@m& (0+255),w,b
  3932  000B44  5DAA               	subwf	efgtoa@i& (0+255),w,b
  3933  000B46  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  3934  000B48  0A80               	xorlw	128
  3935  000B4A  6E5C               	movwf	??_efgtoa& (0+255),c
  3936  000B4C  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  3937  000B4E  0A80               	xorlw	128
  3938  000B50  585C               	subwfb	??_efgtoa& (0+255),w,c
  3939  000B52  A0D8               	btfss	status,0,c
  3940  000B54  D77B               	goto	l3807
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  3944  000B56  C0B4  F00F         	movff	efgtoa@u,___flmul@b
  3945  000B5A  C0B5  F010         	movff	efgtoa@u+1,___flmul@b+1
  3946  000B5E  C0B6  F011         	movff	efgtoa@u+2,___flmul@b+2
  3947  000B62  C0B7  F012         	movff	efgtoa@u+3,___flmul@b+3
  3948  000B66  0E00               	movlw	0
  3949  000B68  6E13               	movwf	___flmul@a,c
  3950  000B6A  0E00               	movlw	0
  3951  000B6C  6E14               	movwf	___flmul@a+1,c
  3952  000B6E  0EA0               	movlw	160
  3953  000B70  6E15               	movwf	___flmul@a+2,c
  3954  000B72  0E40               	movlw	64
  3955  000B74  6E16               	movwf	___flmul@a+3,c
  3956  000B76  EC1D  F00B         	call	___flmul	;wreg free
  3957  000B7A  C00F  F0A6         	movff	?___flmul,efgtoa@l
  3958  000B7E  C010  F0A7         	movff	?___flmul+1,efgtoa@l+1
  3959  000B82  C011  F0A8         	movff	?___flmul+2,efgtoa@l+2
  3960  000B86  C012  F0A9         	movff	?___flmul+3,efgtoa@l+3
  3961                           
  3962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  3963  000B8A  C0A2  F028         	movff	efgtoa@h,___flge@ff1
  3964  000B8E  C0A3  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3965  000B92  C0A4  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3966  000B96  C0A5  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3967  000B9A  C0A6  F02C         	movff	efgtoa@l,___flge@ff2
  3968  000B9E  C0A7  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3969  000BA2  C0A8  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3970  000BA6  C0A9  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3971  000BAA  EC76  F014         	call	___flge	;wreg free
  3972  000BAE  B0D8               	btfsc	status,0,c
  3973  000BB0  D003               	goto	l3823
  3974                           
  3975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  3976  000BB2  0E00               	movlw	0
  3977  000BB4  0100               	movlb	0	; () banked
  3978  000BB6  D018               	goto	L5
  3979  000BB8                     l3823:
  3980                           
  3981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  3982  000BB8  C0A2  F001         	movff	efgtoa@h,___fleq@ff1
  3983  000BBC  C0A3  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3984  000BC0  C0A4  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3985  000BC4  C0A5  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3986  000BC8  C0A6  F005         	movff	efgtoa@l,___fleq@ff2
  3987  000BCC  C0A7  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3988  000BD0  C0A8  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3989  000BD4  C0A9  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3990  000BD8  ECAA  F017         	call	___fleq	;wreg free
  3991  000BDC  A0D8               	btfss	status,0,c
  3992  000BDE  D00B               	goto	l3829
  3993  000BE0  0100               	movlb	0	; () banked
  3994  000BE2  B198               	btfsc	efgtoa@d& (0+255),0,b
  3995  000BE4  D008               	goto	l3829
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  3999  000BE6  0E00               	movlw	0
  4000  000BE8                     L5:
  4001  000BE8  6FA6               	movwf	efgtoa@l& (0+255),b
  4002  000BEA  0E00               	movlw	0
  4003  000BEC  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  4004  000BEE  0E00               	movlw	0
  4005  000BF0  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  4006  000BF2  0E00               	movlw	0
  4007  000BF4  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  4008  000BF6                     l3829:
  4009                           
  4010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  4011  000BF6  C0AC  F001         	movff	efgtoa@g,___fladd@b
  4012  000BFA  C0AD  F002         	movff	efgtoa@g+1,___fladd@b+1
  4013  000BFE  C0AE  F003         	movff	efgtoa@g+2,___fladd@b+2
  4014  000C02  C0AF  F004         	movff	efgtoa@g+3,___fladd@b+3
  4015  000C06  C0A6  F005         	movff	efgtoa@l,___fladd@a
  4016  000C0A  C0A7  F006         	movff	efgtoa@l+1,___fladd@a+1
  4017  000C0E  C0A8  F007         	movff	efgtoa@l+2,___fladd@a+2
  4018  000C12  C0A9  F008         	movff	efgtoa@l+3,___fladd@a+3
  4019  000C16  ECC6  F00C         	call	___fladd	;wreg free
  4020  000C1A  C001  F0A2         	movff	?___fladd,efgtoa@h
  4021  000C1E  C002  F0A3         	movff	?___fladd+1,efgtoa@h+1
  4022  000C22  C003  F0A4         	movff	?___fladd+2,efgtoa@h+2
  4023  000C26  C004  F0A5         	movff	?___fladd+3,efgtoa@h+3
  4024                           
  4025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  4026  000C2A  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  4027  000C2E  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  4028  000C32  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  4029  000C36  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  4030                           
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  4032  000C3A  0E65               	movlw	101
  4033  000C3C  0100               	movlb	0	; () banked
  4034  000C3E  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4035  000C40  B4D8               	btfsc	status,2,c
  4036  000C42  D005               	goto	l3837
  4037                           
  4038                           ; BSR set to: 0
  4039  000C44  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  4040  000C48  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  4041  000C4C  D004               	goto	l196
  4042  000C4E                     l3837:
  4043                           
  4044                           ; BSR set to: 0
  4045  000C4E  0E00               	movlw	0
  4046  000C50  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  4047  000C52  0E00               	movlw	0
  4048  000C54  6F96               	movwf	efgtoa@ne& (0+255),b
  4049  000C56                     l196:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  4053  000C56  0E00               	movlw	0
  4054  000C58  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4055  000C5A  0E00               	movlw	0
  4056  000C5C  6F92               	movwf	efgtoa@pp& (0+255),b
  4057                           
  4058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  4059  000C5E  0E00               	movlw	0
  4060  000C60  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  4061  000C62  0E00               	movlw	0
  4062  000C64  6F90               	movwf	efgtoa@t& (0+255),b
  4063                           
  4064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  4065  000C66  0E00               	movlw	0
  4066  000C68  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4067  000C6A  0E00               	movlw	0
  4068  000C6C  6FAA               	movwf	efgtoa@i& (0+255),b
  4069                           
  4070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4071  000C6E  D0C6               	goto	l3887
  4072  000C70                     l3839:
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  4076  000C70  C0A2  F028         	movff	efgtoa@h,___fldiv@b
  4077  000C74  C0A3  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4078  000C78  C0A4  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4079  000C7C  C0A5  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4080  000C80  C0B4  F02C         	movff	efgtoa@u,___fldiv@a
  4081  000C84  C0B5  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4082  000C88  C0B6  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4083  000C8C  C0B7  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4084  000C90  EC4C  F00E         	call	___fldiv	;wreg free
  4085  000C94  C028  F041         	movff	?___fldiv,floorf@x
  4086  000C98  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4087  000C9C  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4088  000CA0  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4089  000CA4  EC9D  F010         	call	_floorf	;wreg free
  4090  000CA8  C041  F0A6         	movff	?_floorf,efgtoa@l
  4091  000CAC  C042  F0A7         	movff	?_floorf+1,efgtoa@l+1
  4092  000CB0  C043  F0A8         	movff	?_floorf+2,efgtoa@l+2
  4093  000CB4  C044  F0A9         	movff	?_floorf+3,efgtoa@l+3
  4094                           
  4095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  4096  000CB8  C0A6  F001         	movff	efgtoa@l,___fltol@f1
  4097  000CBC  C0A7  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4098  000CC0  C0A8  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4099  000CC4  C0A9  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4100  000CC8  EC11  F016         	call	___fltol	;wreg free
  4101  000CCC  C001  F098         	movff	?___fltol,efgtoa@d
  4102  000CD0  C002  F099         	movff	?___fltol+1,efgtoa@d+1
  4103                           
  4104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4105  000CD4  0100               	movlb	0	; () banked
  4106  000CD6  B9F2               	btfsc	_flags& (0+255),4,b
  4107  000CD8  D00C               	goto	l3851
  4108                           
  4109                           ; BSR set to: 0
  4110  000CDA  5198               	movf	efgtoa@d& (0+255),w,b
  4111  000CDC  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4112  000CDE  A4D8               	btfss	status,2,c
  4113  000CE0  D008               	goto	l3851
  4114                           
  4115                           ; BSR set to: 0
  4116  000CE2  0E67               	movlw	103
  4117  000CE4  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  4118  000CE6  B4D8               	btfsc	status,2,c
  4119                           
  4120                           ; BSR set to: 0
  4121  000CE8  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4122  000CEA  D003               	goto	l3851
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  4126  000CEC  4B90               	infsnz	efgtoa@t& (0+255),f,b
  4127  000CEE  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  4128                           
  4129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  4130  000CF0  D039               	goto	l3879
  4131  000CF2                     l3851:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  4135  000CF2  5192               	movf	efgtoa@pp& (0+255),w,b
  4136  000CF4  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4137  000CF6  B4D8               	btfsc	status,2,c
  4138                           
  4139                           ; BSR set to: 0
  4140  000CF8  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  4141  000CFA  D022               	goto	l3871
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  4145  000CFC  0E00               	movlw	low _dbuf
  4146  000CFE  25B2               	addwf	efgtoa@n& (0+255),w,b
  4147  000D00  6ED9               	movwf	fsr2l,c
  4148  000D02  0E01               	movlw	high _dbuf
  4149  000D04  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4150  000D06  6EDA               	movwf	fsr2h,c
  4151  000D08  0E2E               	movlw	46
  4152  000D0A  6EDF               	movwf	indf2,c
  4153                           
  4154                           ; BSR set to: 0
  4155  000D0C  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4156  000D0E  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  4160  000D10  079F               	decf	efgtoa@w& (0+255),f,b
  4161  000D12  A0D8               	btfss	status,0,c
  4162  000D14  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  4166  000D16  0E00               	movlw	0
  4167  000D18  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  4168  000D1A  0E01               	movlw	1
  4169  000D1C  6F92               	movwf	efgtoa@pp& (0+255),b
  4170  000D1E  D010               	goto	l3871
  4171  000D20                     l3863:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  4175  000D20  0E00               	movlw	low _dbuf
  4176  000D22  25B2               	addwf	efgtoa@n& (0+255),w,b
  4177  000D24  6ED9               	movwf	fsr2l,c
  4178  000D26  0E01               	movlw	high _dbuf
  4179  000D28  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4180  000D2A  6EDA               	movwf	fsr2h,c
  4181  000D2C  0E30               	movlw	48
  4182  000D2E  6EDF               	movwf	indf2,c
  4183                           
  4184                           ; BSR set to: 0
  4185  000D30  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4186  000D32  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  4190  000D34  079F               	decf	efgtoa@w& (0+255),f,b
  4191  000D36  A0D8               	btfss	status,0,c
  4192  000D38  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  4196  000D3A  0790               	decf	efgtoa@t& (0+255),f,b
  4197  000D3C  A0D8               	btfss	status,0,c
  4198  000D3E  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  4199  000D40                     l3871:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  4203  000D40  5190               	movf	efgtoa@t& (0+255),w,b
  4204  000D42  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4205  000D44  A4D8               	btfss	status,2,c
  4206  000D46  D7EC               	goto	l3863
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  4210  000D48  0E00               	movlw	low _dbuf
  4211  000D4A  25B2               	addwf	efgtoa@n& (0+255),w,b
  4212  000D4C  6ED9               	movwf	fsr2l,c
  4213  000D4E  0E01               	movlw	high _dbuf
  4214  000D50  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4215  000D52  6EDA               	movwf	fsr2h,c
  4216  000D54  5198               	movf	efgtoa@d& (0+255),w,b
  4217  000D56  0F30               	addlw	48
  4218  000D58  6EDF               	movwf	indf2,c
  4219                           
  4220                           ; BSR set to: 0
  4221  000D5A  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4222  000D5C  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  4226  000D5E  079F               	decf	efgtoa@w& (0+255),f,b
  4227  000D60  A0D8               	btfss	status,0,c
  4228  000D62  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4229  000D64                     l3879:
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  4233  000D64  C0A2  F028         	movff	efgtoa@h,___flsub@b
  4234  000D68  C0A3  F029         	movff	efgtoa@h+1,___flsub@b+1
  4235  000D6C  C0A4  F02A         	movff	efgtoa@h+2,___flsub@b+2
  4236  000D70  C0A5  F02B         	movff	efgtoa@h+3,___flsub@b+3
  4237  000D74  C0B4  F013         	movff	efgtoa@u,___flmul@a
  4238  000D78  C0B5  F014         	movff	efgtoa@u+1,___flmul@a+1
  4239  000D7C  C0B6  F015         	movff	efgtoa@u+2,___flmul@a+2
  4240  000D80  C0B7  F016         	movff	efgtoa@u+3,___flmul@a+3
  4241  000D84  C0A6  F00F         	movff	efgtoa@l,___flmul@b
  4242  000D88  C0A7  F010         	movff	efgtoa@l+1,___flmul@b+1
  4243  000D8C  C0A8  F011         	movff	efgtoa@l+2,___flmul@b+2
  4244  000D90  C0A9  F012         	movff	efgtoa@l+3,___flmul@b+3
  4245  000D94  EC1D  F00B         	call	___flmul	;wreg free
  4246  000D98  C00F  F02C         	movff	?___flmul,___flsub@a
  4247  000D9C  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  4248  000DA0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  4249  000DA4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  4250  000DA8  EC9D  F019         	call	___flsub	;wreg free
  4251  000DAC  C028  F0A2         	movff	?___flsub,efgtoa@h
  4252  000DB0  C029  F0A3         	movff	?___flsub+1,efgtoa@h+1
  4253  000DB4  C02A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  4254  000DB8  C02B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  4255                           
  4256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  4257  000DBC  C0B4  F028         	movff	efgtoa@u,___fldiv@b
  4258  000DC0  C0B5  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4259  000DC4  C0B6  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4260  000DC8  C0B7  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4261  000DCC  0E00               	movlw	0
  4262  000DCE  6E2C               	movwf	___fldiv@a,c
  4263  000DD0  0E00               	movlw	0
  4264  000DD2  6E2D               	movwf	___fldiv@a+1,c
  4265  000DD4  0E20               	movlw	32
  4266  000DD6  6E2E               	movwf	___fldiv@a+2,c
  4267  000DD8  0E41               	movlw	65
  4268  000DDA  6E2F               	movwf	___fldiv@a+3,c
  4269  000DDC  EC4C  F00E         	call	___fldiv	;wreg free
  4270  000DE0  C028  F0B4         	movff	?___fldiv,efgtoa@u
  4271  000DE4  C029  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4272  000DE8  C02A  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4273  000DEC  C02B  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4274                           
  4275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  4276  000DF0  0100               	movlb	0	; () banked
  4277  000DF2  0796               	decf	efgtoa@ne& (0+255),f,b
  4278  000DF4  A0D8               	btfss	status,0,c
  4279  000DF6  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  4283  000DF8  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4284  000DFA  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4285  000DFC                     l3887:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  4289  000DFC  5194               	movf	efgtoa@m& (0+255),w,b
  4290  000DFE  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4291  000E00  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4292  000E02  0A80               	xorlw	128
  4293  000E04  6E5C               	movwf	??_efgtoa& (0+255),c
  4294  000E06  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4295  000E08  0A80               	xorlw	128
  4296  000E0A  585C               	subwfb	??_efgtoa& (0+255),w,c
  4297  000E0C  B0D8               	btfsc	status,0,c
  4298  000E0E  D008               	goto	u4790
  4299                           
  4300                           ; BSR set to: 0
  4301  000E10  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4302  000E12  D72E               	goto	l3839
  4303  000E14  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  4304  000E16  E104               	bnz	u4790
  4305  000E18  0E4B               	movlw	75
  4306  000E1A  5DB2               	subwf	efgtoa@n& (0+255),w,b
  4307  000E1C  A0D8               	btfss	status,0,c
  4308  000E1E  D728               	goto	l3839
  4309  000E20                     u4790:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  4313  000E20  5192               	movf	efgtoa@pp& (0+255),w,b
  4314  000E22  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4315  000E24  B4D8               	btfsc	status,2,c
  4316                           
  4317                           ; BSR set to: 0
  4318  000E26  A9F2               	btfss	_flags& (0+255),4,b
  4319  000E28  D00A               	goto	l3899
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  4323  000E2A  0E00               	movlw	low _dbuf
  4324  000E2C  25B2               	addwf	efgtoa@n& (0+255),w,b
  4325  000E2E  6ED9               	movwf	fsr2l,c
  4326  000E30  0E01               	movlw	high _dbuf
  4327  000E32  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4328  000E34  6EDA               	movwf	fsr2h,c
  4329  000E36  0E2E               	movlw	46
  4330  000E38  6EDF               	movwf	indf2,c
  4331                           
  4332                           ; BSR set to: 0
  4333  000E3A  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4334  000E3C  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4335  000E3E                     l3899:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  4339  000E3E  0E00               	movlw	low _dbuf
  4340  000E40  25B2               	addwf	efgtoa@n& (0+255),w,b
  4341  000E42  6ED9               	movwf	fsr2l,c
  4342  000E44  0E01               	movlw	high _dbuf
  4343  000E46  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4344  000E48  6EDA               	movwf	fsr2h,c
  4345  000E4A  0E00               	movlw	0
  4346  000E4C  6EDF               	movwf	indf2,c
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  4350  000E4E  0E65               	movlw	101
  4351  000E50  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4352  000E52  A4D8               	btfss	status,2,c
  4353  000E54  D47F               	goto	l3711
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  4357  000E56  0E00               	movlw	0
  4358  000E58  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4359  000E5A  0E4F               	movlw	79
  4360  000E5C  6FAA               	movwf	efgtoa@i& (0+255),b
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  4364  000E5E  0E00               	movlw	low _dbuf
  4365  000E60  25AA               	addwf	efgtoa@i& (0+255),w,b
  4366  000E62  6ED9               	movwf	fsr2l,c
  4367  000E64  0E01               	movlw	high _dbuf
  4368  000E66  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4369  000E68  6EDA               	movwf	fsr2h,c
  4370  000E6A  0E00               	movlw	0
  4371  000E6C  6EDF               	movwf	indf2,c
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  4375  000E6E  0E00               	movlw	0
  4376  000E70  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4377  000E72  0E00               	movlw	0
  4378  000E74  6F9A               	movwf	efgtoa@sign& (0+255),b
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  4382  000E76  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  4383  000E78  D008               	goto	l3915
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  4387  000E7A  0E00               	movlw	0
  4388  000E7C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4389  000E7E  0E01               	movlw	1
  4390  000E80  6F9A               	movwf	efgtoa@sign& (0+255),b
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  4394  000E82  6DB0               	negf	efgtoa@e& (0+255),b
  4395  000E84  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  4396  000E86  B0D8               	btfsc	status,0,c
  4397  000E88  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4398  000E8A                     l3915:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  4402  000E8A  0E00               	movlw	0
  4403  000E8C  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4404  000E8E  0E02               	movlw	2
  4405  000E90  6F9C               	movwf	efgtoa@p& (0+255),b
  4406                           
  4407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4408  000E92  D02B               	goto	l3927
  4409  000E94                     l3917:
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  4413  000E94  07AA               	decf	efgtoa@i& (0+255),f,b
  4414  000E96  A0D8               	btfss	status,0,c
  4415  000E98  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  4419  000E9A  0E00               	movlw	low _dbuf
  4420  000E9C  25AA               	addwf	efgtoa@i& (0+255),w,b
  4421  000E9E  6ED9               	movwf	fsr2l,c
  4422  000EA0  0E01               	movlw	high _dbuf
  4423  000EA2  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4424  000EA4  6EDA               	movwf	fsr2h,c
  4425  000EA6  C0B0  F001         	movff	efgtoa@e,___awmod@dividend
  4426  000EAA  C0B1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4427  000EAE  0E00               	movlw	0
  4428  000EB0  6E04               	movwf	___awmod@divisor+1,c
  4429  000EB2  0E0A               	movlw	10
  4430  000EB4  6E03               	movwf	___awmod@divisor,c
  4431  000EB6  EC6F  F018         	call	___awmod	;wreg free
  4432  000EBA  5001               	movf	?___awmod,w,c
  4433  000EBC  0F30               	addlw	48
  4434  000EBE  6EDF               	movwf	indf2,c
  4435                           
  4436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  4437  000EC0  C0B0  F001         	movff	efgtoa@e,___awdiv@dividend
  4438  000EC4  C0B1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4439  000EC8  0E00               	movlw	0
  4440  000ECA  6E04               	movwf	___awdiv@divisor+1,c
  4441  000ECC  0E0A               	movlw	10
  4442  000ECE  6E03               	movwf	___awdiv@divisor,c
  4443  000ED0  ECEF  F017         	call	___awdiv	;wreg free
  4444  000ED4  C001  F0B0         	movff	?___awdiv,efgtoa@e
  4445  000ED8  C002  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  4446                           
  4447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  4448  000EDC  0100               	movlb	0	; () banked
  4449  000EDE  079C               	decf	efgtoa@p& (0+255),f,b
  4450  000EE0  A0D8               	btfss	status,0,c
  4451  000EE2  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  4455  000EE4  079F               	decf	efgtoa@w& (0+255),f,b
  4456  000EE6  A0D8               	btfss	status,0,c
  4457  000EE8  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4458  000EEA                     l3927:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  4462  000EEA  51B0               	movf	efgtoa@e& (0+255),w,b
  4463  000EEC  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4464  000EEE  A4D8               	btfss	status,2,c
  4465  000EF0  D7D1               	goto	l3917
  4466                           
  4467                           ; BSR set to: 0
  4468  000EF2  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4469  000EF4  D005               	goto	u4850
  4470  000EF6  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  4471  000EF8  E1CD               	bnz	l3917
  4472  000EFA  059C               	decf	efgtoa@p& (0+255),w,b
  4473  000EFC  B0D8               	btfsc	status,0,c
  4474  000EFE  D7CA               	goto	l3917
  4475  000F00                     u4850:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  4479  000F00  07AA               	decf	efgtoa@i& (0+255),f,b
  4480  000F02  A0D8               	btfss	status,0,c
  4481  000F04  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  4485  000F06  519A               	movf	efgtoa@sign& (0+255),w,b
  4486  000F08  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4487  000F0A  A4D8               	btfss	status,2,c
  4488  000F0C  D004               	goto	l3937
  4489                           
  4490                           ; BSR set to: 0
  4491  000F0E  0E00               	movlw	0
  4492  000F10  6F8B               	movwf	(_efgtoa$483+1)& (0+255),b
  4493  000F12  0E2B               	movlw	43
  4494  000F14  D003               	goto	L6
  4495  000F16                     l3937:
  4496                           
  4497                           ; BSR set to: 0
  4498  000F16  0E00               	movlw	0
  4499  000F18  6F8B               	movwf	(_efgtoa$483+1)& (0+255),b
  4500  000F1A  0E2D               	movlw	45
  4501  000F1C                     L6:
  4502  000F1C  6F8A               	movwf	_efgtoa$483& (0+255),b
  4503                           
  4504                           ; BSR set to: 0
  4505  000F1E  0E00               	movlw	low _dbuf
  4506  000F20  25AA               	addwf	efgtoa@i& (0+255),w,b
  4507  000F22  6ED9               	movwf	fsr2l,c
  4508  000F24  0E01               	movlw	high _dbuf
  4509  000F26  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4510  000F28  6EDA               	movwf	fsr2h,c
  4511  000F2A  C08A  FFDF         	movff	_efgtoa$483,indf2
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  4515  000F2E  079F               	decf	efgtoa@w& (0+255),f,b
  4516  000F30  A0D8               	btfss	status,0,c
  4517  000F32  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4521  000F34  07AA               	decf	efgtoa@i& (0+255),f,b
  4522  000F36  A0D8               	btfss	status,0,c
  4523  000F38  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4524                           
  4525                           ; BSR set to: 0
  4526  000F3A  0EBF               	movlw	191
  4527  000F3C  6E5C               	movwf	??_efgtoa& (0+255),c
  4528  000F3E  0EFF               	movlw	255
  4529  000F40  6E5D               	movwf	(??_efgtoa+1)& (0+255),c
  4530  000F42  505B               	movf	efgtoa@c,w,c
  4531  000F44  6E5E               	movwf	(??_efgtoa+2)& (0+255),c
  4532  000F46  6A5F               	clrf	(??_efgtoa+3)& (0+255),c
  4533  000F48  505C               	movf	??_efgtoa,w,c
  4534  000F4A  265E               	addwf	??_efgtoa+2,f,c
  4535  000F4C  505D               	movf	??_efgtoa+1,w,c
  4536  000F4E  225F               	addwfc	??_efgtoa+3,f,c
  4537  000F50  505F               	movf	??_efgtoa+3,w,c
  4538  000F52  E106               	bnz	u4870
  4539  000F54  0E1A               	movlw	26
  4540  000F56  5C5E               	subwf	??_efgtoa+2,w,c
  4541  000F58  B0D8               	btfsc	status,0,c
  4542  000F5A  D002               	goto	u4870
  4543  000F5C  0E01               	movlw	1
  4544  000F5E  D001               	goto	u4880
  4545  000F60                     u4870:
  4546  000F60  0E00               	movlw	0
  4547  000F62                     u4880:
  4548  000F62  6F8E               	movwf	_efgtoa$485& (0+255),b
  4549  000F64  6B8F               	clrf	(_efgtoa$485+1)& (0+255),b
  4550                           
  4551                           ; BSR set to: 0
  4552  000F66  518E               	movf	_efgtoa$485& (0+255),w,b
  4553  000F68  118F               	iorwf	(_efgtoa$485+1)& (0+255),w,b
  4554  000F6A  A4D8               	btfss	status,2,c
  4555  000F6C  D004               	goto	l3953
  4556                           
  4557                           ; BSR set to: 0
  4558  000F6E  0E00               	movlw	0
  4559  000F70  6F8D               	movwf	(_efgtoa$484+1)& (0+255),b
  4560  000F72  0E65               	movlw	101
  4561  000F74  D003               	goto	L7
  4562  000F76                     l3953:
  4563                           
  4564                           ; BSR set to: 0
  4565  000F76  0E00               	movlw	0
  4566  000F78  6F8D               	movwf	(_efgtoa$484+1)& (0+255),b
  4567  000F7A  0E45               	movlw	69
  4568  000F7C                     L7:
  4569  000F7C  6F8C               	movwf	_efgtoa$484& (0+255),b
  4570                           
  4571                           ; BSR set to: 0
  4572  000F7E  0E00               	movlw	low _dbuf
  4573  000F80  25AA               	addwf	efgtoa@i& (0+255),w,b
  4574  000F82  6ED9               	movwf	fsr2l,c
  4575  000F84  0E01               	movlw	high _dbuf
  4576  000F86  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4577  000F88  6EDA               	movwf	fsr2h,c
  4578  000F8A  C08C  FFDF         	movff	_efgtoa$484,indf2
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  4582  000F8E  079F               	decf	efgtoa@w& (0+255),f,b
  4583  000F90  A0D8               	btfss	status,0,c
  4584  000F92  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  4588  000F94  0E00               	movlw	low _dbuf
  4589  000F96  25B2               	addwf	efgtoa@n& (0+255),w,b
  4590  000F98  6E01               	movwf	strcpy@dest,c
  4591  000F9A  0E01               	movlw	high _dbuf
  4592  000F9C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4593  000F9E  6E02               	movwf	strcpy@dest+1,c
  4594  000FA0  0E00               	movlw	low _dbuf
  4595  000FA2  25AA               	addwf	efgtoa@i& (0+255),w,b
  4596  000FA4  6E03               	movwf	strcpy@src,c
  4597  000FA6  0E01               	movlw	high _dbuf
  4598  000FA8  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4599  000FAA  6E04               	movwf	strcpy@src+1,c
  4600  000FAC  EC26  F019         	call	_strcpy	;wreg free
  4601  000FB0  EFAA  F003         	goto	l3711
  4602  000FB4                     __end_of_efgtoa:
  4603                           	opt callstack 0
  4604                           
  4605 ;; *************** function _tolower *****************
  4606 ;; Defined at:
  4607 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  c               2    6[COMRAM] int 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2    6[COMRAM] int 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4621 ;;      Params:         2       0       0       0       0       0       0
  4622 ;;      Locals:         2       0       0       0       0       0       0
  4623 ;;      Temps:          4       0       0       0       0       0       0
  4624 ;;      Totals:         8       0       0       0       0       0       0
  4625 ;;Total ram usage:        8 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    1
  4628 ;; This function calls:
  4629 ;;		_isupper
  4630 ;; This function is called by:
  4631 ;;		_efgtoa
  4632 ;;		_vfpfcnvrt
  4633 ;; This function uses a non-reentrant model
  4634 ;;
  4635                           
  4636                           	psect	text9
  4637  0032EE                     __ptext9:
  4638                           	opt callstack 0
  4639  0032EE                     _tolower:
  4640                           	opt callstack 26
  4641                           
  4642                           ;incstack = 0
  4643  0032EE  0EBF               	movlw	191
  4644  0032F0  6E09               	movwf	??_tolower& (0+255),c
  4645  0032F2  0EFF               	movlw	255
  4646  0032F4  6E0A               	movwf	(??_tolower+1)& (0+255),c
  4647  0032F6  C007  F00B         	movff	tolower@c,??_tolower+2
  4648  0032FA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4649  0032FE  5009               	movf	??_tolower,w,c
  4650  003300  260B               	addwf	??_tolower+2,f,c
  4651  003302  500A               	movf	??_tolower+1,w,c
  4652  003304  220C               	addwfc	??_tolower+3,f,c
  4653  003306  500C               	movf	??_tolower+3,w,c
  4654  003308  E106               	bnz	u3420
  4655  00330A  0E1A               	movlw	26
  4656  00330C  5C0B               	subwf	??_tolower+2,w,c
  4657  00330E  B0D8               	btfsc	status,0,c
  4658  003310  D002               	goto	u3420
  4659  003312  0E01               	movlw	1
  4660  003314  D001               	goto	u3430
  4661  003316                     u3420:
  4662  003316  0E00               	movlw	0
  4663  003318                     u3430:
  4664  003318  6E0D               	movwf	_tolower$1105,c
  4665  00331A  6A0E               	clrf	_tolower$1105+1,c
  4666  00331C  500D               	movf	_tolower$1105,w,c
  4667  00331E  100E               	iorwf	_tolower$1105+1,w,c
  4668  003320  B4D8               	btfsc	status,2,c
  4669  003322  D006               	goto	l1101
  4670  003324  0E20               	movlw	32
  4671  003326  1007               	iorwf	tolower@c,w,c
  4672  003328  6E07               	movwf	?_tolower,c
  4673  00332A  5008               	movf	tolower@c+1,w,c
  4674  00332C  6E08               	movwf	?_tolower+1,c
  4675  00332E  0012               	return	
  4676  003330                     l1101:
  4677  003330  C007  F007         	movff	tolower@c,?_tolower
  4678  003334  C008  F008         	movff	tolower@c+1,?_tolower+1
  4679  003338  0012               	return		;funcret
  4680  00333A                     __end_of_tolower:
  4681                           	opt callstack 0
  4682                           
  4683 ;; *************** function _isupper *****************
  4684 ;; Defined at:
  4685 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  c               2    0[COMRAM] int 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  2    0[COMRAM] int 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4699 ;;      Params:         2       0       0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0
  4701 ;;      Temps:          4       0       0       0       0       0       0
  4702 ;;      Totals:         6       0       0       0       0       0       0
  4703 ;;Total ram usage:        6 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_efgtoa
  4709 ;;		_vfpfcnvrt
  4710 ;;		_tolower
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text10
  4715  0033F6                     __ptext10:
  4716                           	opt callstack 0
  4717  0033F6                     _isupper:
  4718                           	opt callstack 26
  4719                           
  4720                           ;incstack = 0
  4721  0033F6  0EBF               	movlw	191
  4722  0033F8  6E03               	movwf	??_isupper& (0+255),c
  4723  0033FA  0EFF               	movlw	255
  4724  0033FC  6E04               	movwf	(??_isupper+1)& (0+255),c
  4725  0033FE  C001  F005         	movff	isupper@c,??_isupper+2
  4726  003402  C002  F006         	movff	isupper@c+1,??_isupper+3
  4727  003406  5003               	movf	??_isupper,w,c
  4728  003408  2605               	addwf	??_isupper+2,f,c
  4729  00340A  5004               	movf	??_isupper+1,w,c
  4730  00340C  2206               	addwfc	??_isupper+3,f,c
  4731  00340E  5006               	movf	??_isupper+3,w,c
  4732  003410  E106               	bnz	u2880
  4733  003412  0E1A               	movlw	26
  4734  003414  5C05               	subwf	??_isupper+2,w,c
  4735  003416  B0D8               	btfsc	status,0,c
  4736  003418  D002               	goto	u2880
  4737  00341A  0E01               	movlw	1
  4738  00341C  D001               	goto	u2890
  4739  00341E                     u2880:
  4740  00341E  0E00               	movlw	0
  4741  003420                     u2890:
  4742  003420  6E01               	movwf	?_isupper,c
  4743  003422  6A02               	clrf	?_isupper+1,c
  4744  003424  0012               	return		;funcret
  4745  003426                     __end_of_isupper:
  4746                           	opt callstack 0
  4747                           
  4748 ;; *************** function _strcpy *****************
  4749 ;; Defined at:
  4750 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4753 ;;		 -> dbuf(80), 
  4754 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4755 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4756 ;;		 -> dbuf(80), 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  d               2    8[COMRAM] PTR unsigned char 
  4759 ;;		 -> dbuf(80), 
  4760 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4761 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4762 ;;		 -> dbuf(80), 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  2    0[COMRAM] PTR unsigned char 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4772 ;;      Params:         4       0       0       0       0       0       0
  4773 ;;      Locals:         4       0       0       0       0       0       0
  4774 ;;      Temps:          2       0       0       0       0       0       0
  4775 ;;      Totals:        10       0       0       0       0       0       0
  4776 ;;Total ram usage:       10 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_efgtoa
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text11
  4786  00324C                     __ptext11:
  4787                           	opt callstack 0
  4788  00324C                     _strcpy:
  4789                           	opt callstack 26
  4790                           
  4791                           ;incstack = 0
  4792  00324C  C003  F007         	movff	strcpy@src,strcpy@s
  4793  003250  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4794  003254  C001  F009         	movff	strcpy@dest,strcpy@d
  4795  003258  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4796  00325C                     l3097:
  4797  00325C  5007               	movf	strcpy@s,w,c
  4798  00325E  6E05               	movwf	??_strcpy& (0+255),c
  4799  003260  5008               	movf	strcpy@s+1,w,c
  4800  003262  6E06               	movwf	(??_strcpy+1)& (0+255),c
  4801  003264  4A07               	infsnz	strcpy@s,f,c
  4802  003266  2A08               	incf	strcpy@s+1,f,c
  4803  003268  C005  FFF6         	movff	??_strcpy,tblptrl
  4804  00326C  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4805  003270  6AF8               	clrf	tblptru,c
  4806  003272  C009  FFD9         	movff	strcpy@d,fsr2l
  4807  003276  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4808  00327A  4A09               	infsnz	strcpy@d,f,c
  4809  00327C  2A0A               	incf	strcpy@d+1,f,c
  4810  00327E  0E05               	movlw	(high __ramtop+-1)
  4811  003280  64F7               	cpfsgt	tblptrh,c
  4812  003282  D003               	bra	u3407
  4813  003284  0008               	tblrd		*
  4814  003286  50F5               	movf	tablat,w,c
  4815  003288  D005               	bra	u3400
  4816  00328A                     u3407:
  4817  00328A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4818  00328E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4819  003292  50E7               	movf	indf1,w,c
  4820  003294                     u3400:
  4821  003294  6EDF               	movwf	indf2,c
  4822  003296  50DF               	movf	indf2,w,c
  4823  003298  B4D8               	btfsc	status,2,c
  4824  00329A  0012               	return	
  4825  00329C  D7DF               	goto	l3097
  4826  00329E                     __end_of_strcpy:
  4827                           	opt callstack 0
  4828                           
  4829 ;; *************** function _floorf *****************
  4830 ;; Defined at:
  4831 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  x               4   64[COMRAM] float 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  u               4   80[COMRAM] struct .
  4836 ;;  m               4   74[COMRAM] unsigned long 
  4837 ;;  e               2   78[COMRAM] int 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  4   64[COMRAM] float 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4847 ;;      Params:         4       0       0       0       0       0       0
  4848 ;;      Locals:        10       0       0       0       0       0       0
  4849 ;;      Temps:          6       0       0       0       0       0       0
  4850 ;;      Totals:        20       0       0       0       0       0       0
  4851 ;;Total ram usage:       20 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_efgtoa
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text12
  4861  00213A                     __ptext12:
  4862                           	opt callstack 0
  4863  00213A                     _floorf:
  4864                           	opt callstack 26
  4865                           
  4866                           ;incstack = 0
  4867  00213A  C0DC  F051         	movff	floorf@F524,floorf@u
  4868  00213E  C0DD  F052         	movff	floorf@F524+1,floorf@u+1
  4869  002142  C0DE  F053         	movff	floorf@F524+2,floorf@u+2
  4870  002146  C0DF  F054         	movff	floorf@F524+3,floorf@u+3
  4871  00214A  C041  F051         	movff	floorf@x,floorf@u
  4872  00214E  C042  F052         	movff	floorf@x+1,floorf@u+1
  4873  002152  C043  F053         	movff	floorf@x+2,floorf@u+2
  4874  002156  C044  F054         	movff	floorf@x+3,floorf@u+3
  4875  00215A  0E81               	movlw	129
  4876  00215C  6E45               	movwf	??_floorf& (0+255),c
  4877  00215E  0EFF               	movlw	255
  4878  002160  6E46               	movwf	(??_floorf+1)& (0+255),c
  4879  002162  C051  F047         	movff	floorf@u,??_floorf+2
  4880  002166  C052  F048         	movff	floorf@u+1,??_floorf+3
  4881  00216A  C053  F049         	movff	floorf@u+2,??_floorf+4
  4882  00216E  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4883  002172  0E18               	movlw	24
  4884  002174  D005               	goto	u3450
  4885  002176                     u3455:
  4886  002176  90D8               	bcf	status,0,c
  4887  002178  324A               	rrcf	??_floorf+5,f,c
  4888  00217A  3249               	rrcf	??_floorf+4,f,c
  4889  00217C  3248               	rrcf	??_floorf+3,f,c
  4890  00217E  3247               	rrcf	??_floorf+2,f,c
  4891  002180                     u3450:
  4892  002180  2EE8               	decfsz	wreg,f,c
  4893  002182  D7F9               	goto	u3455
  4894  002184  5047               	movf	??_floorf+2,w,c
  4895  002186  2445               	addwf	??_floorf,w,c
  4896  002188  6E4F               	movwf	floorf@e,c
  4897  00218A  0E00               	movlw	0
  4898  00218C  2046               	addwfc	??_floorf+1,w,c
  4899  00218E  6E50               	movwf	floorf@e+1,c
  4900  002190  BE50               	btfsc	floorf@e+1,7,c
  4901  002192  D00F               	goto	l3115
  4902  002194  5050               	movf	floorf@e+1,w,c
  4903  002196  E104               	bnz	u3460
  4904  002198  0E17               	movlw	23
  4905  00219A  5C4F               	subwf	floorf@e,w,c
  4906  00219C  A0D8               	btfss	status,0,c
  4907  00219E  D009               	goto	l3115
  4908  0021A0                     u3460:
  4909  0021A0  C041  F041         	movff	floorf@x,?_floorf
  4910  0021A4  C042  F042         	movff	floorf@x+1,?_floorf+1
  4911  0021A8  C043  F043         	movff	floorf@x+2,?_floorf+2
  4912  0021AC  C044  F044         	movff	floorf@x+3,?_floorf+3
  4913  0021B0  0012               	return	
  4914  0021B2                     l3115:
  4915  0021B2  BE50               	btfsc	floorf@e+1,7,c
  4916  0021B4  D05E               	goto	l3125
  4917  0021B6  C04F  F045         	movff	floorf@e,??_floorf
  4918  0021BA  0EFF               	movlw	255
  4919  0021BC  6E46               	movwf	(??_floorf+1)& (0+255),c
  4920  0021BE  0EFF               	movlw	255
  4921  0021C0  6E47               	movwf	(??_floorf+2)& (0+255),c
  4922  0021C2  0E7F               	movlw	127
  4923  0021C4  6E48               	movwf	(??_floorf+3)& (0+255),c
  4924  0021C6  0E00               	movlw	0
  4925  0021C8  6E49               	movwf	(??_floorf+4)& (0+255),c
  4926  0021CA                     u3485:
  4927  0021CA  6645               	tstfsz	??_floorf,c
  4928  0021CC  D001               	goto	u3486
  4929  0021CE  D007               	goto	u3487
  4930  0021D0                     u3486:
  4931  0021D0  3449               	rlcf	??_floorf+4,w,c
  4932  0021D2  3249               	rrcf	??_floorf+4,f,c
  4933  0021D4  3248               	rrcf	??_floorf+3,f,c
  4934  0021D6  3247               	rrcf	??_floorf+2,f,c
  4935  0021D8  3246               	rrcf	??_floorf+1,f,c
  4936  0021DA  2E45               	decfsz	??_floorf,f,c
  4937  0021DC  D7F6               	goto	u3485
  4938  0021DE                     u3487:
  4939  0021DE  C046  F04B         	movff	??_floorf+1,floorf@m
  4940  0021E2  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4941  0021E6  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4942  0021EA  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4943  0021EE  504B               	movf	floorf@m,w,c
  4944  0021F0  1451               	andwf	floorf@u,w,c
  4945  0021F2  6E45               	movwf	??_floorf& (0+255),c
  4946  0021F4  504C               	movf	floorf@m+1,w,c
  4947  0021F6  1452               	andwf	floorf@u+1,w,c
  4948  0021F8  6E46               	movwf	(??_floorf+1)& (0+255),c
  4949  0021FA  504D               	movf	floorf@m+2,w,c
  4950  0021FC  1453               	andwf	floorf@u+2,w,c
  4951  0021FE  6E47               	movwf	(??_floorf+2)& (0+255),c
  4952  002200  504E               	movf	floorf@m+3,w,c
  4953  002202  1454               	andwf	floorf@u+3,w,c
  4954  002204  6E48               	movwf	(??_floorf+3)& (0+255),c
  4955  002206  5045               	movf	??_floorf,w,c
  4956  002208  1046               	iorwf	??_floorf+1,w,c
  4957  00220A  1047               	iorwf	??_floorf+2,w,c
  4958  00220C  1048               	iorwf	??_floorf+3,w,c
  4959  00220E  B4D8               	btfsc	status,2,c
  4960  002210  D7C7               	goto	u3460
  4961  002212  C051  F045         	movff	floorf@u,??_floorf
  4962  002216  C052  F046         	movff	floorf@u+1,??_floorf+1
  4963  00221A  C053  F047         	movff	floorf@u+2,??_floorf+2
  4964  00221E  C054  F048         	movff	floorf@u+3,??_floorf+3
  4965  002222  0E20               	movlw	32
  4966  002224  D005               	goto	u3500
  4967  002226                     u3505:
  4968  002226  90D8               	bcf	status,0,c
  4969  002228  3248               	rrcf	??_floorf+3,f,c
  4970  00222A  3247               	rrcf	??_floorf+2,f,c
  4971  00222C  3246               	rrcf	??_floorf+1,f,c
  4972  00222E  3245               	rrcf	??_floorf,f,c
  4973  002230                     u3500:
  4974  002230  2EE8               	decfsz	wreg,f,c
  4975  002232  D7F9               	goto	u3505
  4976  002234  5045               	movf	??_floorf,w,c
  4977  002236  1046               	iorwf	??_floorf+1,w,c
  4978  002238  1047               	iorwf	??_floorf+2,w,c
  4979  00223A  1048               	iorwf	??_floorf+3,w,c
  4980  00223C  B4D8               	btfsc	status,2,c
  4981  00223E  D008               	goto	l1021
  4982  002240  504B               	movf	floorf@m,w,c
  4983  002242  2651               	addwf	floorf@u,f,c
  4984  002244  504C               	movf	floorf@m+1,w,c
  4985  002246  2252               	addwfc	floorf@u+1,f,c
  4986  002248  504D               	movf	floorf@m+2,w,c
  4987  00224A  2253               	addwfc	floorf@u+2,f,c
  4988  00224C  504E               	movf	floorf@m+3,w,c
  4989  00224E  2254               	addwfc	floorf@u+3,f,c
  4990  002250                     l1021:
  4991  002250  1C4B               	comf	floorf@m,w,c
  4992  002252  6E45               	movwf	??_floorf& (0+255),c
  4993  002254  1C4C               	comf	floorf@m+1,w,c
  4994  002256  6E46               	movwf	(??_floorf+1)& (0+255),c
  4995  002258  1C4D               	comf	floorf@m+2,w,c
  4996  00225A  6E47               	movwf	(??_floorf+2)& (0+255),c
  4997  00225C  1C4E               	comf	floorf@m+3,w,c
  4998  00225E  6E48               	movwf	(??_floorf+3)& (0+255),c
  4999  002260  5045               	movf	??_floorf,w,c
  5000  002262  1651               	andwf	floorf@u,f,c
  5001  002264  5046               	movf	??_floorf+1,w,c
  5002  002266  1652               	andwf	floorf@u+1,f,c
  5003  002268  5047               	movf	??_floorf+2,w,c
  5004  00226A  1653               	andwf	floorf@u+2,f,c
  5005  00226C  5048               	movf	??_floorf+3,w,c
  5006  00226E  1654               	andwf	floorf@u+3,f,c
  5007  002270  D036               	goto	l3133
  5008  002272                     l3125:
  5009  002272  C051  F045         	movff	floorf@u,??_floorf
  5010  002276  C052  F046         	movff	floorf@u+1,??_floorf+1
  5011  00227A  C053  F047         	movff	floorf@u+2,??_floorf+2
  5012  00227E  C054  F048         	movff	floorf@u+3,??_floorf+3
  5013  002282  0E20               	movlw	32
  5014  002284  D005               	goto	u3520
  5015  002286                     u3525:
  5016  002286  90D8               	bcf	status,0,c
  5017  002288  3248               	rrcf	??_floorf+3,f,c
  5018  00228A  3247               	rrcf	??_floorf+2,f,c
  5019  00228C  3246               	rrcf	??_floorf+1,f,c
  5020  00228E  3245               	rrcf	??_floorf,f,c
  5021  002290                     u3520:
  5022  002290  2EE8               	decfsz	wreg,f,c
  5023  002292  D7F9               	goto	u3525
  5024  002294  5045               	movf	??_floorf,w,c
  5025  002296  1046               	iorwf	??_floorf+1,w,c
  5026  002298  1047               	iorwf	??_floorf+2,w,c
  5027  00229A  1048               	iorwf	??_floorf+3,w,c
  5028  00229C  A4D8               	btfss	status,2,c
  5029  00229E  D008               	goto	l3129
  5030  0022A0  0E00               	movlw	0
  5031  0022A2  6E51               	movwf	floorf@u,c
  5032  0022A4  0E00               	movlw	0
  5033  0022A6  6E52               	movwf	floorf@u+1,c
  5034  0022A8  0E00               	movlw	0
  5035  0022AA  6E53               	movwf	floorf@u+2,c
  5036  0022AC  0E00               	movlw	0
  5037  0022AE  D016               	goto	L8
  5038  0022B0                     l3129:
  5039  0022B0  90D8               	bcf	status,0,c
  5040  0022B2  3451               	rlcf	floorf@u,w,c
  5041  0022B4  6E45               	movwf	??_floorf& (0+255),c
  5042  0022B6  3452               	rlcf	floorf@u+1,w,c
  5043  0022B8  6E46               	movwf	(??_floorf+1)& (0+255),c
  5044  0022BA  3453               	rlcf	floorf@u+2,w,c
  5045  0022BC  6E47               	movwf	(??_floorf+2)& (0+255),c
  5046  0022BE  3454               	rlcf	floorf@u+3,w,c
  5047  0022C0  6E48               	movwf	(??_floorf+3)& (0+255),c
  5048  0022C2  5045               	movf	??_floorf,w,c
  5049  0022C4  1046               	iorwf	??_floorf+1,w,c
  5050  0022C6  1047               	iorwf	??_floorf+2,w,c
  5051  0022C8  1048               	iorwf	??_floorf+3,w,c
  5052  0022CA  B4D8               	btfsc	status,2,c
  5053  0022CC  D008               	goto	l3133
  5054  0022CE  0E00               	movlw	0
  5055  0022D0  6E51               	movwf	floorf@u,c
  5056  0022D2  0E00               	movlw	0
  5057  0022D4  6E52               	movwf	floorf@u+1,c
  5058  0022D6  0E80               	movlw	128
  5059  0022D8  6E53               	movwf	floorf@u+2,c
  5060  0022DA  0EBF               	movlw	191
  5061  0022DC                     L8:
  5062  0022DC  6E54               	movwf	floorf@u+3,c
  5063  0022DE                     l3133:
  5064  0022DE  C051  F041         	movff	floorf@u,?_floorf
  5065  0022E2  C052  F042         	movff	floorf@u+1,?_floorf+1
  5066  0022E6  C053  F043         	movff	floorf@u+2,?_floorf+2
  5067  0022EA  C054  F044         	movff	floorf@u+3,?_floorf+3
  5068  0022EE  0012               	return		;funcret
  5069  0022F0                     __end_of_floorf:
  5070                           	opt callstack 0
  5071                           
  5072 ;; *************** function ___fpclassifyf *****************
  5073 ;; Defined at:
  5074 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  x               4    0[COMRAM] float 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  u               4   10[COMRAM] struct .
  5079 ;;  e               2    8[COMRAM] int 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  2    0[COMRAM] int 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5089 ;;      Params:         4       0       0       0       0       0       0
  5090 ;;      Locals:         6       0       0       0       0       0       0
  5091 ;;      Temps:          4       0       0       0       0       0       0
  5092 ;;      Totals:        14       0       0       0       0       0       0
  5093 ;;Total ram usage:       14 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		_efgtoa
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text13
  5103  002A8A                     __ptext13:
  5104                           	opt callstack 0
  5105  002A8A                     ___fpclassifyf:
  5106                           	opt callstack 26
  5107                           
  5108                           ;incstack = 0
  5109  002A8A  C0E0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5110  002A8E  C0E1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5111  002A92  C0E2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5112  002A96  C0E3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5113  002A9A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5114  002A9E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5115  002AA2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5116  002AA6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5117  002AAA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5118  002AAE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5119  002AB2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5120  002AB6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5121  002ABA  0E18               	movlw	24
  5122  002ABC  D005               	goto	u3330
  5123  002ABE                     u3335:
  5124  002ABE  90D8               	bcf	status,0,c
  5125  002AC0  3208               	rrcf	??___fpclassifyf+3,f,c
  5126  002AC2  3207               	rrcf	??___fpclassifyf+2,f,c
  5127  002AC4  3206               	rrcf	??___fpclassifyf+1,f,c
  5128  002AC6  3205               	rrcf	??___fpclassifyf,f,c
  5129  002AC8                     u3330:
  5130  002AC8  2EE8               	decfsz	wreg,f,c
  5131  002ACA  D7F9               	goto	u3335
  5132  002ACC  5005               	movf	??___fpclassifyf,w,c
  5133  002ACE  6E09               	movwf	___fpclassifyf@e,c
  5134  002AD0  6A0A               	clrf	___fpclassifyf@e+1,c
  5135  002AD2  5009               	movf	___fpclassifyf@e,w,c
  5136  002AD4  100A               	iorwf	___fpclassifyf@e+1,w,c
  5137  002AD6  A4D8               	btfss	status,2,c
  5138  002AD8  D019               	goto	l3085
  5139  002ADA  90D8               	bcf	status,0,c
  5140  002ADC  340B               	rlcf	___fpclassifyf@u,w,c
  5141  002ADE  6E05               	movwf	??___fpclassifyf& (0+255),c
  5142  002AE0  340C               	rlcf	___fpclassifyf@u+1,w,c
  5143  002AE2  6E06               	movwf	(??___fpclassifyf+1)& (0+255),c
  5144  002AE4  340D               	rlcf	___fpclassifyf@u+2,w,c
  5145  002AE6  6E07               	movwf	(??___fpclassifyf+2)& (0+255),c
  5146  002AE8  340E               	rlcf	___fpclassifyf@u+3,w,c
  5147  002AEA  6E08               	movwf	(??___fpclassifyf+3)& (0+255),c
  5148  002AEC  5005               	movf	??___fpclassifyf,w,c
  5149  002AEE  1006               	iorwf	??___fpclassifyf+1,w,c
  5150  002AF0  1007               	iorwf	??___fpclassifyf+2,w,c
  5151  002AF2  1008               	iorwf	??___fpclassifyf+3,w,c
  5152  002AF4  A4D8               	btfss	status,2,c
  5153  002AF6  D005               	goto	l3081
  5154  002AF8  0E00               	movlw	0
  5155  002AFA  6E02               	movwf	?___fpclassifyf+1,c
  5156  002AFC  0E02               	movlw	2
  5157  002AFE  6E01               	movwf	?___fpclassifyf,c
  5158  002B00  0012               	return	
  5159  002B02                     l3081:
  5160  002B02  0E00               	movlw	0
  5161  002B04  6E02               	movwf	?___fpclassifyf+1,c
  5162  002B06  0E03               	movlw	3
  5163  002B08  6E01               	movwf	?___fpclassifyf,c
  5164  002B0A  0012               	return	
  5165  002B0C                     l3085:
  5166  002B0C  2809               	incf	___fpclassifyf@e,w,c
  5167  002B0E  100A               	iorwf	___fpclassifyf@e+1,w,c
  5168  002B10  A4D8               	btfss	status,2,c
  5169  002B12  D01C               	goto	l3091
  5170  002B14  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5171  002B18  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5172  002B1C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5173  002B20  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5174  002B24  0E09               	movlw	9
  5175  002B26                     u3375:
  5176  002B26  90D8               	bcf	status,0,c
  5177  002B28  3605               	rlcf	??___fpclassifyf,f,c
  5178  002B2A  3606               	rlcf	??___fpclassifyf+1,f,c
  5179  002B2C  3607               	rlcf	??___fpclassifyf+2,f,c
  5180  002B2E  3608               	rlcf	??___fpclassifyf+3,f,c
  5181  002B30  2EE8               	decfsz	wreg,f,c
  5182  002B32  D7F9               	goto	u3375
  5183  002B34  5005               	movf	??___fpclassifyf,w,c
  5184  002B36  1006               	iorwf	??___fpclassifyf+1,w,c
  5185  002B38  1007               	iorwf	??___fpclassifyf+2,w,c
  5186  002B3A  1008               	iorwf	??___fpclassifyf+3,w,c
  5187  002B3C  A4D8               	btfss	status,2,c
  5188  002B3E  D002               	goto	u3380
  5189  002B40  0E01               	movlw	1
  5190  002B42  D001               	goto	u3390
  5191  002B44                     u3380:
  5192  002B44  0E00               	movlw	0
  5193  002B46                     u3390:
  5194  002B46  6E01               	movwf	?___fpclassifyf,c
  5195  002B48  6A02               	clrf	?___fpclassifyf+1,c
  5196  002B4A  0012               	return	
  5197  002B4C                     l3091:
  5198  002B4C  0E00               	movlw	0
  5199  002B4E  6E02               	movwf	?___fpclassifyf+1,c
  5200  002B50  0E04               	movlw	4
  5201  002B52  6E01               	movwf	?___fpclassifyf,c
  5202  002B54  0012               	return		;funcret
  5203  002B56                     __end_of___fpclassifyf:
  5204                           	opt callstack 0
  5205                           
  5206 ;; *************** function ___fltol *****************
  5207 ;; Defined at:
  5208 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  f1              4    0[COMRAM] int 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  exp1            1    9[COMRAM] unsigned char 
  5213 ;;  sign1           1    8[COMRAM] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  4    0[COMRAM] long 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5223 ;;      Params:         4       0       0       0       0       0       0
  5224 ;;      Locals:         2       0       0       0       0       0       0
  5225 ;;      Temps:          4       0       0       0       0       0       0
  5226 ;;      Totals:        10       0       0       0       0       0       0
  5227 ;;Total ram usage:       10 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_efgtoa
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text14
  5237  002C22                     __ptext14:
  5238                           	opt callstack 0
  5239  002C22                     ___fltol:
  5240                           	opt callstack 26
  5241                           
  5242                           ;incstack = 0
  5243  002C22  3403               	rlcf	___fltol@f1+2,w,c
  5244  002C24  3404               	rlcf	___fltol@f1+3,w,c
  5245  002C26  6E0A               	movwf	___fltol@exp1,c
  5246  002C28  500A               	movf	___fltol@exp1,w,c
  5247  002C2A  A4D8               	btfss	status,2,c
  5248  002C2C  D009               	goto	l3553
  5249  002C2E                     u4200:
  5250  002C2E  0E00               	movlw	0
  5251  002C30  6E01               	movwf	?___fltol,c
  5252  002C32  0E00               	movlw	0
  5253  002C34  6E02               	movwf	?___fltol+1,c
  5254  002C36  0E00               	movlw	0
  5255  002C38  6E03               	movwf	?___fltol+2,c
  5256  002C3A  0E00               	movlw	0
  5257  002C3C  6E04               	movwf	?___fltol+3,c
  5258  002C3E  0012               	return	
  5259  002C40                     l3553:
  5260  002C40  C001  F005         	movff	___fltol@f1,??___fltol
  5261  002C44  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5262  002C48  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5263  002C4C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5264  002C50  0E20               	movlw	32
  5265  002C52  D005               	goto	u4210
  5266  002C54                     u4215:
  5267  002C54  90D8               	bcf	status,0,c
  5268  002C56  3208               	rrcf	??___fltol+3,f,c
  5269  002C58  3207               	rrcf	??___fltol+2,f,c
  5270  002C5A  3206               	rrcf	??___fltol+1,f,c
  5271  002C5C  3205               	rrcf	??___fltol,f,c
  5272  002C5E                     u4210:
  5273  002C5E  2EE8               	decfsz	wreg,f,c
  5274  002C60  D7F9               	goto	u4215
  5275  002C62  5005               	movf	??___fltol,w,c
  5276  002C64  6E09               	movwf	___fltol@sign1,c
  5277  002C66  8E03               	bsf	___fltol@f1+2,7,c
  5278  002C68  0EFF               	movlw	255
  5279  002C6A  1601               	andwf	___fltol@f1,f,c
  5280  002C6C  0EFF               	movlw	255
  5281  002C6E  1602               	andwf	___fltol@f1+1,f,c
  5282  002C70  0EFF               	movlw	255
  5283  002C72  1603               	andwf	___fltol@f1+2,f,c
  5284  002C74  0E00               	movlw	0
  5285  002C76  1604               	andwf	___fltol@f1+3,f,c
  5286  002C78  0E96               	movlw	150
  5287  002C7A  5E0A               	subwf	___fltol@exp1,f,c
  5288  002C7C  AE0A               	btfss	___fltol@exp1,7,c
  5289  002C7E  D00D               	goto	l3573
  5290  002C80  500A               	movf	___fltol@exp1,w,c
  5291  002C82  0A80               	xorlw	128
  5292  002C84  0F97               	addlw	151
  5293  002C86  A0D8               	btfss	status,0,c
  5294  002C88  D7D2               	goto	u4200
  5295  002C8A                     l3569:
  5296  002C8A  90D8               	bcf	status,0,c
  5297  002C8C  3204               	rrcf	___fltol@f1+3,f,c
  5298  002C8E  3203               	rrcf	___fltol@f1+2,f,c
  5299  002C90  3202               	rrcf	___fltol@f1+1,f,c
  5300  002C92  3201               	rrcf	___fltol@f1,f,c
  5301  002C94  3E0A               	incfsz	___fltol@exp1,f,c
  5302  002C96  D7F9               	goto	l3569
  5303  002C98  D00D               	goto	u4250
  5304  002C9A                     l3573:
  5305  002C9A  0E1F               	movlw	31
  5306  002C9C  640A               	cpfsgt	___fltol@exp1,c
  5307  002C9E  D007               	goto	l3581
  5308  002CA0  D7C6               	goto	u4200
  5309  002CA2                     l3579:
  5310  002CA2  90D8               	bcf	status,0,c
  5311  002CA4  3601               	rlcf	___fltol@f1,f,c
  5312  002CA6  3602               	rlcf	___fltol@f1+1,f,c
  5313  002CA8  3603               	rlcf	___fltol@f1+2,f,c
  5314  002CAA  3604               	rlcf	___fltol@f1+3,f,c
  5315  002CAC  060A               	decf	___fltol@exp1,f,c
  5316  002CAE                     l3581:
  5317  002CAE  500A               	movf	___fltol@exp1,w,c
  5318  002CB0  A4D8               	btfss	status,2,c
  5319  002CB2  D7F7               	goto	l3579
  5320  002CB4                     u4250:
  5321  002CB4  5009               	movf	___fltol@sign1,w,c
  5322  002CB6  B4D8               	btfsc	status,2,c
  5323  002CB8  D008               	goto	l3587
  5324  002CBA  1E04               	comf	___fltol@f1+3,f,c
  5325  002CBC  1E03               	comf	___fltol@f1+2,f,c
  5326  002CBE  1E02               	comf	___fltol@f1+1,f,c
  5327  002CC0  6C01               	negf	___fltol@f1,c
  5328  002CC2  0E00               	movlw	0
  5329  002CC4  2202               	addwfc	___fltol@f1+1,f,c
  5330  002CC6  2203               	addwfc	___fltol@f1+2,f,c
  5331  002CC8  2204               	addwfc	___fltol@f1+3,f,c
  5332  002CCA                     l3587:
  5333  002CCA  C001  F001         	movff	___fltol@f1,?___fltol
  5334  002CCE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5335  002CD2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5336  002CD6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5337  002CDA  0012               	return		;funcret
  5338  002CDC                     __end_of___fltol:
  5339                           	opt callstack 0
  5340                           
  5341 ;; *************** function ___flsub *****************
  5342 ;; Defined at:
  5343 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  b               4   39[COMRAM] long 
  5346 ;;  a               4   43[COMRAM] long 
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  4   39[COMRAM] long 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, status,0, cstack
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5358 ;;      Params:         8       0       0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0
  5361 ;;      Totals:         8       0       0       0       0       0       0
  5362 ;;Total ram usage:        8 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    1
  5365 ;; This function calls:
  5366 ;;		___fladd
  5367 ;; This function is called by:
  5368 ;;		_efgtoa
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text15
  5373  00333A                     __ptext15:
  5374                           	opt callstack 0
  5375  00333A                     ___flsub:
  5376                           	opt callstack 25
  5377                           
  5378                           ;incstack = 0
  5379  00333A  0E00               	movlw	0
  5380  00333C  1A2C               	xorwf	___flsub@a,f,c
  5381  00333E  0E00               	movlw	0
  5382  003340  1A2D               	xorwf	___flsub@a+1,f,c
  5383  003342  0E00               	movlw	0
  5384  003344  1A2E               	xorwf	___flsub@a+2,f,c
  5385  003346  0E80               	movlw	128
  5386  003348  1A2F               	xorwf	___flsub@a+3,f,c
  5387  00334A  C028  F001         	movff	___flsub@b,___fladd@b
  5388  00334E  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  5389  003352  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  5390  003356  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  5391  00335A  C02C  F005         	movff	___flsub@a,___fladd@a
  5392  00335E  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  5393  003362  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  5394  003366  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  5395  00336A  ECC6  F00C         	call	___fladd	;wreg free
  5396  00336E  C001  F028         	movff	?___fladd,?___flsub
  5397  003372  C002  F029         	movff	?___fladd+1,?___flsub+1
  5398  003376  C003  F02A         	movff	?___fladd+2,?___flsub+2
  5399  00337A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  5400  00337E  0012               	return		;funcret
  5401  003380                     __end_of___flsub:
  5402                           	opt callstack 0
  5403                           
  5404 ;; *************** function ___fladd *****************
  5405 ;; Defined at:
  5406 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  b               4    0[COMRAM] long 
  5409 ;;  a               4    4[COMRAM] long 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  grs             1   15[COMRAM] unsigned char 
  5412 ;;  bexp            1   14[COMRAM] unsigned char 
  5413 ;;  aexp            1   13[COMRAM] unsigned char 
  5414 ;;  signs           1   12[COMRAM] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  4    0[COMRAM] unsigned char 
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5424 ;;      Params:         8       0       0       0       0       0       0
  5425 ;;      Locals:         4       0       0       0       0       0       0
  5426 ;;      Temps:          4       0       0       0       0       0       0
  5427 ;;      Totals:        16       0       0       0       0       0       0
  5428 ;;Total ram usage:       16 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_efgtoa
  5434 ;;		___flsub
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text16
  5439  00198C                     __ptext16:
  5440                           	opt callstack 0
  5441  00198C                     ___fladd:
  5442                           	opt callstack 25
  5443                           
  5444                           ;incstack = 0
  5445  00198C  5004               	movf	___fladd@b+3,w,c
  5446  00198E  0B80               	andlw	128
  5447  001990  6E0D               	movwf	___fladd@signs,c
  5448  001992  5004               	movf	___fladd@b+3,w,c
  5449  001994  2404               	addwf	___fladd@b+3,w,c
  5450  001996  6E0F               	movwf	___fladd@bexp,c
  5451  001998  BE03               	btfsc	___fladd@b+2,7,c
  5452  00199A  800F               	bsf	___fladd@bexp,0,c
  5453  00199C  500F               	movf	___fladd@bexp,w,c
  5454  00199E  B4D8               	btfsc	status,2,c
  5455  0019A0  D00D               	goto	l2865
  5456  0019A2  280F               	incf	___fladd@bexp,w,c
  5457  0019A4  A4D8               	btfss	status,2,c
  5458  0019A6  D008               	goto	l2861
  5459  0019A8  0E00               	movlw	0
  5460  0019AA  6E01               	movwf	___fladd@b,c
  5461  0019AC  0E00               	movlw	0
  5462  0019AE  6E02               	movwf	___fladd@b+1,c
  5463  0019B0  0E00               	movlw	0
  5464  0019B2  6E03               	movwf	___fladd@b+2,c
  5465  0019B4  0E00               	movlw	0
  5466  0019B6  6E04               	movwf	___fladd@b+3,c
  5467  0019B8                     l2861:
  5468  0019B8  8E03               	bsf	___fladd@b+2,7,c
  5469  0019BA  D006               	goto	L9
  5470  0019BC                     l2865:
  5471  0019BC  0E00               	movlw	0
  5472  0019BE  6E01               	movwf	___fladd@b,c
  5473  0019C0  0E00               	movlw	0
  5474  0019C2  6E02               	movwf	___fladd@b+1,c
  5475  0019C4  0E00               	movlw	0
  5476  0019C6  6E03               	movwf	___fladd@b+2,c
  5477  0019C8                     L9:
  5478  0019C8  0E00               	movlw	0
  5479  0019CA  6E04               	movwf	___fladd@b+3,c
  5480  0019CC  5008               	movf	___fladd@a+3,w,c
  5481  0019CE  0B80               	andlw	128
  5482  0019D0  6E0E               	movwf	___fladd@aexp,c
  5483  0019D2  500D               	movf	___fladd@signs,w,c
  5484  0019D4  180E               	xorwf	___fladd@aexp,w,c
  5485  0019D6  A4D8               	btfss	status,2,c
  5486  0019D8  8C0D               	bsf	___fladd@signs,6,c
  5487  0019DA  5008               	movf	___fladd@a+3,w,c
  5488  0019DC  2408               	addwf	___fladd@a+3,w,c
  5489  0019DE  6E0E               	movwf	___fladd@aexp,c
  5490  0019E0  BE07               	btfsc	___fladd@a+2,7,c
  5491  0019E2  800E               	bsf	___fladd@aexp,0,c
  5492  0019E4  500E               	movf	___fladd@aexp,w,c
  5493  0019E6  B4D8               	btfsc	status,2,c
  5494  0019E8  D00D               	goto	l2889
  5495  0019EA  280E               	incf	___fladd@aexp,w,c
  5496  0019EC  A4D8               	btfss	status,2,c
  5497  0019EE  D008               	goto	l2885
  5498  0019F0  0E00               	movlw	0
  5499  0019F2  6E05               	movwf	___fladd@a,c
  5500  0019F4  0E00               	movlw	0
  5501  0019F6  6E06               	movwf	___fladd@a+1,c
  5502  0019F8  0E00               	movlw	0
  5503  0019FA  6E07               	movwf	___fladd@a+2,c
  5504  0019FC  0E00               	movlw	0
  5505  0019FE  6E08               	movwf	___fladd@a+3,c
  5506  001A00                     l2885:
  5507  001A00  8E07               	bsf	___fladd@a+2,7,c
  5508  001A02  D006               	goto	L10
  5509  001A04                     l2889:
  5510  001A04  0E00               	movlw	0
  5511  001A06  6E05               	movwf	___fladd@a,c
  5512  001A08  0E00               	movlw	0
  5513  001A0A  6E06               	movwf	___fladd@a+1,c
  5514  001A0C  0E00               	movlw	0
  5515  001A0E  6E07               	movwf	___fladd@a+2,c
  5516  001A10                     L10:
  5517  001A10  0E00               	movlw	0
  5518  001A12  6E08               	movwf	___fladd@a+3,c
  5519  001A14  500F               	movf	___fladd@bexp,w,c
  5520  001A16  5C0E               	subwf	___fladd@aexp,w,c
  5521  001A18  B0D8               	btfsc	status,0,c
  5522  001A1A  D022               	goto	l2927
  5523  001A1C  AC0D               	btfss	___fladd@signs,6,c
  5524  001A1E  D002               	goto	l2897
  5525  001A20  0E80               	movlw	128
  5526  001A22  1A0D               	xorwf	___fladd@signs,f,c
  5527  001A24                     l2897:
  5528  001A24  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5529  001A28  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5530  001A2C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5531  001A30  C001  F010         	movff	___fladd@b,___fladd@grs
  5532  001A34  C005  F001         	movff	___fladd@a,___fladd@b
  5533  001A38  C010  F005         	movff	___fladd@grs,___fladd@a
  5534  001A3C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5535  001A40  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5536  001A44  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5537  001A48  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5538  001A4C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5539  001A50  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5540  001A54  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5541  001A58  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5542  001A5C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5543  001A60                     l2927:
  5544  001A60  0E00               	movlw	0
  5545  001A62  6E10               	movwf	___fladd@grs,c
  5546  001A64  500F               	movf	___fladd@bexp,w,c
  5547  001A66  C00E  F009         	movff	___fladd@aexp,??___fladd
  5548  001A6A  6A0A               	clrf	(??___fladd+1)& (0+255),c
  5549  001A6C  5E09               	subwf	??___fladd,f,c
  5550  001A6E  0E00               	movlw	0
  5551  001A70  5A0A               	subwfb	??___fladd+1,f,c
  5552  001A72  BE0A               	btfsc	??___fladd+1,7,c
  5553  001A74  D02C               	goto	l828
  5554  001A76  500A               	movf	??___fladd+1,w,c
  5555  001A78  E104               	bnz	u2990
  5556  001A7A  0E1A               	movlw	26
  5557  001A7C  5C09               	subwf	??___fladd,w,c
  5558  001A7E  A0D8               	btfss	status,0,c
  5559  001A80  D026               	goto	l828
  5560  001A82                     u2990:
  5561  001A82  5001               	movf	___fladd@b,w,c
  5562  001A84  1002               	iorwf	___fladd@b+1,w,c
  5563  001A86  1003               	iorwf	___fladd@b+2,w,c
  5564  001A88  1004               	iorwf	___fladd@b+3,w,c
  5565  001A8A  B4D8               	btfsc	status,2,c
  5566  001A8C  D002               	goto	u3000
  5567  001A8E  0E01               	movlw	1
  5568  001A90  D001               	goto	u3010
  5569  001A92                     u3000:
  5570  001A92  0E00               	movlw	0
  5571  001A94                     u3010:
  5572  001A94  6E10               	movwf	___fladd@grs,c
  5573  001A96  0E00               	movlw	0
  5574  001A98  6E01               	movwf	___fladd@b,c
  5575  001A9A  0E00               	movlw	0
  5576  001A9C  6E02               	movwf	___fladd@b+1,c
  5577  001A9E  0E00               	movlw	0
  5578  001AA0  6E03               	movwf	___fladd@b+2,c
  5579  001AA2  0E00               	movlw	0
  5580  001AA4  6E04               	movwf	___fladd@b+3,c
  5581  001AA6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5582  001AAA  D015               	goto	u3040
  5583  001AAC                     l829:
  5584  001AAC  A010               	btfss	___fladd@grs,0,c
  5585  001AAE  D005               	goto	l2939
  5586  001AB0  90D8               	bcf	status,0,c
  5587  001AB2  3010               	rrcf	___fladd@grs,w,c
  5588  001AB4  0901               	iorlw	1
  5589  001AB6  6E10               	movwf	___fladd@grs,c
  5590  001AB8  D002               	goto	l2941
  5591  001ABA                     l2939:
  5592  001ABA  90D8               	bcf	status,0,c
  5593  001ABC  3210               	rrcf	___fladd@grs,f,c
  5594  001ABE                     l2941:
  5595  001ABE  B001               	btfsc	___fladd@b,0,c
  5596  001AC0  8E10               	bsf	___fladd@grs,7,c
  5597  001AC2  3404               	rlcf	___fladd@b+3,w,c
  5598  001AC4  3204               	rrcf	___fladd@b+3,f,c
  5599  001AC6  3203               	rrcf	___fladd@b+2,f,c
  5600  001AC8  3202               	rrcf	___fladd@b+1,f,c
  5601  001ACA  3201               	rrcf	___fladd@b,f,c
  5602  001ACC  2A0F               	incf	___fladd@bexp,f,c
  5603  001ACE                     l828:
  5604  001ACE  500E               	movf	___fladd@aexp,w,c
  5605  001AD0  5C0F               	subwf	___fladd@bexp,w,c
  5606  001AD2  A0D8               	btfss	status,0,c
  5607  001AD4  D7EB               	goto	l829
  5608  001AD6                     u3040:
  5609  001AD6  BC0D               	btfsc	___fladd@signs,6,c
  5610  001AD8  D028               	goto	l2973
  5611  001ADA  500F               	movf	___fladd@bexp,w,c
  5612  001ADC  A4D8               	btfss	status,2,c
  5613  001ADE  D009               	goto	l2955
  5614  001AE0  0E00               	movlw	0
  5615  001AE2  6E01               	movwf	?___fladd,c
  5616  001AE4  0E00               	movlw	0
  5617  001AE6  6E02               	movwf	?___fladd+1,c
  5618  001AE8  0E00               	movlw	0
  5619  001AEA  6E03               	movwf	?___fladd+2,c
  5620  001AEC  0E00               	movlw	0
  5621  001AEE  6E04               	movwf	?___fladd+3,c
  5622  001AF0  0012               	return	
  5623  001AF2                     l2955:
  5624  001AF2  5005               	movf	___fladd@a,w,c
  5625  001AF4  2601               	addwf	___fladd@b,f,c
  5626  001AF6  5006               	movf	___fladd@a+1,w,c
  5627  001AF8  2202               	addwfc	___fladd@b+1,f,c
  5628  001AFA  5007               	movf	___fladd@a+2,w,c
  5629  001AFC  2203               	addwfc	___fladd@b+2,f,c
  5630  001AFE  5008               	movf	___fladd@a+3,w,c
  5631  001B00  2204               	addwfc	___fladd@b+3,f,c
  5632  001B02  A004               	btfss	___fladd@b+3,0,c
  5633  001B04  D071               	goto	u3170
  5634  001B06  A010               	btfss	___fladd@grs,0,c
  5635  001B08  D005               	goto	l2963
  5636  001B0A  90D8               	bcf	status,0,c
  5637  001B0C  3010               	rrcf	___fladd@grs,w,c
  5638  001B0E  0901               	iorlw	1
  5639  001B10  6E10               	movwf	___fladd@grs,c
  5640  001B12  D002               	goto	l2965
  5641  001B14                     l2963:
  5642  001B14  90D8               	bcf	status,0,c
  5643  001B16  3210               	rrcf	___fladd@grs,f,c
  5644  001B18                     l2965:
  5645  001B18  B001               	btfsc	___fladd@b,0,c
  5646  001B1A  8E10               	bsf	___fladd@grs,7,c
  5647  001B1C  3404               	rlcf	___fladd@b+3,w,c
  5648  001B1E  3204               	rrcf	___fladd@b+3,f,c
  5649  001B20  3203               	rrcf	___fladd@b+2,f,c
  5650  001B22  3202               	rrcf	___fladd@b+1,f,c
  5651  001B24  3201               	rrcf	___fladd@b,f,c
  5652  001B26  2A0F               	incf	___fladd@bexp,f,c
  5653  001B28  D05F               	goto	u3170
  5654  001B2A                     l2973:
  5655  001B2A  5005               	movf	___fladd@a,w,c
  5656  001B2C  5C01               	subwf	___fladd@b,w,c
  5657  001B2E  5006               	movf	___fladd@a+1,w,c
  5658  001B30  5802               	subwfb	___fladd@b+1,w,c
  5659  001B32  5007               	movf	___fladd@a+2,w,c
  5660  001B34  5803               	subwfb	___fladd@b+2,w,c
  5661  001B36  5004               	movf	___fladd@b+3,w,c
  5662  001B38  0A80               	xorlw	128
  5663  001B3A  6E09               	movwf	??___fladd& (0+255),c
  5664  001B3C  5008               	movf	___fladd@a+3,w,c
  5665  001B3E  0A80               	xorlw	128
  5666  001B40  5809               	subwfb	??___fladd& (0+255),w,c
  5667  001B42  B0D8               	btfsc	status,0,c
  5668  001B44  D025               	goto	l2983
  5669  001B46  5001               	movf	___fladd@b,w,c
  5670  001B48  5C05               	subwf	___fladd@a,w,c
  5671  001B4A  6E09               	movwf	??___fladd& (0+255),c
  5672  001B4C  5002               	movf	___fladd@b+1,w,c
  5673  001B4E  5806               	subwfb	___fladd@a+1,w,c
  5674  001B50  6E0A               	movwf	(??___fladd+1)& (0+255),c
  5675  001B52  5003               	movf	___fladd@b+2,w,c
  5676  001B54  5807               	subwfb	___fladd@a+2,w,c
  5677  001B56  6E0B               	movwf	(??___fladd+2)& (0+255),c
  5678  001B58  5004               	movf	___fladd@b+3,w,c
  5679  001B5A  5808               	subwfb	___fladd@a+3,w,c
  5680  001B5C  6E0C               	movwf	(??___fladd+3)& (0+255),c
  5681  001B5E  0EFF               	movlw	255
  5682  001B60  2409               	addwf	??___fladd,w,c
  5683  001B62  6E01               	movwf	___fladd@b,c
  5684  001B64  0EFF               	movlw	255
  5685  001B66  200A               	addwfc	??___fladd+1,w,c
  5686  001B68  6E02               	movwf	___fladd@b+1,c
  5687  001B6A  0EFF               	movlw	255
  5688  001B6C  200B               	addwfc	??___fladd+2,w,c
  5689  001B6E  6E03               	movwf	___fladd@b+2,c
  5690  001B70  0EFF               	movlw	255
  5691  001B72  200C               	addwfc	??___fladd+3,w,c
  5692  001B74  6E04               	movwf	___fladd@b+3,c
  5693  001B76  0E80               	movlw	128
  5694  001B78  1A0D               	xorwf	___fladd@signs,f,c
  5695  001B7A  6C10               	negf	___fladd@grs,c
  5696  001B7C  5010               	movf	___fladd@grs,w,c
  5697  001B7E  A4D8               	btfss	status,2,c
  5698  001B80  D00F               	goto	l844
  5699  001B82  0E01               	movlw	1
  5700  001B84  2601               	addwf	___fladd@b,f,c
  5701  001B86  0E00               	movlw	0
  5702  001B88  2202               	addwfc	___fladd@b+1,f,c
  5703  001B8A  2203               	addwfc	___fladd@b+2,f,c
  5704  001B8C  2204               	addwfc	___fladd@b+3,f,c
  5705  001B8E  D008               	goto	l844
  5706  001B90                     l2983:
  5707  001B90  5005               	movf	___fladd@a,w,c
  5708  001B92  5E01               	subwf	___fladd@b,f,c
  5709  001B94  5006               	movf	___fladd@a+1,w,c
  5710  001B96  5A02               	subwfb	___fladd@b+1,f,c
  5711  001B98  5007               	movf	___fladd@a+2,w,c
  5712  001B9A  5A03               	subwfb	___fladd@b+2,f,c
  5713  001B9C  5008               	movf	___fladd@a+3,w,c
  5714  001B9E  5A04               	subwfb	___fladd@b+3,f,c
  5715  001BA0                     l844:
  5716  001BA0  5001               	movf	___fladd@b,w,c
  5717  001BA2  1002               	iorwf	___fladd@b+1,w,c
  5718  001BA4  1003               	iorwf	___fladd@b+2,w,c
  5719  001BA6  1004               	iorwf	___fladd@b+3,w,c
  5720  001BA8  A4D8               	btfss	status,2,c
  5721  001BAA  D01C               	goto	l3007
  5722  001BAC  5010               	movf	___fladd@grs,w,c
  5723  001BAE  A4D8               	btfss	status,2,c
  5724  001BB0  D019               	goto	l3007
  5725  001BB2  0E00               	movlw	0
  5726  001BB4  6E01               	movwf	?___fladd,c
  5727  001BB6  0E00               	movlw	0
  5728  001BB8  6E02               	movwf	?___fladd+1,c
  5729  001BBA  0E00               	movlw	0
  5730  001BBC  6E03               	movwf	?___fladd+2,c
  5731  001BBE  0E00               	movlw	0
  5732  001BC0  6E04               	movwf	?___fladd+3,c
  5733  001BC2  0012               	return	
  5734  001BC4                     l2991:
  5735  001BC4  90D8               	bcf	status,0,c
  5736  001BC6  3601               	rlcf	___fladd@b,f,c
  5737  001BC8  3602               	rlcf	___fladd@b+1,f,c
  5738  001BCA  3603               	rlcf	___fladd@b+2,f,c
  5739  001BCC  3604               	rlcf	___fladd@b+3,f,c
  5740  001BCE  BE10               	btfsc	___fladd@grs,7,c
  5741  001BD0  8001               	bsf	___fladd@b,0,c
  5742  001BD2  A010               	btfss	___fladd@grs,0,c
  5743  001BD4  D002               	goto	l3001
  5744  001BD6  80D8               	bsf	status,0,c
  5745  001BD8  D001               	goto	L11
  5746  001BDA                     l3001:
  5747  001BDA  90D8               	bcf	status,0,c
  5748  001BDC                     L11:
  5749  001BDC  3610               	rlcf	___fladd@grs,f,c
  5750  001BDE  500F               	movf	___fladd@bexp,w,c
  5751  001BE0  A4D8               	btfss	status,2,c
  5752  001BE2  060F               	decf	___fladd@bexp,f,c
  5753  001BE4                     l3007:
  5754  001BE4  AE03               	btfss	___fladd@b+2,7,c
  5755  001BE6  D7EE               	goto	l2991
  5756  001BE8                     u3170:
  5757  001BE8  0E00               	movlw	0
  5758  001BEA  6E0E               	movwf	___fladd@aexp,c
  5759  001BEC  AE10               	btfss	___fladd@grs,7,c
  5760  001BEE  D00B               	goto	l853
  5761  001BF0  C010  F009         	movff	___fladd@grs,??___fladd
  5762  001BF4  0E7F               	movlw	127
  5763  001BF6  1609               	andwf	??___fladd,f,c
  5764  001BF8  B4D8               	btfsc	status,2,c
  5765  001BFA  D003               	goto	l854
  5766  001BFC                     u3190:
  5767  001BFC  0E01               	movlw	1
  5768  001BFE  6E0E               	movwf	___fladd@aexp,c
  5769  001C00  D002               	goto	l853
  5770  001C02                     l854:
  5771  001C02  B001               	btfsc	___fladd@b,0,c
  5772  001C04  D7FB               	goto	u3190
  5773  001C06                     l853:
  5774  001C06  500E               	movf	___fladd@aexp,w,c
  5775  001C08  B4D8               	btfsc	status,2,c
  5776  001C0A  D020               	goto	l3027
  5777  001C0C  0E01               	movlw	1
  5778  001C0E  2601               	addwf	___fladd@b,f,c
  5779  001C10  0E00               	movlw	0
  5780  001C12  2202               	addwfc	___fladd@b+1,f,c
  5781  001C14  2203               	addwfc	___fladd@b+2,f,c
  5782  001C16  2204               	addwfc	___fladd@b+3,f,c
  5783  001C18  A004               	btfss	___fladd@b+3,0,c
  5784  001C1A  D018               	goto	l3027
  5785  001C1C  C001  F009         	movff	___fladd@b,??___fladd
  5786  001C20  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5787  001C24  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5788  001C28  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5789  001C2C  340C               	rlcf	??___fladd+3,w,c
  5790  001C2E  320C               	rrcf	??___fladd+3,f,c
  5791  001C30  320B               	rrcf	??___fladd+2,f,c
  5792  001C32  320A               	rrcf	??___fladd+1,f,c
  5793  001C34  3209               	rrcf	??___fladd,f,c
  5794  001C36  C009  F001         	movff	??___fladd,___fladd@b
  5795  001C3A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5796  001C3E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5797  001C42  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5798  001C46  280F               	incf	___fladd@bexp,w,c
  5799  001C48  A4D8               	btfss	status,2,c
  5800  001C4A  2A0F               	incf	___fladd@bexp,f,c
  5801  001C4C                     l3027:
  5802  001C4C  280F               	incf	___fladd@bexp,w,c
  5803  001C4E  B4D8               	btfsc	status,2,c
  5804  001C50  D003               	goto	u3250
  5805  001C52  500F               	movf	___fladd@bexp,w,c
  5806  001C54  A4D8               	btfss	status,2,c
  5807  001C56  D00D               	goto	l3035
  5808  001C58                     u3250:
  5809  001C58  0E00               	movlw	0
  5810  001C5A  6E01               	movwf	___fladd@b,c
  5811  001C5C  0E00               	movlw	0
  5812  001C5E  6E02               	movwf	___fladd@b+1,c
  5813  001C60  0E00               	movlw	0
  5814  001C62  6E03               	movwf	___fladd@b+2,c
  5815  001C64  0E00               	movlw	0
  5816  001C66  6E04               	movwf	___fladd@b+3,c
  5817  001C68  500F               	movf	___fladd@bexp,w,c
  5818  001C6A  A4D8               	btfss	status,2,c
  5819  001C6C  D002               	goto	l3035
  5820  001C6E  0E00               	movlw	0
  5821  001C70  6E0D               	movwf	___fladd@signs,c
  5822  001C72                     l3035:
  5823  001C72  A00F               	btfss	___fladd@bexp,0,c
  5824  001C74  D002               	goto	l3039
  5825  001C76  8E03               	bsf	___fladd@b+2,7,c
  5826  001C78  D001               	goto	l3041
  5827  001C7A                     l3039:
  5828  001C7A  9E03               	bcf	___fladd@b+2,7,c
  5829  001C7C                     l3041:
  5830  001C7C  90D8               	bcf	status,0,c
  5831  001C7E  300F               	rrcf	___fladd@bexp,w,c
  5832  001C80  6E04               	movwf	___fladd@b+3,c
  5833  001C82  BE0D               	btfsc	___fladd@signs,7,c
  5834  001C84  8E04               	bsf	___fladd@b+3,7,c
  5835  001C86  C001  F001         	movff	___fladd@b,?___fladd
  5836  001C8A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5837  001C8E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5838  001C92  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5839  001C96  0012               	return		;funcret
  5840  001C98                     __end_of___fladd:
  5841                           	opt callstack 0
  5842                           
  5843 ;; *************** function ___flneg *****************
  5844 ;; Defined at:
  5845 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  f1              4    0[COMRAM] unsigned char 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  4    0[COMRAM] unsigned char 
  5852 ;; Registers used:
  5853 ;;		wreg, status,2, status,0
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5859 ;;      Params:         4       0       0       0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0
  5862 ;;      Totals:         4       0       0       0       0       0       0
  5863 ;;Total ram usage:        4 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; This function calls:
  5866 ;;		Nothing
  5867 ;; This function is called by:
  5868 ;;		_efgtoa
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text17
  5873  003456                     __ptext17:
  5874                           	opt callstack 0
  5875  003456                     ___flneg:
  5876                           	opt callstack 26
  5877                           
  5878                           ;incstack = 0
  5879  003456  5001               	movf	___flneg@f1,w,c
  5880  003458  1002               	iorwf	___flneg@f1+1,w,c
  5881  00345A  1003               	iorwf	___flneg@f1+2,w,c
  5882  00345C  1004               	iorwf	___flneg@f1+3,w,c
  5883  00345E  B4D8               	btfsc	status,2,c
  5884  003460  D008               	goto	l3543
  5885  003462  0E00               	movlw	0
  5886  003464  1A01               	xorwf	___flneg@f1,f,c
  5887  003466  0E00               	movlw	0
  5888  003468  1A02               	xorwf	___flneg@f1+1,f,c
  5889  00346A  0E00               	movlw	0
  5890  00346C  1A03               	xorwf	___flneg@f1+2,f,c
  5891  00346E  0E80               	movlw	128
  5892  003470  1A04               	xorwf	___flneg@f1+3,f,c
  5893  003472                     l3543:
  5894  003472  C001  F001         	movff	___flneg@f1,?___flneg
  5895  003476  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5896  00347A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5897  00347E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5898  003482  0012               	return		;funcret
  5899  003484                     __end_of___flneg:
  5900                           	opt callstack 0
  5901                           
  5902 ;; *************** function ___flmul *****************
  5903 ;; Defined at:
  5904 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  b               4   14[COMRAM] unsigned char 
  5907 ;;  a               4   18[COMRAM] unsigned char 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  prod            4   33[COMRAM] struct .
  5910 ;;  grs             4   27[COMRAM] unsigned long 
  5911 ;;  temp            2   37[COMRAM] struct .
  5912 ;;  bexp            1   32[COMRAM] unsigned char 
  5913 ;;  aexp            1   31[COMRAM] unsigned char 
  5914 ;;  sign            1   26[COMRAM] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  4   14[COMRAM] unsigned char 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0, prodl, prodh
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5924 ;;      Params:         8       0       0       0       0       0       0
  5925 ;;      Locals:        13       0       0       0       0       0       0
  5926 ;;      Temps:          4       0       0       0       0       0       0
  5927 ;;      Totals:        25       0       0       0       0       0       0
  5928 ;;Total ram usage:       25 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;;		_efgtoa
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text18
  5939  00163A                     __ptext18:
  5940                           	opt callstack 0
  5941  00163A                     ___flmul:
  5942                           	opt callstack 26
  5943                           
  5944                           ;incstack = 0
  5945  00163A  5012               	movf	___flmul@b+3,w,c
  5946  00163C  0B80               	andlw	128
  5947  00163E  6E1B               	movwf	___flmul@sign,c
  5948  001640  5012               	movf	___flmul@b+3,w,c
  5949  001642  2412               	addwf	___flmul@b+3,w,c
  5950  001644  6E21               	movwf	___flmul@bexp,c
  5951  001646  BE11               	btfsc	___flmul@b+2,7,c
  5952  001648  8021               	bsf	___flmul@bexp,0,c
  5953  00164A  5021               	movf	___flmul@bexp,w,c
  5954  00164C  B4D8               	btfsc	status,2,c
  5955  00164E  D00D               	goto	l3299
  5956  001650  2821               	incf	___flmul@bexp,w,c
  5957  001652  A4D8               	btfss	status,2,c
  5958  001654  D008               	goto	l3297
  5959  001656  0E00               	movlw	0
  5960  001658  6E0F               	movwf	___flmul@b,c
  5961  00165A  0E00               	movlw	0
  5962  00165C  6E10               	movwf	___flmul@b+1,c
  5963  00165E  0E00               	movlw	0
  5964  001660  6E11               	movwf	___flmul@b+2,c
  5965  001662  0E00               	movlw	0
  5966  001664  6E12               	movwf	___flmul@b+3,c
  5967  001666                     l3297:
  5968  001666  8E11               	bsf	___flmul@b+2,7,c
  5969  001668  D008               	goto	l3301
  5970  00166A                     l3299:
  5971  00166A  0E00               	movlw	0
  5972  00166C  6E0F               	movwf	___flmul@b,c
  5973  00166E  0E00               	movlw	0
  5974  001670  6E10               	movwf	___flmul@b+1,c
  5975  001672  0E00               	movlw	0
  5976  001674  6E11               	movwf	___flmul@b+2,c
  5977  001676  0E00               	movlw	0
  5978  001678  6E12               	movwf	___flmul@b+3,c
  5979  00167A                     l3301:
  5980  00167A  5016               	movf	___flmul@a+3,w,c
  5981  00167C  0B80               	andlw	128
  5982  00167E  1A1B               	xorwf	___flmul@sign,f,c
  5983  001680  5016               	movf	___flmul@a+3,w,c
  5984  001682  2416               	addwf	___flmul@a+3,w,c
  5985  001684  6E20               	movwf	___flmul@aexp,c
  5986  001686  BE15               	btfsc	___flmul@a+2,7,c
  5987  001688  8020               	bsf	___flmul@aexp,0,c
  5988  00168A  5020               	movf	___flmul@aexp,w,c
  5989  00168C  B4D8               	btfsc	status,2,c
  5990  00168E  D00D               	goto	l3317
  5991  001690  2820               	incf	___flmul@aexp,w,c
  5992  001692  A4D8               	btfss	status,2,c
  5993  001694  D008               	goto	l3315
  5994  001696  0E00               	movlw	0
  5995  001698  6E13               	movwf	___flmul@a,c
  5996  00169A  0E00               	movlw	0
  5997  00169C  6E14               	movwf	___flmul@a+1,c
  5998  00169E  0E00               	movlw	0
  5999  0016A0  6E15               	movwf	___flmul@a+2,c
  6000  0016A2  0E00               	movlw	0
  6001  0016A4  6E16               	movwf	___flmul@a+3,c
  6002  0016A6                     l3315:
  6003  0016A6  8E15               	bsf	___flmul@a+2,7,c
  6004  0016A8  D008               	goto	l913
  6005  0016AA                     l3317:
  6006  0016AA  0E00               	movlw	0
  6007  0016AC  6E13               	movwf	___flmul@a,c
  6008  0016AE  0E00               	movlw	0
  6009  0016B0  6E14               	movwf	___flmul@a+1,c
  6010  0016B2  0E00               	movlw	0
  6011  0016B4  6E15               	movwf	___flmul@a+2,c
  6012  0016B6  0E00               	movlw	0
  6013  0016B8  6E16               	movwf	___flmul@a+3,c
  6014  0016BA                     l913:
  6015  0016BA  5020               	movf	___flmul@aexp,w,c
  6016  0016BC  B4D8               	btfsc	status,2,c
  6017  0016BE  D003               	goto	u3870
  6018  0016C0  5021               	movf	___flmul@bexp,w,c
  6019  0016C2  A4D8               	btfss	status,2,c
  6020  0016C4  D009               	goto	l3325
  6021  0016C6                     u3870:
  6022  0016C6  0E00               	movlw	0
  6023  0016C8  6E0F               	movwf	?___flmul,c
  6024  0016CA  0E00               	movlw	0
  6025  0016CC  6E10               	movwf	?___flmul+1,c
  6026  0016CE  0E00               	movlw	0
  6027  0016D0  6E11               	movwf	?___flmul+2,c
  6028  0016D2  0E00               	movlw	0
  6029  0016D4  6E12               	movwf	?___flmul+3,c
  6030  0016D6  0012               	return	
  6031  0016D8                     l3325:
  6032  0016D8  5015               	movf	___flmul@a+2,w,c
  6033  0016DA  020F               	mulwf	___flmul@b,c
  6034  0016DC  CFF3 F026          	movff	prodl,___flmul@temp
  6035  0016E0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6036  0016E4  5026               	movf	___flmul@temp,w,c
  6037  0016E6  6E1C               	movwf	___flmul@grs,c
  6038  0016E8  6A1D               	clrf	___flmul@grs+1,c
  6039  0016EA  6A1E               	clrf	___flmul@grs+2,c
  6040  0016EC  6A1F               	clrf	___flmul@grs+3,c
  6041  0016EE  5027               	movf	___flmul@temp+1,w,c
  6042  0016F0  6E22               	movwf	___flmul@prod,c
  6043  0016F2  6A23               	clrf	___flmul@prod+1,c
  6044  0016F4  6A24               	clrf	___flmul@prod+2,c
  6045  0016F6  6A25               	clrf	___flmul@prod+3,c
  6046  0016F8  5014               	movf	___flmul@a+1,w,c
  6047  0016FA  0210               	mulwf	___flmul@b+1,c
  6048  0016FC  CFF3 F026          	movff	prodl,___flmul@temp
  6049  001700  CFF4 F027          	movff	prodh,___flmul@temp+1
  6050  001704  5026               	movf	___flmul@temp,w,c
  6051  001706  261C               	addwf	___flmul@grs,f,c
  6052  001708  0E00               	movlw	0
  6053  00170A  221D               	addwfc	___flmul@grs+1,f,c
  6054  00170C  221E               	addwfc	___flmul@grs+2,f,c
  6055  00170E  221F               	addwfc	___flmul@grs+3,f,c
  6056  001710  5027               	movf	___flmul@temp+1,w,c
  6057  001712  2622               	addwf	___flmul@prod,f,c
  6058  001714  0E00               	movlw	0
  6059  001716  2223               	addwfc	___flmul@prod+1,f,c
  6060  001718  2224               	addwfc	___flmul@prod+2,f,c
  6061  00171A  2225               	addwfc	___flmul@prod+3,f,c
  6062  00171C  5013               	movf	___flmul@a,w,c
  6063  00171E  0211               	mulwf	___flmul@b+2,c
  6064  001720  CFF3 F026          	movff	prodl,___flmul@temp
  6065  001724  CFF4 F027          	movff	prodh,___flmul@temp+1
  6066  001728  5026               	movf	___flmul@temp,w,c
  6067  00172A  261C               	addwf	___flmul@grs,f,c
  6068  00172C  0E00               	movlw	0
  6069  00172E  221D               	addwfc	___flmul@grs+1,f,c
  6070  001730  221E               	addwfc	___flmul@grs+2,f,c
  6071  001732  221F               	addwfc	___flmul@grs+3,f,c
  6072  001734  5027               	movf	___flmul@temp+1,w,c
  6073  001736  2622               	addwf	___flmul@prod,f,c
  6074  001738  0E00               	movlw	0
  6075  00173A  2223               	addwfc	___flmul@prod+1,f,c
  6076  00173C  2224               	addwfc	___flmul@prod+2,f,c
  6077  00173E  2225               	addwfc	___flmul@prod+3,f,c
  6078  001740  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6079  001744  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6080  001748  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6081  00174C  6A1C               	clrf	___flmul@grs,c
  6082  00174E  5013               	movf	___flmul@a,w,c
  6083  001750  0210               	mulwf	___flmul@b+1,c
  6084  001752  CFF3 F026          	movff	prodl,___flmul@temp
  6085  001756  CFF4 F027          	movff	prodh,___flmul@temp+1
  6086  00175A  5026               	movf	___flmul@temp,w,c
  6087  00175C  261C               	addwf	___flmul@grs,f,c
  6088  00175E  5027               	movf	___flmul@temp+1,w,c
  6089  001760  221D               	addwfc	___flmul@grs+1,f,c
  6090  001762  0E00               	movlw	0
  6091  001764  221E               	addwfc	___flmul@grs+2,f,c
  6092  001766  0E00               	movlw	0
  6093  001768  221F               	addwfc	___flmul@grs+3,f,c
  6094  00176A  5014               	movf	___flmul@a+1,w,c
  6095  00176C  020F               	mulwf	___flmul@b,c
  6096  00176E  CFF3 F026          	movff	prodl,___flmul@temp
  6097  001772  CFF4 F027          	movff	prodh,___flmul@temp+1
  6098  001776  5026               	movf	___flmul@temp,w,c
  6099  001778  261C               	addwf	___flmul@grs,f,c
  6100  00177A  5027               	movf	___flmul@temp+1,w,c
  6101  00177C  221D               	addwfc	___flmul@grs+1,f,c
  6102  00177E  0E00               	movlw	0
  6103  001780  221E               	addwfc	___flmul@grs+2,f,c
  6104  001782  0E00               	movlw	0
  6105  001784  221F               	addwfc	___flmul@grs+3,f,c
  6106  001786  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6107  00178A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6108  00178E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6109  001792  6A1C               	clrf	___flmul@grs,c
  6110  001794  5013               	movf	___flmul@a,w,c
  6111  001796  020F               	mulwf	___flmul@b,c
  6112  001798  CFF3 F026          	movff	prodl,___flmul@temp
  6113  00179C  CFF4 F027          	movff	prodh,___flmul@temp+1
  6114  0017A0  5026               	movf	___flmul@temp,w,c
  6115  0017A2  261C               	addwf	___flmul@grs,f,c
  6116  0017A4  5027               	movf	___flmul@temp+1,w,c
  6117  0017A6  221D               	addwfc	___flmul@grs+1,f,c
  6118  0017A8  0E00               	movlw	0
  6119  0017AA  221E               	addwfc	___flmul@grs+2,f,c
  6120  0017AC  0E00               	movlw	0
  6121  0017AE  221F               	addwfc	___flmul@grs+3,f,c
  6122  0017B0  5015               	movf	___flmul@a+2,w,c
  6123  0017B2  0210               	mulwf	___flmul@b+1,c
  6124  0017B4  CFF3 F026          	movff	prodl,___flmul@temp
  6125  0017B8  CFF4 F027          	movff	prodh,___flmul@temp+1
  6126  0017BC  5026               	movf	___flmul@temp,w,c
  6127  0017BE  2622               	addwf	___flmul@prod,f,c
  6128  0017C0  5027               	movf	___flmul@temp+1,w,c
  6129  0017C2  2223               	addwfc	___flmul@prod+1,f,c
  6130  0017C4  0E00               	movlw	0
  6131  0017C6  2224               	addwfc	___flmul@prod+2,f,c
  6132  0017C8  0E00               	movlw	0
  6133  0017CA  2225               	addwfc	___flmul@prod+3,f,c
  6134  0017CC  5014               	movf	___flmul@a+1,w,c
  6135  0017CE  0211               	mulwf	___flmul@b+2,c
  6136  0017D0  CFF3 F026          	movff	prodl,___flmul@temp
  6137  0017D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  6138  0017D8  5026               	movf	___flmul@temp,w,c
  6139  0017DA  2622               	addwf	___flmul@prod,f,c
  6140  0017DC  5027               	movf	___flmul@temp+1,w,c
  6141  0017DE  2223               	addwfc	___flmul@prod+1,f,c
  6142  0017E0  0E00               	movlw	0
  6143  0017E2  2224               	addwfc	___flmul@prod+2,f,c
  6144  0017E4  0E00               	movlw	0
  6145  0017E6  2225               	addwfc	___flmul@prod+3,f,c
  6146  0017E8  5015               	movf	___flmul@a+2,w,c
  6147  0017EA  0211               	mulwf	___flmul@b+2,c
  6148  0017EC  CFF3 F026          	movff	prodl,___flmul@temp
  6149  0017F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  6150  0017F4  5026               	movf	___flmul@temp,w,c
  6151  0017F6  6E17               	movwf	??___flmul& (0+255),c
  6152  0017F8  5027               	movf	___flmul@temp+1,w,c
  6153  0017FA  6E18               	movwf	(??___flmul+1)& (0+255),c
  6154  0017FC  6A19               	clrf	(??___flmul+2)& (0+255),c
  6155  0017FE  6A1A               	clrf	(??___flmul+3)& (0+255),c
  6156  001800  C019  F01A         	movff	??___flmul+2,??___flmul+3
  6157  001804  C018  F019         	movff	??___flmul+1,??___flmul+2
  6158  001808  C017  F018         	movff	??___flmul,??___flmul+1
  6159  00180C  6A17               	clrf	??___flmul,c
  6160  00180E  5017               	movf	??___flmul,w,c
  6161  001810  2622               	addwf	___flmul@prod,f,c
  6162  001812  5018               	movf	??___flmul+1,w,c
  6163  001814  2223               	addwfc	___flmul@prod+1,f,c
  6164  001816  5019               	movf	??___flmul+2,w,c
  6165  001818  2224               	addwfc	___flmul@prod+2,f,c
  6166  00181A  501A               	movf	??___flmul+3,w,c
  6167  00181C  2225               	addwfc	___flmul@prod+3,f,c
  6168  00181E  C01C  F017         	movff	___flmul@grs,??___flmul
  6169  001822  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  6170  001826  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  6171  00182A  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  6172  00182E  0E19               	movlw	25
  6173  001830  D005               	goto	u3880
  6174  001832                     u3885:
  6175  001832  90D8               	bcf	status,0,c
  6176  001834  321A               	rrcf	??___flmul+3,f,c
  6177  001836  3219               	rrcf	??___flmul+2,f,c
  6178  001838  3218               	rrcf	??___flmul+1,f,c
  6179  00183A  3217               	rrcf	??___flmul,f,c
  6180  00183C                     u3880:
  6181  00183C  2EE8               	decfsz	wreg,f,c
  6182  00183E  D7F9               	goto	u3885
  6183  001840  5017               	movf	??___flmul,w,c
  6184  001842  2622               	addwf	___flmul@prod,f,c
  6185  001844  5018               	movf	??___flmul+1,w,c
  6186  001846  2223               	addwfc	___flmul@prod+1,f,c
  6187  001848  5019               	movf	??___flmul+2,w,c
  6188  00184A  2224               	addwfc	___flmul@prod+2,f,c
  6189  00184C  501A               	movf	??___flmul+3,w,c
  6190  00184E  2225               	addwfc	___flmul@prod+3,f,c
  6191  001850  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6192  001854  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6193  001858  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6194  00185C  6A1C               	clrf	___flmul@grs,c
  6195  00185E  5020               	movf	___flmul@aexp,w,c
  6196  001860  C021  F017         	movff	___flmul@bexp,??___flmul
  6197  001864  6A18               	clrf	(??___flmul+1)& (0+255),c
  6198  001866  2617               	addwf	??___flmul,f,c
  6199  001868  0E00               	movlw	0
  6200  00186A  2218               	addwfc	??___flmul+1,f,c
  6201  00186C  0E82               	movlw	130
  6202  00186E  2417               	addwf	??___flmul,w,c
  6203  001870  6E26               	movwf	___flmul@temp,c
  6204  001872  0EFF               	movlw	255
  6205  001874  2018               	addwfc	??___flmul+1,w,c
  6206  001876  6E27               	movwf	___flmul@temp+1,c
  6207  001878  D00F               	goto	l3373
  6208  00187A                     l3367:
  6209  00187A  90D8               	bcf	status,0,c
  6210  00187C  3622               	rlcf	___flmul@prod,f,c
  6211  00187E  3623               	rlcf	___flmul@prod+1,f,c
  6212  001880  3624               	rlcf	___flmul@prod+2,f,c
  6213  001882  3625               	rlcf	___flmul@prod+3,f,c
  6214  001884  BE1F               	btfsc	___flmul@grs+3,7,c
  6215  001886  8022               	bsf	___flmul@prod,0,c
  6216  001888  90D8               	bcf	status,0,c
  6217  00188A  361C               	rlcf	___flmul@grs,f,c
  6218  00188C  361D               	rlcf	___flmul@grs+1,f,c
  6219  00188E  361E               	rlcf	___flmul@grs+2,f,c
  6220  001890  361F               	rlcf	___flmul@grs+3,f,c
  6221  001892  0626               	decf	___flmul@temp,f,c
  6222  001894  A0D8               	btfss	status,0,c
  6223  001896  0627               	decf	___flmul@temp+1,f,c
  6224  001898                     l3373:
  6225  001898  AE24               	btfss	___flmul@prod+2,7,c
  6226  00189A  D7EF               	goto	l3367
  6227  00189C  0E00               	movlw	0
  6228  00189E  6E20               	movwf	___flmul@aexp,c
  6229  0018A0  AE1F               	btfss	___flmul@grs+3,7,c
  6230  0018A2  D017               	goto	l922
  6231  0018A4  0EFF               	movlw	255
  6232  0018A6  141C               	andwf	___flmul@grs,w,c
  6233  0018A8  6E17               	movwf	??___flmul& (0+255),c
  6234  0018AA  0EFF               	movlw	255
  6235  0018AC  141D               	andwf	___flmul@grs+1,w,c
  6236  0018AE  6E18               	movwf	(??___flmul+1)& (0+255),c
  6237  0018B0  0EFF               	movlw	255
  6238  0018B2  141E               	andwf	___flmul@grs+2,w,c
  6239  0018B4  6E19               	movwf	(??___flmul+2)& (0+255),c
  6240  0018B6  0E7F               	movlw	127
  6241  0018B8  141F               	andwf	___flmul@grs+3,w,c
  6242  0018BA  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6243  0018BC  5017               	movf	??___flmul,w,c
  6244  0018BE  1018               	iorwf	??___flmul+1,w,c
  6245  0018C0  1019               	iorwf	??___flmul+2,w,c
  6246  0018C2  101A               	iorwf	??___flmul+3,w,c
  6247  0018C4  B4D8               	btfsc	status,2,c
  6248  0018C6  D003               	goto	l923
  6249  0018C8                     u3920:
  6250  0018C8  0E01               	movlw	1
  6251  0018CA  6E20               	movwf	___flmul@aexp,c
  6252  0018CC  D002               	goto	l922
  6253  0018CE                     l923:
  6254  0018CE  B022               	btfsc	___flmul@prod,0,c
  6255  0018D0  D7FB               	goto	u3920
  6256  0018D2                     l922:
  6257  0018D2  5020               	movf	___flmul@aexp,w,c
  6258  0018D4  B4D8               	btfsc	status,2,c
  6259  0018D6  D01F               	goto	l3393
  6260  0018D8  0E01               	movlw	1
  6261  0018DA  2622               	addwf	___flmul@prod,f,c
  6262  0018DC  0E00               	movlw	0
  6263  0018DE  2223               	addwfc	___flmul@prod+1,f,c
  6264  0018E0  2224               	addwfc	___flmul@prod+2,f,c
  6265  0018E2  2225               	addwfc	___flmul@prod+3,f,c
  6266  0018E4  A025               	btfss	___flmul@prod+3,0,c
  6267  0018E6  D017               	goto	l3393
  6268  0018E8  C022  F017         	movff	___flmul@prod,??___flmul
  6269  0018EC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6270  0018F0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6271  0018F4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6272  0018F8  341A               	rlcf	??___flmul+3,w,c
  6273  0018FA  321A               	rrcf	??___flmul+3,f,c
  6274  0018FC  3219               	rrcf	??___flmul+2,f,c
  6275  0018FE  3218               	rrcf	??___flmul+1,f,c
  6276  001900  3217               	rrcf	??___flmul,f,c
  6277  001902  C017  F022         	movff	??___flmul,___flmul@prod
  6278  001906  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6279  00190A  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6280  00190E  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6281  001912  4A26               	infsnz	___flmul@temp,f,c
  6282  001914  2A27               	incf	___flmul@temp+1,f,c
  6283  001916                     l3393:
  6284  001916  BE27               	btfsc	___flmul@temp+1,7,c
  6285  001918  D00D               	goto	l3397
  6286  00191A  5027               	movf	___flmul@temp+1,w,c
  6287  00191C  E103               	bnz	u3960
  6288  00191E  2826               	incf	___flmul@temp,w,c
  6289  001920  A0D8               	btfss	status,0,c
  6290  001922  D008               	goto	l3397
  6291  001924                     u3960:
  6292  001924  0E00               	movlw	0
  6293  001926  6E22               	movwf	___flmul@prod,c
  6294  001928  0E00               	movlw	0
  6295  00192A  6E23               	movwf	___flmul@prod+1,c
  6296  00192C  0E80               	movlw	128
  6297  00192E  6E24               	movwf	___flmul@prod+2,c
  6298  001930  0E7F               	movlw	127
  6299  001932  D020               	goto	L12
  6300  001934                     l3397:
  6301  001934  BE27               	btfsc	___flmul@temp+1,7,c
  6302  001936  D005               	goto	u3970
  6303  001938  5027               	movf	___flmul@temp+1,w,c
  6304  00193A  E10E               	bnz	l930
  6305  00193C  0426               	decf	___flmul@temp,w,c
  6306  00193E  B0D8               	btfsc	status,0,c
  6307  001940  D00B               	goto	l930
  6308  001942                     u3970:
  6309  001942  0E00               	movlw	0
  6310  001944  6E22               	movwf	___flmul@prod,c
  6311  001946  0E00               	movlw	0
  6312  001948  6E23               	movwf	___flmul@prod+1,c
  6313  00194A  0E00               	movlw	0
  6314  00194C  6E24               	movwf	___flmul@prod+2,c
  6315  00194E  0E00               	movlw	0
  6316  001950  6E25               	movwf	___flmul@prod+3,c
  6317  001952  0E00               	movlw	0
  6318  001954  6E1B               	movwf	___flmul@sign,c
  6319  001956  D00F               	goto	l3409
  6320  001958                     l930:
  6321  001958  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6322  00195C  0EFF               	movlw	255
  6323  00195E  1622               	andwf	___flmul@prod,f,c
  6324  001960  0EFF               	movlw	255
  6325  001962  1623               	andwf	___flmul@prod+1,f,c
  6326  001964  0E7F               	movlw	127
  6327  001966  1624               	andwf	___flmul@prod+2,f,c
  6328  001968  0E00               	movlw	0
  6329  00196A  1625               	andwf	___flmul@prod+3,f,c
  6330  00196C  B021               	btfsc	___flmul@bexp,0,c
  6331  00196E  8E24               	bsf	___flmul@prod+2,7,c
  6332  001970  90D8               	bcf	status,0,c
  6333  001972  3021               	rrcf	___flmul@bexp,w,c
  6334  001974                     L12:
  6335  001974  6E25               	movwf	___flmul@prod+3,c
  6336  001976                     l3409:
  6337  001976  501B               	movf	___flmul@sign,w,c
  6338  001978  1225               	iorwf	___flmul@prod+3,f,c
  6339  00197A  C022  F00F         	movff	___flmul@prod,?___flmul
  6340  00197E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6341  001982  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6342  001986  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6343  00198A  0012               	return		;funcret
  6344  00198C                     __end_of___flmul:
  6345                           	opt callstack 0
  6346                           
  6347 ;; *************** function ___flge *****************
  6348 ;; Defined at:
  6349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  ff1             4   39[COMRAM] unsigned char 
  6352 ;;  ff2             4   43[COMRAM] unsigned char 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;		None               void
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6364 ;;      Params:         8       0       0       0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0
  6366 ;;      Temps:          4       0       0       0       0       0       0
  6367 ;;      Totals:        12       0       0       0       0       0       0
  6368 ;;Total ram usage:       12 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_efgtoa
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text19
  6378  0028EC                     __ptext19:
  6379                           	opt callstack 0
  6380  0028EC                     ___flge:
  6381                           	opt callstack 26
  6382                           
  6383                           ;incstack = 0
  6384  0028EC  0E00               	movlw	0
  6385  0028EE  1428               	andwf	___flge@ff1,w,c
  6386  0028F0  6E30               	movwf	??___flge& (0+255),c
  6387  0028F2  0E00               	movlw	0
  6388  0028F4  1429               	andwf	___flge@ff1+1,w,c
  6389  0028F6  6E31               	movwf	(??___flge+1)& (0+255),c
  6390  0028F8  0E80               	movlw	128
  6391  0028FA  142A               	andwf	___flge@ff1+2,w,c
  6392  0028FC  6E32               	movwf	(??___flge+2)& (0+255),c
  6393  0028FE  0E7F               	movlw	127
  6394  002900  142B               	andwf	___flge@ff1+3,w,c
  6395  002902  6E33               	movwf	(??___flge+3)& (0+255),c
  6396  002904  5030               	movf	??___flge,w,c
  6397  002906  1031               	iorwf	??___flge+1,w,c
  6398  002908  1032               	iorwf	??___flge+2,w,c
  6399  00290A  1033               	iorwf	??___flge+3,w,c
  6400  00290C  A4D8               	btfss	status,2,c
  6401  00290E  D008               	goto	l3521
  6402  002910  0E00               	movlw	0
  6403  002912  6E28               	movwf	___flge@ff1,c
  6404  002914  0E00               	movlw	0
  6405  002916  6E29               	movwf	___flge@ff1+1,c
  6406  002918  0E00               	movlw	0
  6407  00291A  6E2A               	movwf	___flge@ff1+2,c
  6408  00291C  0E00               	movlw	0
  6409  00291E  6E2B               	movwf	___flge@ff1+3,c
  6410  002920                     l3521:
  6411  002920  0E00               	movlw	0
  6412  002922  142C               	andwf	___flge@ff2,w,c
  6413  002924  6E30               	movwf	??___flge& (0+255),c
  6414  002926  0E00               	movlw	0
  6415  002928  142D               	andwf	___flge@ff2+1,w,c
  6416  00292A  6E31               	movwf	(??___flge+1)& (0+255),c
  6417  00292C  0E80               	movlw	128
  6418  00292E  142E               	andwf	___flge@ff2+2,w,c
  6419  002930  6E32               	movwf	(??___flge+2)& (0+255),c
  6420  002932  0E7F               	movlw	127
  6421  002934  142F               	andwf	___flge@ff2+3,w,c
  6422  002936  6E33               	movwf	(??___flge+3)& (0+255),c
  6423  002938  5030               	movf	??___flge,w,c
  6424  00293A  1031               	iorwf	??___flge+1,w,c
  6425  00293C  1032               	iorwf	??___flge+2,w,c
  6426  00293E  1033               	iorwf	??___flge+3,w,c
  6427  002940  A4D8               	btfss	status,2,c
  6428  002942  D008               	goto	l3525
  6429  002944  0E00               	movlw	0
  6430  002946  6E2C               	movwf	___flge@ff2,c
  6431  002948  0E00               	movlw	0
  6432  00294A  6E2D               	movwf	___flge@ff2+1,c
  6433  00294C  0E00               	movlw	0
  6434  00294E  6E2E               	movwf	___flge@ff2+2,c
  6435  002950  0E00               	movlw	0
  6436  002952  6E2F               	movwf	___flge@ff2+3,c
  6437  002954                     l3525:
  6438  002954  AE2B               	btfss	___flge@ff1+3,7,c
  6439  002956  D009               	goto	l3529
  6440  002958  6C28               	negf	___flge@ff1,c
  6441  00295A  1E29               	comf	___flge@ff1+1,f,c
  6442  00295C  B0D8               	btfsc	status,0,c
  6443  00295E  2A29               	incf	___flge@ff1+1,f,c
  6444  002960  1E2A               	comf	___flge@ff1+2,f,c
  6445  002962  B0D8               	btfsc	status,0,c
  6446  002964  2A2A               	incf	___flge@ff1+2,f,c
  6447  002966  0E80               	movlw	128
  6448  002968  562B               	subfwb	___flge@ff1+3,f,c
  6449  00296A                     l3529:
  6450  00296A  AE2F               	btfss	___flge@ff2+3,7,c
  6451  00296C  D009               	goto	l564
  6452  00296E  6C2C               	negf	___flge@ff2,c
  6453  002970  1E2D               	comf	___flge@ff2+1,f,c
  6454  002972  B0D8               	btfsc	status,0,c
  6455  002974  2A2D               	incf	___flge@ff2+1,f,c
  6456  002976  1E2E               	comf	___flge@ff2+2,f,c
  6457  002978  B0D8               	btfsc	status,0,c
  6458  00297A  2A2E               	incf	___flge@ff2+2,f,c
  6459  00297C  0E80               	movlw	128
  6460  00297E  562F               	subfwb	___flge@ff2+3,f,c
  6461  002980                     l564:
  6462  002980  0E00               	movlw	0
  6463  002982  1A28               	xorwf	___flge@ff1,f,c
  6464  002984  0E00               	movlw	0
  6465  002986  1A29               	xorwf	___flge@ff1+1,f,c
  6466  002988  0E00               	movlw	0
  6467  00298A  1A2A               	xorwf	___flge@ff1+2,f,c
  6468  00298C  0E80               	movlw	128
  6469  00298E  1A2B               	xorwf	___flge@ff1+3,f,c
  6470  002990  0E00               	movlw	0
  6471  002992  1A2C               	xorwf	___flge@ff2,f,c
  6472  002994  0E00               	movlw	0
  6473  002996  1A2D               	xorwf	___flge@ff2+1,f,c
  6474  002998  0E00               	movlw	0
  6475  00299A  1A2E               	xorwf	___flge@ff2+2,f,c
  6476  00299C  0E80               	movlw	128
  6477  00299E  1A2F               	xorwf	___flge@ff2+3,f,c
  6478  0029A0  502C               	movf	___flge@ff2,w,c
  6479  0029A2  5C28               	subwf	___flge@ff1,w,c
  6480  0029A4  502D               	movf	___flge@ff2+1,w,c
  6481  0029A6  5829               	subwfb	___flge@ff1+1,w,c
  6482  0029A8  502E               	movf	___flge@ff2+2,w,c
  6483  0029AA  582A               	subwfb	___flge@ff1+2,w,c
  6484  0029AC  502F               	movf	___flge@ff2+3,w,c
  6485  0029AE  582B               	subwfb	___flge@ff1+3,w,c
  6486  0029B0  B0D8               	btfsc	status,0,c
  6487  0029B2  D002               	goto	l3535
  6488  0029B4  90D8               	bcf	status,0,c
  6489  0029B6  0012               	return	
  6490  0029B8                     l3535:
  6491  0029B8  80D8               	bsf	status,0,c
  6492  0029BA  0012               	return		;funcret
  6493  0029BC                     __end_of___flge:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function ___fleq *****************
  6497 ;; Defined at:
  6498 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  ff1             4    0[COMRAM] unsigned char 
  6501 ;;  ff2             4    4[COMRAM] unsigned char 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;		None
  6504 ;; Return value:  Size  Location     Type
  6505 ;;		None               void
  6506 ;; Registers used:
  6507 ;;		wreg, status,2, status,0
  6508 ;; Tracked objects:
  6509 ;;		On entry : 0/0
  6510 ;;		On exit  : 0/0
  6511 ;;		Unchanged: 0/0
  6512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6513 ;;      Params:         8       0       0       0       0       0       0
  6514 ;;      Locals:         0       0       0       0       0       0       0
  6515 ;;      Temps:          4       0       0       0       0       0       0
  6516 ;;      Totals:        12       0       0       0       0       0       0
  6517 ;;Total ram usage:       12 bytes
  6518 ;; Hardware stack levels used:    1
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_efgtoa
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text20
  6527  002F54                     __ptext20:
  6528                           	opt callstack 0
  6529  002F54                     ___fleq:
  6530                           	opt callstack 26
  6531                           
  6532                           ;incstack = 0
  6533  002F54  0E00               	movlw	0
  6534  002F56  1401               	andwf	___fleq@ff1,w,c
  6535  002F58  6E09               	movwf	??___fleq& (0+255),c
  6536  002F5A  0E00               	movlw	0
  6537  002F5C  1402               	andwf	___fleq@ff1+1,w,c
  6538  002F5E  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6539  002F60  0E80               	movlw	128
  6540  002F62  1403               	andwf	___fleq@ff1+2,w,c
  6541  002F64  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6542  002F66  0E7F               	movlw	127
  6543  002F68  1404               	andwf	___fleq@ff1+3,w,c
  6544  002F6A  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6545  002F6C  5009               	movf	??___fleq,w,c
  6546  002F6E  100A               	iorwf	??___fleq+1,w,c
  6547  002F70  100B               	iorwf	??___fleq+2,w,c
  6548  002F72  100C               	iorwf	??___fleq+3,w,c
  6549  002F74  A4D8               	btfss	status,2,c
  6550  002F76  D008               	goto	l3505
  6551  002F78  0E00               	movlw	0
  6552  002F7A  6E01               	movwf	___fleq@ff1,c
  6553  002F7C  0E00               	movlw	0
  6554  002F7E  6E02               	movwf	___fleq@ff1+1,c
  6555  002F80  0E00               	movlw	0
  6556  002F82  6E03               	movwf	___fleq@ff1+2,c
  6557  002F84  0E00               	movlw	0
  6558  002F86  6E04               	movwf	___fleq@ff1+3,c
  6559  002F88                     l3505:
  6560  002F88  0E00               	movlw	0
  6561  002F8A  1405               	andwf	___fleq@ff2,w,c
  6562  002F8C  6E09               	movwf	??___fleq& (0+255),c
  6563  002F8E  0E00               	movlw	0
  6564  002F90  1406               	andwf	___fleq@ff2+1,w,c
  6565  002F92  6E0A               	movwf	(??___fleq+1)& (0+255),c
  6566  002F94  0E80               	movlw	128
  6567  002F96  1407               	andwf	___fleq@ff2+2,w,c
  6568  002F98  6E0B               	movwf	(??___fleq+2)& (0+255),c
  6569  002F9A  0E7F               	movlw	127
  6570  002F9C  1408               	andwf	___fleq@ff2+3,w,c
  6571  002F9E  6E0C               	movwf	(??___fleq+3)& (0+255),c
  6572  002FA0  5009               	movf	??___fleq,w,c
  6573  002FA2  100A               	iorwf	??___fleq+1,w,c
  6574  002FA4  100B               	iorwf	??___fleq+2,w,c
  6575  002FA6  100C               	iorwf	??___fleq+3,w,c
  6576  002FA8  A4D8               	btfss	status,2,c
  6577  002FAA  D008               	goto	l3509
  6578  002FAC  0E00               	movlw	0
  6579  002FAE  6E05               	movwf	___fleq@ff2,c
  6580  002FB0  0E00               	movlw	0
  6581  002FB2  6E06               	movwf	___fleq@ff2+1,c
  6582  002FB4  0E00               	movlw	0
  6583  002FB6  6E07               	movwf	___fleq@ff2+2,c
  6584  002FB8  0E00               	movlw	0
  6585  002FBA  6E08               	movwf	___fleq@ff2+3,c
  6586  002FBC                     l3509:
  6587  002FBC  5005               	movf	___fleq@ff2,w,c
  6588  002FBE  1801               	xorwf	___fleq@ff1,w,c
  6589  002FC0  E10A               	bnz	u4130
  6590  002FC2  5006               	movf	___fleq@ff2+1,w,c
  6591  002FC4  1802               	xorwf	___fleq@ff1+1,w,c
  6592  002FC6  E107               	bnz	u4130
  6593  002FC8  5007               	movf	___fleq@ff2+2,w,c
  6594  002FCA  1803               	xorwf	___fleq@ff1+2,w,c
  6595  002FCC  E104               	bnz	u4130
  6596  002FCE  5008               	movf	___fleq@ff2+3,w,c
  6597  002FD0  1804               	xorwf	___fleq@ff1+3,w,c
  6598  002FD2  B4D8               	btfsc	status,2,c
  6599  002FD4  D002               	goto	l3513
  6600  002FD6                     u4130:
  6601  002FD6  90D8               	bcf	status,0,c
  6602  002FD8  0012               	return	
  6603  002FDA                     l3513:
  6604  002FDA  80D8               	bsf	status,0,c
  6605  002FDC  0012               	return		;funcret
  6606  002FDE                     __end_of___fleq:
  6607                           	opt callstack 0
  6608                           
  6609 ;; *************** function ___fldiv *****************
  6610 ;; Defined at:
  6611 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  b               4   39[COMRAM] unsigned char 
  6614 ;;  a               4   43[COMRAM] unsigned char 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  grs             4   58[COMRAM] unsigned long 
  6617 ;;  rem             4   51[COMRAM] unsigned long 
  6618 ;;  new_exp         2   56[COMRAM] short 
  6619 ;;  aexp            1   63[COMRAM] unsigned char 
  6620 ;;  bexp            1   62[COMRAM] unsigned char 
  6621 ;;  sign            1   55[COMRAM] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  4   39[COMRAM] unsigned char 
  6624 ;; Registers used:
  6625 ;;		wreg, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6631 ;;      Params:         8       0       0       0       0       0       0
  6632 ;;      Locals:        13       0       0       0       0       0       0
  6633 ;;      Temps:          4       0       0       0       0       0       0
  6634 ;;      Totals:        25       0       0       0       0       0       0
  6635 ;;Total ram usage:       25 bytes
  6636 ;; Hardware stack levels used:    1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_main
  6641 ;;		_efgtoa
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text21
  6646  001C98                     __ptext21:
  6647                           	opt callstack 0
  6648  001C98                     ___fldiv:
  6649                           	opt callstack 26
  6650                           
  6651                           ;incstack = 0
  6652  001C98  502B               	movf	___fldiv@b+3,w,c
  6653  001C9A  0B80               	andlw	128
  6654  001C9C  6E38               	movwf	___fldiv@sign,c
  6655  001C9E  502B               	movf	___fldiv@b+3,w,c
  6656  001CA0  242B               	addwf	___fldiv@b+3,w,c
  6657  001CA2  6E3F               	movwf	___fldiv@bexp,c
  6658  001CA4  BE2A               	btfsc	___fldiv@b+2,7,c
  6659  001CA6  803F               	bsf	___fldiv@bexp,0,c
  6660  001CA8  503F               	movf	___fldiv@bexp,w,c
  6661  001CAA  B4D8               	btfsc	status,2,c
  6662  001CAC  D00D               	goto	l3163
  6663  001CAE  283F               	incf	___fldiv@bexp,w,c
  6664  001CB0  A4D8               	btfss	status,2,c
  6665  001CB2  D008               	goto	l3159
  6666  001CB4  0E00               	movlw	0
  6667  001CB6  6E28               	movwf	___fldiv@b,c
  6668  001CB8  0E00               	movlw	0
  6669  001CBA  6E29               	movwf	___fldiv@b+1,c
  6670  001CBC  0E00               	movlw	0
  6671  001CBE  6E2A               	movwf	___fldiv@b+2,c
  6672  001CC0  0E00               	movlw	0
  6673  001CC2  6E2B               	movwf	___fldiv@b+3,c
  6674  001CC4                     l3159:
  6675  001CC4  8E2A               	bsf	___fldiv@b+2,7,c
  6676  001CC6  D006               	goto	L13
  6677  001CC8                     l3163:
  6678  001CC8  0E00               	movlw	0
  6679  001CCA  6E28               	movwf	___fldiv@b,c
  6680  001CCC  0E00               	movlw	0
  6681  001CCE  6E29               	movwf	___fldiv@b+1,c
  6682  001CD0  0E00               	movlw	0
  6683  001CD2  6E2A               	movwf	___fldiv@b+2,c
  6684  001CD4                     L13:
  6685  001CD4  0E00               	movlw	0
  6686  001CD6  6E2B               	movwf	___fldiv@b+3,c
  6687  001CD8  502F               	movf	___fldiv@a+3,w,c
  6688  001CDA  0B80               	andlw	128
  6689  001CDC  1A38               	xorwf	___fldiv@sign,f,c
  6690  001CDE  502F               	movf	___fldiv@a+3,w,c
  6691  001CE0  242F               	addwf	___fldiv@a+3,w,c
  6692  001CE2  6E40               	movwf	___fldiv@aexp,c
  6693  001CE4  BE2E               	btfsc	___fldiv@a+2,7,c
  6694  001CE6  8040               	bsf	___fldiv@aexp,0,c
  6695  001CE8  5040               	movf	___fldiv@aexp,w,c
  6696  001CEA  B4D8               	btfsc	status,2,c
  6697  001CEC  D00D               	goto	l3183
  6698  001CEE  2840               	incf	___fldiv@aexp,w,c
  6699  001CF0  A4D8               	btfss	status,2,c
  6700  001CF2  D008               	goto	l3179
  6701  001CF4  0E00               	movlw	0
  6702  001CF6  6E2C               	movwf	___fldiv@a,c
  6703  001CF8  0E00               	movlw	0
  6704  001CFA  6E2D               	movwf	___fldiv@a+1,c
  6705  001CFC  0E00               	movlw	0
  6706  001CFE  6E2E               	movwf	___fldiv@a+2,c
  6707  001D00  0E00               	movlw	0
  6708  001D02  6E2F               	movwf	___fldiv@a+3,c
  6709  001D04                     l3179:
  6710  001D04  8E2E               	bsf	___fldiv@a+2,7,c
  6711  001D06  D006               	goto	L14
  6712  001D08                     l3183:
  6713  001D08  0E00               	movlw	0
  6714  001D0A  6E2C               	movwf	___fldiv@a,c
  6715  001D0C  0E00               	movlw	0
  6716  001D0E  6E2D               	movwf	___fldiv@a+1,c
  6717  001D10  0E00               	movlw	0
  6718  001D12  6E2E               	movwf	___fldiv@a+2,c
  6719  001D14                     L14:
  6720  001D14  0E00               	movlw	0
  6721  001D16  6E2F               	movwf	___fldiv@a+3,c
  6722  001D18  502C               	movf	___fldiv@a,w,c
  6723  001D1A  102D               	iorwf	___fldiv@a+1,w,c
  6724  001D1C  102E               	iorwf	___fldiv@a+2,w,c
  6725  001D1E  102F               	iorwf	___fldiv@a+3,w,c
  6726  001D20  A4D8               	btfss	status,2,c
  6727  001D22  D017               	goto	l3197
  6728  001D24  0E00               	movlw	0
  6729  001D26  6E28               	movwf	___fldiv@b,c
  6730  001D28  0E00               	movlw	0
  6731  001D2A  6E29               	movwf	___fldiv@b+1,c
  6732  001D2C  0E00               	movlw	0
  6733  001D2E  6E2A               	movwf	___fldiv@b+2,c
  6734  001D30  0E00               	movlw	0
  6735  001D32  6E2B               	movwf	___fldiv@b+3,c
  6736  001D34  0E80               	movlw	128
  6737  001D36  122A               	iorwf	___fldiv@b+2,f,c
  6738  001D38  0E7F               	movlw	127
  6739  001D3A  122B               	iorwf	___fldiv@b+3,f,c
  6740  001D3C                     l3191:
  6741  001D3C  5038               	movf	___fldiv@sign,w,c
  6742  001D3E  122B               	iorwf	___fldiv@b+3,f,c
  6743  001D40  C028  F028         	movff	___fldiv@b,?___fldiv
  6744  001D44  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6745  001D48  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6746  001D4C  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6747  001D50  0012               	return	
  6748  001D52                     l3197:
  6749  001D52  503F               	movf	___fldiv@bexp,w,c
  6750  001D54  A4D8               	btfss	status,2,c
  6751  001D56  D009               	goto	l3205
  6752  001D58  0E00               	movlw	0
  6753  001D5A  6E28               	movwf	?___fldiv,c
  6754  001D5C  0E00               	movlw	0
  6755  001D5E  6E29               	movwf	?___fldiv+1,c
  6756  001D60  0E00               	movlw	0
  6757  001D62  6E2A               	movwf	?___fldiv+2,c
  6758  001D64  0E00               	movlw	0
  6759  001D66  6E2B               	movwf	?___fldiv+3,c
  6760  001D68  0012               	return	
  6761  001D6A                     l3205:
  6762  001D6A  5040               	movf	___fldiv@aexp,w,c
  6763  001D6C  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6764  001D70  6A31               	clrf	(??___fldiv+1)& (0+255),c
  6765  001D72  5E30               	subwf	??___fldiv,f,c
  6766  001D74  0E00               	movlw	0
  6767  001D76  5A31               	subwfb	??___fldiv+1,f,c
  6768  001D78  0E7F               	movlw	127
  6769  001D7A  2430               	addwf	??___fldiv,w,c
  6770  001D7C  6E39               	movwf	___fldiv@new_exp,c
  6771  001D7E  0E00               	movlw	0
  6772  001D80  2031               	addwfc	??___fldiv+1,w,c
  6773  001D82  6E3A               	movwf	___fldiv@new_exp+1,c
  6774  001D84  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6775  001D88  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6776  001D8C  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6777  001D90  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6778  001D94  0E00               	movlw	0
  6779  001D96  6E28               	movwf	___fldiv@b,c
  6780  001D98  0E00               	movlw	0
  6781  001D9A  6E29               	movwf	___fldiv@b+1,c
  6782  001D9C  0E00               	movlw	0
  6783  001D9E  6E2A               	movwf	___fldiv@b+2,c
  6784  001DA0  0E00               	movlw	0
  6785  001DA2  6E2B               	movwf	___fldiv@b+3,c
  6786  001DA4  0E00               	movlw	0
  6787  001DA6  6E3B               	movwf	___fldiv@grs,c
  6788  001DA8  0E00               	movlw	0
  6789  001DAA  6E3C               	movwf	___fldiv@grs+1,c
  6790  001DAC  0E00               	movlw	0
  6791  001DAE  6E3D               	movwf	___fldiv@grs+2,c
  6792  001DB0  0E00               	movlw	0
  6793  001DB2  6E3E               	movwf	___fldiv@grs+3,c
  6794  001DB4  0E00               	movlw	0
  6795  001DB6  6E40               	movwf	___fldiv@aexp,c
  6796  001DB8  D028               	goto	l883
  6797  001DBA                     l3215:
  6798  001DBA  5040               	movf	___fldiv@aexp,w,c
  6799  001DBC  B4D8               	btfsc	status,2,c
  6800  001DBE  D011               	goto	l3223
  6801  001DC0  90D8               	bcf	status,0,c
  6802  001DC2  3634               	rlcf	___fldiv@rem,f,c
  6803  001DC4  3635               	rlcf	___fldiv@rem+1,f,c
  6804  001DC6  3636               	rlcf	___fldiv@rem+2,f,c
  6805  001DC8  3637               	rlcf	___fldiv@rem+3,f,c
  6806  001DCA  90D8               	bcf	status,0,c
  6807  001DCC  3628               	rlcf	___fldiv@b,f,c
  6808  001DCE  3629               	rlcf	___fldiv@b+1,f,c
  6809  001DD0  362A               	rlcf	___fldiv@b+2,f,c
  6810  001DD2  362B               	rlcf	___fldiv@b+3,f,c
  6811  001DD4  BE3E               	btfsc	___fldiv@grs+3,7,c
  6812  001DD6  8028               	bsf	___fldiv@b,0,c
  6813  001DD8  90D8               	bcf	status,0,c
  6814  001DDA  363B               	rlcf	___fldiv@grs,f,c
  6815  001DDC  363C               	rlcf	___fldiv@grs+1,f,c
  6816  001DDE  363D               	rlcf	___fldiv@grs+2,f,c
  6817  001DE0  363E               	rlcf	___fldiv@grs+3,f,c
  6818  001DE2                     l3223:
  6819  001DE2  502C               	movf	___fldiv@a,w,c
  6820  001DE4  5C34               	subwf	___fldiv@rem,w,c
  6821  001DE6  502D               	movf	___fldiv@a+1,w,c
  6822  001DE8  5835               	subwfb	___fldiv@rem+1,w,c
  6823  001DEA  502E               	movf	___fldiv@a+2,w,c
  6824  001DEC  5836               	subwfb	___fldiv@rem+2,w,c
  6825  001DEE  502F               	movf	___fldiv@a+3,w,c
  6826  001DF0  5837               	subwfb	___fldiv@rem+3,w,c
  6827  001DF2  A0D8               	btfss	status,0,c
  6828  001DF4  D009               	goto	l3229
  6829  001DF6  8C3E               	bsf	___fldiv@grs+3,6,c
  6830  001DF8  502C               	movf	___fldiv@a,w,c
  6831  001DFA  5E34               	subwf	___fldiv@rem,f,c
  6832  001DFC  502D               	movf	___fldiv@a+1,w,c
  6833  001DFE  5A35               	subwfb	___fldiv@rem+1,f,c
  6834  001E00  502E               	movf	___fldiv@a+2,w,c
  6835  001E02  5A36               	subwfb	___fldiv@rem+2,f,c
  6836  001E04  502F               	movf	___fldiv@a+3,w,c
  6837  001E06  5A37               	subwfb	___fldiv@rem+3,f,c
  6838  001E08                     l3229:
  6839  001E08  2A40               	incf	___fldiv@aexp,f,c
  6840  001E0A                     l883:
  6841  001E0A  0E19               	movlw	25
  6842  001E0C  6440               	cpfsgt	___fldiv@aexp,c
  6843  001E0E  D7D5               	goto	l3215
  6844  001E10  5034               	movf	___fldiv@rem,w,c
  6845  001E12  1035               	iorwf	___fldiv@rem+1,w,c
  6846  001E14  1036               	iorwf	___fldiv@rem+2,w,c
  6847  001E16  1037               	iorwf	___fldiv@rem+3,w,c
  6848  001E18  B4D8               	btfsc	status,2,c
  6849  001E1A  D011               	goto	l3241
  6850  001E1C  803B               	bsf	___fldiv@grs,0,c
  6851  001E1E  D00F               	goto	l3241
  6852  001E20                     l3235:
  6853  001E20  90D8               	bcf	status,0,c
  6854  001E22  3628               	rlcf	___fldiv@b,f,c
  6855  001E24  3629               	rlcf	___fldiv@b+1,f,c
  6856  001E26  362A               	rlcf	___fldiv@b+2,f,c
  6857  001E28  362B               	rlcf	___fldiv@b+3,f,c
  6858  001E2A  BE3E               	btfsc	___fldiv@grs+3,7,c
  6859  001E2C  8028               	bsf	___fldiv@b,0,c
  6860  001E2E  90D8               	bcf	status,0,c
  6861  001E30  363B               	rlcf	___fldiv@grs,f,c
  6862  001E32  363C               	rlcf	___fldiv@grs+1,f,c
  6863  001E34  363D               	rlcf	___fldiv@grs+2,f,c
  6864  001E36  363E               	rlcf	___fldiv@grs+3,f,c
  6865  001E38  0639               	decf	___fldiv@new_exp,f,c
  6866  001E3A  A0D8               	btfss	status,0,c
  6867  001E3C  063A               	decf	___fldiv@new_exp+1,f,c
  6868  001E3E                     l3241:
  6869  001E3E  AE2A               	btfss	___fldiv@b+2,7,c
  6870  001E40  D7EF               	goto	l3235
  6871  001E42  0E00               	movlw	0
  6872  001E44  6E40               	movwf	___fldiv@aexp,c
  6873  001E46  AE3E               	btfss	___fldiv@grs+3,7,c
  6874  001E48  D017               	goto	l894
  6875  001E4A  0EFF               	movlw	255
  6876  001E4C  143B               	andwf	___fldiv@grs,w,c
  6877  001E4E  6E30               	movwf	??___fldiv& (0+255),c
  6878  001E50  0EFF               	movlw	255
  6879  001E52  143C               	andwf	___fldiv@grs+1,w,c
  6880  001E54  6E31               	movwf	(??___fldiv+1)& (0+255),c
  6881  001E56  0EFF               	movlw	255
  6882  001E58  143D               	andwf	___fldiv@grs+2,w,c
  6883  001E5A  6E32               	movwf	(??___fldiv+2)& (0+255),c
  6884  001E5C  0E7F               	movlw	127
  6885  001E5E  143E               	andwf	___fldiv@grs+3,w,c
  6886  001E60  6E33               	movwf	(??___fldiv+3)& (0+255),c
  6887  001E62  5030               	movf	??___fldiv,w,c
  6888  001E64  1031               	iorwf	??___fldiv+1,w,c
  6889  001E66  1032               	iorwf	??___fldiv+2,w,c
  6890  001E68  1033               	iorwf	??___fldiv+3,w,c
  6891  001E6A  B4D8               	btfsc	status,2,c
  6892  001E6C  D003               	goto	l895
  6893  001E6E                     u3730:
  6894  001E6E  0E01               	movlw	1
  6895  001E70  6E40               	movwf	___fldiv@aexp,c
  6896  001E72  D002               	goto	l894
  6897  001E74                     l895:
  6898  001E74  B028               	btfsc	___fldiv@b,0,c
  6899  001E76  D7FB               	goto	u3730
  6900  001E78                     l894:
  6901  001E78  5040               	movf	___fldiv@aexp,w,c
  6902  001E7A  B4D8               	btfsc	status,2,c
  6903  001E7C  D01F               	goto	l3261
  6904  001E7E  0E01               	movlw	1
  6905  001E80  2628               	addwf	___fldiv@b,f,c
  6906  001E82  0E00               	movlw	0
  6907  001E84  2229               	addwfc	___fldiv@b+1,f,c
  6908  001E86  222A               	addwfc	___fldiv@b+2,f,c
  6909  001E88  222B               	addwfc	___fldiv@b+3,f,c
  6910  001E8A  A02B               	btfss	___fldiv@b+3,0,c
  6911  001E8C  D017               	goto	l3261
  6912  001E8E  C028  F030         	movff	___fldiv@b,??___fldiv
  6913  001E92  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6914  001E96  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6915  001E9A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6916  001E9E  3433               	rlcf	??___fldiv+3,w,c
  6917  001EA0  3233               	rrcf	??___fldiv+3,f,c
  6918  001EA2  3232               	rrcf	??___fldiv+2,f,c
  6919  001EA4  3231               	rrcf	??___fldiv+1,f,c
  6920  001EA6  3230               	rrcf	??___fldiv,f,c
  6921  001EA8  C030  F028         	movff	??___fldiv,___fldiv@b
  6922  001EAC  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6923  001EB0  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6924  001EB4  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6925  001EB8  4A39               	infsnz	___fldiv@new_exp,f,c
  6926  001EBA  2A3A               	incf	___fldiv@new_exp+1,f,c
  6927  001EBC                     l3261:
  6928  001EBC  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  6929  001EBE  D010               	goto	l3265
  6930  001EC0  503A               	movf	___fldiv@new_exp+1,w,c
  6931  001EC2  E103               	bnz	u3770
  6932  001EC4  2839               	incf	___fldiv@new_exp,w,c
  6933  001EC6  A0D8               	btfss	status,0,c
  6934  001EC8  D00B               	goto	l3265
  6935  001ECA                     u3770:
  6936  001ECA  0E00               	movlw	0
  6937  001ECC  6E3A               	movwf	___fldiv@new_exp+1,c
  6938  001ECE  6839               	setf	___fldiv@new_exp,c
  6939  001ED0  0E00               	movlw	0
  6940  001ED2  6E28               	movwf	___fldiv@b,c
  6941  001ED4  0E00               	movlw	0
  6942  001ED6  6E29               	movwf	___fldiv@b+1,c
  6943  001ED8  0E00               	movlw	0
  6944  001EDA  6E2A               	movwf	___fldiv@b+2,c
  6945  001EDC  0E00               	movlw	0
  6946  001EDE  6E2B               	movwf	___fldiv@b+3,c
  6947  001EE0                     l3265:
  6948  001EE0  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  6949  001EE2  D005               	goto	u3780
  6950  001EE4  503A               	movf	___fldiv@new_exp+1,w,c
  6951  001EE6  E111               	bnz	l3269
  6952  001EE8  0439               	decf	___fldiv@new_exp,w,c
  6953  001EEA  B0D8               	btfsc	status,0,c
  6954  001EEC  D00E               	goto	l3269
  6955  001EEE                     u3780:
  6956  001EEE  0E00               	movlw	0
  6957  001EF0  6E3A               	movwf	___fldiv@new_exp+1,c
  6958  001EF2  0E00               	movlw	0
  6959  001EF4  6E39               	movwf	___fldiv@new_exp,c
  6960  001EF6  0E00               	movlw	0
  6961  001EF8  6E28               	movwf	___fldiv@b,c
  6962  001EFA  0E00               	movlw	0
  6963  001EFC  6E29               	movwf	___fldiv@b+1,c
  6964  001EFE  0E00               	movlw	0
  6965  001F00  6E2A               	movwf	___fldiv@b+2,c
  6966  001F02  0E00               	movlw	0
  6967  001F04  6E2B               	movwf	___fldiv@b+3,c
  6968  001F06  0E00               	movlw	0
  6969  001F08  6E38               	movwf	___fldiv@sign,c
  6970  001F0A                     l3269:
  6971  001F0A  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6972  001F0E  A03F               	btfss	___fldiv@bexp,0,c
  6973  001F10  D002               	goto	l3275
  6974  001F12  8E2A               	bsf	___fldiv@b+2,7,c
  6975  001F14  D001               	goto	l3277
  6976  001F16                     l3275:
  6977  001F16  9E2A               	bcf	___fldiv@b+2,7,c
  6978  001F18                     l3277:
  6979  001F18  90D8               	bcf	status,0,c
  6980  001F1A  303F               	rrcf	___fldiv@bexp,w,c
  6981  001F1C  6E2B               	movwf	___fldiv@b+3,c
  6982  001F1E  D70E               	goto	l3191
  6983  001F20                     __end_of___fldiv:
  6984                           	opt callstack 0
  6985                           
  6986 ;; *************** function ___awmod *****************
  6987 ;; Defined at:
  6988 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  dividend        2    0[COMRAM] int 
  6991 ;;  divisor         2    2[COMRAM] int 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;  sign            1    5[COMRAM] unsigned char 
  6994 ;;  counter         1    4[COMRAM] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  2    0[COMRAM] int 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7004 ;;      Params:         4       0       0       0       0       0       0
  7005 ;;      Locals:         2       0       0       0       0       0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0
  7007 ;;      Totals:         6       0       0       0       0       0       0
  7008 ;;Total ram usage:        6 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_efgtoa
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text22
  7018  0030DE                     __ptext22:
  7019                           	opt callstack 0
  7020  0030DE                     ___awmod:
  7021                           	opt callstack 26
  7022                           
  7023                           ;incstack = 0
  7024  0030DE  0E00               	movlw	0
  7025  0030E0  6E06               	movwf	___awmod@sign,c
  7026  0030E2  AE02               	btfss	___awmod@dividend+1,7,c
  7027  0030E4  D006               	goto	l3473
  7028  0030E6  6C01               	negf	___awmod@dividend,c
  7029  0030E8  1E02               	comf	___awmod@dividend+1,f,c
  7030  0030EA  B0D8               	btfsc	status,0,c
  7031  0030EC  2A02               	incf	___awmod@dividend+1,f,c
  7032  0030EE  0E01               	movlw	1
  7033  0030F0  6E06               	movwf	___awmod@sign,c
  7034  0030F2                     l3473:
  7035  0030F2  AE04               	btfss	___awmod@divisor+1,7,c
  7036  0030F4  D004               	goto	l3477
  7037  0030F6  6C03               	negf	___awmod@divisor,c
  7038  0030F8  1E04               	comf	___awmod@divisor+1,f,c
  7039  0030FA  B0D8               	btfsc	status,0,c
  7040  0030FC  2A04               	incf	___awmod@divisor+1,f,c
  7041  0030FE                     l3477:
  7042  0030FE  5003               	movf	___awmod@divisor,w,c
  7043  003100  1004               	iorwf	___awmod@divisor+1,w,c
  7044  003102  B4D8               	btfsc	status,2,c
  7045  003104  D018               	goto	l3493
  7046  003106  0E01               	movlw	1
  7047  003108  6E05               	movwf	___awmod@counter,c
  7048  00310A  D004               	goto	l3483
  7049  00310C                     l3481:
  7050  00310C  90D8               	bcf	status,0,c
  7051  00310E  3603               	rlcf	___awmod@divisor,f,c
  7052  003110  3604               	rlcf	___awmod@divisor+1,f,c
  7053  003112  2A05               	incf	___awmod@counter,f,c
  7054  003114                     l3483:
  7055  003114  AE04               	btfss	___awmod@divisor+1,7,c
  7056  003116  D7FA               	goto	l3481
  7057  003118                     u4080:
  7058  003118  5003               	movf	___awmod@divisor,w,c
  7059  00311A  5C01               	subwf	___awmod@dividend,w,c
  7060  00311C  5004               	movf	___awmod@divisor+1,w,c
  7061  00311E  5802               	subwfb	___awmod@dividend+1,w,c
  7062  003120  A0D8               	btfss	status,0,c
  7063  003122  D004               	goto	l3489
  7064  003124  5003               	movf	___awmod@divisor,w,c
  7065  003126  5E01               	subwf	___awmod@dividend,f,c
  7066  003128  5004               	movf	___awmod@divisor+1,w,c
  7067  00312A  5A02               	subwfb	___awmod@dividend+1,f,c
  7068  00312C                     l3489:
  7069  00312C  90D8               	bcf	status,0,c
  7070  00312E  3204               	rrcf	___awmod@divisor+1,f,c
  7071  003130  3203               	rrcf	___awmod@divisor,f,c
  7072  003132  2E05               	decfsz	___awmod@counter,f,c
  7073  003134  D7F1               	goto	u4080
  7074  003136                     l3493:
  7075  003136  5006               	movf	___awmod@sign,w,c
  7076  003138  B4D8               	btfsc	status,2,c
  7077  00313A  D004               	goto	l3497
  7078  00313C  6C01               	negf	___awmod@dividend,c
  7079  00313E  1E02               	comf	___awmod@dividend+1,f,c
  7080  003140  B0D8               	btfsc	status,0,c
  7081  003142  2A02               	incf	___awmod@dividend+1,f,c
  7082  003144                     l3497:
  7083  003144  C001  F001         	movff	___awmod@dividend,?___awmod
  7084  003148  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7085  00314C  0012               	return		;funcret
  7086  00314E                     __end_of___awmod:
  7087                           	opt callstack 0
  7088                           
  7089 ;; *************** function ___awdiv *****************
  7090 ;; Defined at:
  7091 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  dividend        2    0[COMRAM] int 
  7094 ;;  divisor         2    2[COMRAM] int 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  quotient        2    6[COMRAM] int 
  7097 ;;  sign            1    5[COMRAM] unsigned char 
  7098 ;;  counter         1    4[COMRAM] unsigned char 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  2    0[COMRAM] int 
  7101 ;; Registers used:
  7102 ;;		wreg, status,2, status,0
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7108 ;;      Params:         4       0       0       0       0       0       0
  7109 ;;      Locals:         4       0       0       0       0       0       0
  7110 ;;      Temps:          0       0       0       0       0       0       0
  7111 ;;      Totals:         8       0       0       0       0       0       0
  7112 ;;Total ram usage:        8 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; This function calls:
  7115 ;;		Nothing
  7116 ;; This function is called by:
  7117 ;;		_efgtoa
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text23
  7122  002FDE                     __ptext23:
  7123                           	opt callstack 0
  7124  002FDE                     ___awdiv:
  7125                           	opt callstack 26
  7126                           
  7127                           ;incstack = 0
  7128  002FDE  0E00               	movlw	0
  7129  002FE0  6E06               	movwf	___awdiv@sign,c
  7130  002FE2  AE04               	btfss	___awdiv@divisor+1,7,c
  7131  002FE4  D006               	goto	l3429
  7132  002FE6  6C03               	negf	___awdiv@divisor,c
  7133  002FE8  1E04               	comf	___awdiv@divisor+1,f,c
  7134  002FEA  B0D8               	btfsc	status,0,c
  7135  002FEC  2A04               	incf	___awdiv@divisor+1,f,c
  7136  002FEE  0E01               	movlw	1
  7137  002FF0  6E06               	movwf	___awdiv@sign,c
  7138  002FF2                     l3429:
  7139  002FF2  AE02               	btfss	___awdiv@dividend+1,7,c
  7140  002FF4  D006               	goto	l3435
  7141  002FF6  6C01               	negf	___awdiv@dividend,c
  7142  002FF8  1E02               	comf	___awdiv@dividend+1,f,c
  7143  002FFA  B0D8               	btfsc	status,0,c
  7144  002FFC  2A02               	incf	___awdiv@dividend+1,f,c
  7145  002FFE  0E01               	movlw	1
  7146  003000  1A06               	xorwf	___awdiv@sign,f,c
  7147  003002                     l3435:
  7148  003002  0E00               	movlw	0
  7149  003004  6E08               	movwf	___awdiv@quotient+1,c
  7150  003006  0E00               	movlw	0
  7151  003008  6E07               	movwf	___awdiv@quotient,c
  7152  00300A  5003               	movf	___awdiv@divisor,w,c
  7153  00300C  1004               	iorwf	___awdiv@divisor+1,w,c
  7154  00300E  B4D8               	btfsc	status,2,c
  7155  003010  D01C               	goto	l3457
  7156  003012  0E01               	movlw	1
  7157  003014  6E05               	movwf	___awdiv@counter,c
  7158  003016  D004               	goto	l3443
  7159  003018                     l3441:
  7160  003018  90D8               	bcf	status,0,c
  7161  00301A  3603               	rlcf	___awdiv@divisor,f,c
  7162  00301C  3604               	rlcf	___awdiv@divisor+1,f,c
  7163  00301E  2A05               	incf	___awdiv@counter,f,c
  7164  003020                     l3443:
  7165  003020  AE04               	btfss	___awdiv@divisor+1,7,c
  7166  003022  D7FA               	goto	l3441
  7167  003024                     u4020:
  7168  003024  90D8               	bcf	status,0,c
  7169  003026  3607               	rlcf	___awdiv@quotient,f,c
  7170  003028  3608               	rlcf	___awdiv@quotient+1,f,c
  7171  00302A  5003               	movf	___awdiv@divisor,w,c
  7172  00302C  5C01               	subwf	___awdiv@dividend,w,c
  7173  00302E  5004               	movf	___awdiv@divisor+1,w,c
  7174  003030  5802               	subwfb	___awdiv@dividend+1,w,c
  7175  003032  A0D8               	btfss	status,0,c
  7176  003034  D005               	goto	l3453
  7177  003036  5003               	movf	___awdiv@divisor,w,c
  7178  003038  5E01               	subwf	___awdiv@dividend,f,c
  7179  00303A  5004               	movf	___awdiv@divisor+1,w,c
  7180  00303C  5A02               	subwfb	___awdiv@dividend+1,f,c
  7181  00303E  8007               	bsf	___awdiv@quotient,0,c
  7182  003040                     l3453:
  7183  003040  90D8               	bcf	status,0,c
  7184  003042  3204               	rrcf	___awdiv@divisor+1,f,c
  7185  003044  3203               	rrcf	___awdiv@divisor,f,c
  7186  003046  2E05               	decfsz	___awdiv@counter,f,c
  7187  003048  D7ED               	goto	u4020
  7188  00304A                     l3457:
  7189  00304A  5006               	movf	___awdiv@sign,w,c
  7190  00304C  B4D8               	btfsc	status,2,c
  7191  00304E  D004               	goto	l3461
  7192  003050  6C07               	negf	___awdiv@quotient,c
  7193  003052  1E08               	comf	___awdiv@quotient+1,f,c
  7194  003054  B0D8               	btfsc	status,0,c
  7195  003056  2A08               	incf	___awdiv@quotient+1,f,c
  7196  003058                     l3461:
  7197  003058  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7198  00305C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7199  003060  0012               	return		;funcret
  7200  003062                     __end_of___awdiv:
  7201                           	opt callstack 0
  7202                           
  7203 ;; *************** function _ctoa *****************
  7204 ;; Defined at:
  7205 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7208 ;;		 -> sprintf@f(6), 
  7209 ;;  c               1   29[COMRAM] unsigned char 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;  w               2   30[COMRAM] int 
  7212 ;;  l               2    0        int 
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  2   27[COMRAM] int 
  7215 ;; Registers used:
  7216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7222 ;;      Params:         3       0       0       0       0       0       0
  7223 ;;      Locals:         2       0       0       0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0       0
  7225 ;;      Totals:         5       0       0       0       0       0       0
  7226 ;;Total ram usage:        5 bytes
  7227 ;; Hardware stack levels used:    1
  7228 ;; Hardware stack levels required when called:    4
  7229 ;; This function calls:
  7230 ;;		_pad
  7231 ;; This function is called by:
  7232 ;;		_vfpfcnvrt
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text24
  7237  00329E                     __ptext24:
  7238                           	opt callstack 0
  7239  00329E                     _ctoa:
  7240                           	opt callstack 23
  7241                           
  7242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  7243                           
  7244                           ;incstack = 0
  7245  00329E  0100               	movlb	0	; () banked
  7246  0032A0  51EE               	movf	_width& (0+255),w,b
  7247  0032A2  11EF               	iorwf	(_width+1)& (0+255),w,b
  7248  0032A4  A4D8               	btfss	status,2,c
  7249  0032A6  D005               	goto	l3657
  7250                           
  7251                           ; BSR set to: 0
  7252  0032A8  C0EE  F01F         	movff	_width,ctoa@w
  7253  0032AC  C0EF  F020         	movff	_width+1,ctoa@w+1
  7254  0032B0  D006               	goto	l3659
  7255  0032B2                     l3657:
  7256                           
  7257                           ; BSR set to: 0
  7258  0032B2  0EFF               	movlw	255
  7259  0032B4  25EE               	addwf	_width& (0+255),w,b
  7260  0032B6  6E1F               	movwf	ctoa@w,c
  7261  0032B8  0EFF               	movlw	255
  7262  0032BA  21EF               	addwfc	(_width+1)& (0+255),w,b
  7263  0032BC  6E20               	movwf	ctoa@w+1,c
  7264  0032BE                     l3659:
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  7268  0032BE  C01E  F100         	movff	ctoa@c,_dbuf
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  7272  0032C2  0E00               	movlw	0
  7273  0032C4  0101               	movlb	1	; () banked
  7274  0032C6  6F01               	movwf	(_dbuf+1)& (0+255),b
  7275                           
  7276                           ; BSR set to: 1
  7277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  7278  0032C8  C01C  F011         	movff	ctoa@fp,pad@fp
  7279  0032CC  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  7280  0032D0  0E00               	movlw	low _dbuf
  7281  0032D2  6E13               	movwf	pad@buf,c
  7282  0032D4  0E01               	movlw	high _dbuf
  7283  0032D6  6E14               	movwf	pad@buf+1,c
  7284  0032D8  C01F  F015         	movff	ctoa@w,pad@p
  7285  0032DC  C020  F016         	movff	ctoa@w+1,pad@p+1
  7286  0032E0  EC15  F017         	call	_pad	;wreg free
  7287  0032E4  C011  F01C         	movff	?_pad,?_ctoa
  7288  0032E8  C012  F01D         	movff	?_pad+1,?_ctoa+1
  7289  0032EC  0012               	return		;funcret
  7290  0032EE                     __end_of_ctoa:
  7291                           	opt callstack 0
  7292                           
  7293 ;; *************** function _pad *****************
  7294 ;; Defined at:
  7295 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7298 ;;		 -> sprintf@f(6), 
  7299 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7300 ;;		 -> dbuf(80), 
  7301 ;;  p               2   20[COMRAM] int 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;  w               2   25[COMRAM] int 
  7304 ;;  i               2   23[COMRAM] int 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  2   16[COMRAM] int 
  7307 ;; Registers used:
  7308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7314 ;;      Params:         6       0       0       0       0       0       0
  7315 ;;      Locals:         4       0       0       0       0       0       0
  7316 ;;      Temps:          1       0       0       0       0       0       0
  7317 ;;      Totals:        11       0       0       0       0       0       0
  7318 ;;Total ram usage:       11 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    3
  7321 ;; This function calls:
  7322 ;;		_fputc
  7323 ;;		_fputs
  7324 ;;		_strlen
  7325 ;; This function is called by:
  7326 ;;		_ctoa
  7327 ;;		_efgtoa
  7328 ;;		_utoa
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text25
  7333  002E2A                     __ptext25:
  7334                           	opt callstack 0
  7335  002E2A                     _pad:
  7336                           	opt callstack 23
  7337                           
  7338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7339                           
  7340                           ;incstack = 0
  7341  002E2A  0100               	movlb	0	; () banked
  7342  002E2C  A1F2               	btfss	_flags& (0+255),0,b
  7343  002E2E  D00A               	goto	l3055
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7347  002E30  C013  F00A         	movff	pad@buf,fputs@s
  7348  002E34  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7349  002E38  C011  F00C         	movff	pad@fp,fputs@fp
  7350  002E3C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7351  002E40  ECDF  F019         	call	_fputs	;wreg free
  7352  002E44                     l3055:
  7353                           
  7354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7355  002E44  BE16               	btfsc	pad@p+1,7,c
  7356  002E46  D005               	goto	l3059
  7357  002E48  C015  F01A         	movff	pad@p,pad@w
  7358  002E4C  C016  F01B         	movff	pad@p+1,pad@w+1
  7359  002E50  D004               	goto	l122
  7360  002E52                     l3059:
  7361  002E52  0E00               	movlw	0
  7362  002E54  6E1B               	movwf	pad@w+1,c
  7363  002E56  0E00               	movlw	0
  7364  002E58  6E1A               	movwf	pad@w,c
  7365  002E5A                     l122:
  7366                           
  7367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7368  002E5A  0E00               	movlw	0
  7369  002E5C  6E19               	movwf	pad@i+1,c
  7370  002E5E  0E00               	movlw	0
  7371  002E60  6E18               	movwf	pad@i,c
  7372                           
  7373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7374  002E62  D00C               	goto	l3065
  7375  002E64                     l3061:
  7376                           
  7377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7378  002E64  0E00               	movlw	0
  7379  002E66  6E02               	movwf	fputc@c+1,c
  7380  002E68  0E20               	movlw	32
  7381  002E6A  6E01               	movwf	fputc@c,c
  7382  002E6C  C011  F003         	movff	pad@fp,fputc@fp
  7383  002E70  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7384  002E74  ECC5  F016         	call	_fputc	;wreg free
  7385                           
  7386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7387  002E78  4A18               	infsnz	pad@i,f,c
  7388  002E7A  2A19               	incf	pad@i+1,f,c
  7389  002E7C                     l3065:
  7390                           
  7391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7392  002E7C  501A               	movf	pad@w,w,c
  7393  002E7E  5C18               	subwf	pad@i,w,c
  7394  002E80  5019               	movf	pad@i+1,w,c
  7395  002E82  0A80               	xorlw	128
  7396  002E84  6E17               	movwf	??_pad& (0+255),c
  7397  002E86  501B               	movf	pad@w+1,w,c
  7398  002E88  0A80               	xorlw	128
  7399  002E8A  5817               	subwfb	??_pad& (0+255),w,c
  7400  002E8C  A0D8               	btfss	status,0,c
  7401  002E8E  D7EA               	goto	l3061
  7402                           
  7403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7404  002E90  0100               	movlb	0	; () banked
  7405  002E92  B1F2               	btfsc	_flags& (0+255),0,b
  7406  002E94  D00A               	goto	l3069
  7407                           
  7408                           ; BSR set to: 0
  7409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7410  002E96  C013  F00A         	movff	pad@buf,fputs@s
  7411  002E9A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7412  002E9E  C011  F00C         	movff	pad@fp,fputs@fp
  7413  002EA2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7414  002EA6  ECDF  F019         	call	_fputs	;wreg free
  7415  002EAA                     l3069:
  7416                           
  7417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7418  002EAA  C013  F001         	movff	pad@buf,strlen@s
  7419  002EAE  C014  F002         	movff	pad@buf+1,strlen@s+1
  7420  002EB2  EC42  F01A         	call	_strlen	;wreg free
  7421  002EB6  501A               	movf	pad@w,w,c
  7422  002EB8  2401               	addwf	?_strlen,w,c
  7423  002EBA  6E11               	movwf	?_pad,c
  7424  002EBC  501B               	movf	pad@w+1,w,c
  7425  002EBE  2002               	addwfc	?_strlen+1,w,c
  7426  002EC0  6E12               	movwf	?_pad+1,c
  7427  002EC2  0012               	return		;funcret
  7428  002EC4                     __end_of_pad:
  7429                           	opt callstack 0
  7430                           
  7431 ;; *************** function _strlen *****************
  7432 ;; Defined at:
  7433 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7436 ;;		 -> dbuf(80), 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7439 ;;		 -> dbuf(80), 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;                  2    0[COMRAM] unsigned int 
  7442 ;; Registers used:
  7443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7449 ;;      Params:         2       0       0       0       0       0       0
  7450 ;;      Locals:         2       0       0       0       0       0       0
  7451 ;;      Temps:          0       0       0       0       0       0       0
  7452 ;;      Totals:         4       0       0       0       0       0       0
  7453 ;;Total ram usage:        4 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_pad
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text26
  7463  003484                     __ptext26:
  7464                           	opt callstack 0
  7465  003484                     _strlen:
  7466                           	opt callstack 25
  7467                           
  7468                           ;incstack = 0
  7469  003484  C001  F003         	movff	strlen@s,strlen@a
  7470  003488  C002  F004         	movff	strlen@s+1,strlen@a+1
  7471  00348C  D002               	goto	l2839
  7472  00348E                     l2837:
  7473  00348E  4A01               	infsnz	strlen@s,f,c
  7474  003490  2A02               	incf	strlen@s+1,f,c
  7475  003492                     l2839:
  7476  003492  C001  FFD9         	movff	strlen@s,fsr2l
  7477  003496  C002  FFDA         	movff	strlen@s+1,fsr2h
  7478  00349A  50DF               	movf	indf2,w,c
  7479  00349C  A4D8               	btfss	status,2,c
  7480  00349E  D7F7               	goto	l2837
  7481  0034A0  5003               	movf	strlen@a,w,c
  7482  0034A2  5C01               	subwf	strlen@s,w,c
  7483  0034A4  6E01               	movwf	?_strlen,c
  7484  0034A6  5004               	movf	strlen@a+1,w,c
  7485  0034A8  5802               	subwfb	strlen@s+1,w,c
  7486  0034AA  6E02               	movwf	?_strlen+1,c
  7487  0034AC  0012               	return		;funcret
  7488  0034AE                     __end_of_strlen:
  7489                           	opt callstack 0
  7490                           
  7491 ;; *************** function _fputs *****************
  7492 ;; Defined at:
  7493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7496 ;;		 -> dbuf(80), 
  7497 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7498 ;;		 -> sprintf@f(6), 
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;  i               2   14[COMRAM] int 
  7501 ;;  c               1   13[COMRAM] unsigned char 
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  2    9[COMRAM] int 
  7504 ;; Registers used:
  7505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7511 ;;      Params:         4       0       0       0       0       0       0
  7512 ;;      Locals:         3       0       0       0       0       0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0
  7514 ;;      Totals:         7       0       0       0       0       0       0
  7515 ;;Total ram usage:        7 bytes
  7516 ;; Hardware stack levels used:    1
  7517 ;; Hardware stack levels required when called:    2
  7518 ;; This function calls:
  7519 ;;		_fputc
  7520 ;; This function is called by:
  7521 ;;		_pad
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text27
  7526  0033BE                     __ptext27:
  7527                           	opt callstack 0
  7528  0033BE                     _fputs:
  7529                           	opt callstack 23
  7530                           
  7531                           ;incstack = 0
  7532  0033BE  0E00               	movlw	0
  7533  0033C0  6E10               	movwf	fputs@i+1,c
  7534  0033C2  0E00               	movlw	0
  7535  0033C4  6E0F               	movwf	fputs@i,c
  7536  0033C6  D00B               	goto	l2833
  7537  0033C8                     l2829:
  7538  0033C8  C00E  F001         	movff	fputs@c,fputc@c
  7539  0033CC  6A02               	clrf	fputc@c+1,c
  7540  0033CE  C00C  F003         	movff	fputs@fp,fputc@fp
  7541  0033D2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7542  0033D6  ECC5  F016         	call	_fputc	;wreg free
  7543  0033DA  4A0F               	infsnz	fputs@i,f,c
  7544  0033DC  2A10               	incf	fputs@i+1,f,c
  7545  0033DE                     l2833:
  7546  0033DE  500F               	movf	fputs@i,w,c
  7547  0033E0  240A               	addwf	fputs@s,w,c
  7548  0033E2  6ED9               	movwf	fsr2l,c
  7549  0033E4  5010               	movf	fputs@i+1,w,c
  7550  0033E6  200B               	addwfc	fputs@s+1,w,c
  7551  0033E8  6EDA               	movwf	fsr2h,c
  7552  0033EA  50DF               	movf	indf2,w,c
  7553  0033EC  6E0E               	movwf	fputs@c,c
  7554  0033EE  500E               	movf	fputs@c,w,c
  7555  0033F0  B4D8               	btfsc	status,2,c
  7556  0033F2  0012               	return	
  7557  0033F4  D7E9               	goto	l2829
  7558  0033F6                     __end_of_fputs:
  7559                           	opt callstack 0
  7560                           
  7561 ;; *************** function _fputc *****************
  7562 ;; Defined at:
  7563 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;  c               2    0[COMRAM] int 
  7566 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7567 ;;		 -> sprintf@f(6), 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  2    0[COMRAM] int 
  7572 ;; Registers used:
  7573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7579 ;;      Params:         4       0       0       0       0       0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0
  7581 ;;      Temps:          5       0       0       0       0       0       0
  7582 ;;      Totals:         9       0       0       0       0       0       0
  7583 ;;Total ram usage:        9 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    1
  7586 ;; This function calls:
  7587 ;;		_putch
  7588 ;; This function is called by:
  7589 ;;		_pad
  7590 ;;		_vfpfcnvrt
  7591 ;;		_fputs
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text28
  7596  002D8A                     __ptext28:
  7597                           	opt callstack 0
  7598  002D8A                     _fputc:
  7599                           	opt callstack 23
  7600                           
  7601                           ;incstack = 0
  7602  002D8A  5003               	movf	fputc@fp,w,c
  7603  002D8C  1004               	iorwf	fputc@fp+1,w,c
  7604  002D8E  B4D8               	btfsc	status,2,c
  7605  002D90  D004               	goto	u2830
  7606  002D92  5003               	movf	fputc@fp,w,c
  7607  002D94  1004               	iorwf	fputc@fp+1,w,c
  7608  002D96  A4D8               	btfss	status,2,c
  7609  002D98  D004               	goto	l2819
  7610  002D9A                     u2830:
  7611  002D9A  5001               	movf	fputc@c,w,c
  7612  002D9C  EC94  F01A         	call	_putch
  7613  002DA0  0012               	return	
  7614  002DA2                     l2819:
  7615  002DA2  EE20 F004          	lfsr	2,4
  7616  002DA6  5003               	movf	fputc@fp,w,c
  7617  002DA8  26D9               	addwf	fsr2l,f,c
  7618  002DAA  5004               	movf	fputc@fp+1,w,c
  7619  002DAC  22DA               	addwfc	fsr2h,f,c
  7620  002DAE  50DE               	movf	postinc2,w,c
  7621  002DB0  10DE               	iorwf	postinc2,w,c
  7622  002DB2  B4D8               	btfsc	status,2,c
  7623  002DB4  D016               	goto	u2850
  7624  002DB6  EE20 F004          	lfsr	2,4
  7625  002DBA  5003               	movf	fputc@fp,w,c
  7626  002DBC  26D9               	addwf	fsr2l,f,c
  7627  002DBE  5004               	movf	fputc@fp+1,w,c
  7628  002DC0  22DA               	addwfc	fsr2h,f,c
  7629  002DC2  EE10 F002          	lfsr	1,2
  7630  002DC6  5003               	movf	fputc@fp,w,c
  7631  002DC8  26E1               	addwf	fsr1l,f,c
  7632  002DCA  5004               	movf	fputc@fp+1,w,c
  7633  002DCC  22E2               	addwfc	fsr1h,f,c
  7634  002DCE  50DE               	movf	postinc2,w,c
  7635  002DD0  5CE6               	subwf	postinc1,w,c
  7636  002DD2  50E6               	movf	postinc1,w,c
  7637  002DD4  0A80               	xorlw	128
  7638  002DD6  6E09               	movwf	(??_fputc+4)& (0+255),c
  7639  002DD8  50DE               	movf	postinc2,w,c
  7640  002DDA  0A80               	xorlw	128
  7641  002DDC  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  7642  002DDE  B0D8               	btfsc	status,0,c
  7643  002DE0  0012               	return	
  7644  002DE2                     u2850:
  7645  002DE2  EE20 F002          	lfsr	2,2
  7646  002DE6  5003               	movf	fputc@fp,w,c
  7647  002DE8  26D9               	addwf	fsr2l,f,c
  7648  002DEA  5004               	movf	fputc@fp+1,w,c
  7649  002DEC  22DA               	addwfc	fsr2h,f,c
  7650  002DEE  CFDE F005          	movff	postinc2,??_fputc
  7651  002DF2  CFDD F006          	movff	postdec2,??_fputc+1
  7652  002DF6  C003  FFD9         	movff	fputc@fp,fsr2l
  7653  002DFA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7654  002DFE  CFDE F007          	movff	postinc2,??_fputc+2
  7655  002E02  CFDD F008          	movff	postdec2,??_fputc+3
  7656  002E06  5005               	movf	??_fputc,w,c
  7657  002E08  2407               	addwf	??_fputc+2,w,c
  7658  002E0A  6ED9               	movwf	fsr2l,c
  7659  002E0C  5006               	movf	??_fputc+1,w,c
  7660  002E0E  2008               	addwfc	??_fputc+3,w,c
  7661  002E10  6EDA               	movwf	fsr2h,c
  7662  002E12  C001  FFDF         	movff	fputc@c,indf2
  7663  002E16  EE20 F002          	lfsr	2,2
  7664  002E1A  5003               	movf	fputc@fp,w,c
  7665  002E1C  26D9               	addwf	fsr2l,f,c
  7666  002E1E  5004               	movf	fputc@fp+1,w,c
  7667  002E20  22DA               	addwfc	fsr2h,f,c
  7668  002E22  2ADE               	incf	postinc2,f,c
  7669  002E24  0E00               	movlw	0
  7670  002E26  22DD               	addwfc	postdec2,f,c
  7671  002E28  0012               	return		;funcret
  7672  002E2A                     __end_of_fputc:
  7673                           	opt callstack 0
  7674                           
  7675 ;; *************** function _putch *****************
  7676 ;; Defined at:
  7677 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;  c               1    wreg     unsigned char 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  c               1    0[COMRAM] unsigned char 
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		wreg
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7691 ;;      Params:         0       0       0       0       0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0
  7694 ;;      Totals:         0       0       0       0       0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_fputc
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text29
  7705  003528                     __ptext29:
  7706                           	opt callstack 0
  7707  003528                     _putch:
  7708                           	opt callstack 23
  7709                           
  7710                           ;incstack = 0
  7711  003528  0012               	return		;funcret
  7712  00352A                     __end_of_putch:
  7713                           	opt callstack 0
  7714                           
  7715 ;; *************** function _atoi *****************
  7716 ;; Defined at:
  7717 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7720 ;;		 -> STR_4(9), STR_3(10), 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  n               2   20[COMRAM] int 
  7723 ;;  neg             2   13[COMRAM] int 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  2    7[COMRAM] int 
  7726 ;; Registers used:
  7727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7733 ;;      Params:         2       0       0       0       0       0       0
  7734 ;;      Locals:         9       0       0       0       0       0       0
  7735 ;;      Temps:          4       0       0       0       0       0       0
  7736 ;;      Totals:        15       0       0       0       0       0       0
  7737 ;;Total ram usage:       15 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    1
  7740 ;; This function calls:
  7741 ;;		___wmul
  7742 ;;		_isdigit
  7743 ;;		_isspace
  7744 ;; This function is called by:
  7745 ;;		_vfpfcnvrt
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text30
  7750  0024A2                     __ptext30:
  7751                           	opt callstack 0
  7752  0024A2                     _atoi:
  7753                           	opt callstack 26
  7754                           
  7755                           ;incstack = 0
  7756  0024A2  0E00               	movlw	0
  7757  0024A4  6E16               	movwf	atoi@n+1,c
  7758  0024A6  0E00               	movlw	0
  7759  0024A8  6E15               	movwf	atoi@n,c
  7760  0024AA  0E00               	movlw	0
  7761  0024AC  6E0F               	movwf	atoi@neg+1,c
  7762  0024AE  0E00               	movlw	0
  7763  0024B0  6E0E               	movwf	atoi@neg,c
  7764  0024B2  D002               	goto	l4005
  7765  0024B4                     l4003:
  7766  0024B4  4A08               	infsnz	atoi@s,f,c
  7767  0024B6  2A09               	incf	atoi@s+1,f,c
  7768  0024B8                     l4005:
  7769  0024B8  0E01               	movlw	1
  7770  0024BA  6E14               	movwf	_atoi$990,c
  7771  0024BC  C008  FFF6         	movff	atoi@s,tblptrl
  7772  0024C0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7773  0024C4                     	if	0	;tblptru may be non-zero
  7774  0024C4                     	endif
  7775  0024C4                     	if	0	;tblptru may be non-zero
  7776  0024C4                     	endif
  7777  0024C4  0008               	tblrd		*
  7778  0024C6  50F5               	movf	tablat,w,c
  7779  0024C8  0A20               	xorlw	32
  7780  0024CA  B4D8               	btfsc	status,2,c
  7781  0024CC  D018               	goto	l4013
  7782  0024CE  0EF7               	movlw	247
  7783  0024D0  6E0A               	movwf	??_atoi& (0+255),c
  7784  0024D2  0EFF               	movlw	255
  7785  0024D4  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7786  0024D6  C008  FFF6         	movff	atoi@s,tblptrl
  7787  0024DA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7788  0024DE                     	if	0	;tblptru may be non-zero
  7789  0024DE                     	endif
  7790  0024DE                     	if	0	;tblptru may be non-zero
  7791  0024DE                     	endif
  7792  0024DE  0008               	tblrd		*
  7793  0024E0  50F5               	movf	tablat,w,c
  7794  0024E2  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7795  0024E4  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7796  0024E6  500A               	movf	??_atoi,w,c
  7797  0024E8  260C               	addwf	??_atoi+2,f,c
  7798  0024EA  500B               	movf	??_atoi+1,w,c
  7799  0024EC  220D               	addwfc	??_atoi+3,f,c
  7800  0024EE  500D               	movf	??_atoi+3,w,c
  7801  0024F0  E104               	bnz	u4980
  7802  0024F2  0E05               	movlw	5
  7803  0024F4  5C0C               	subwf	??_atoi+2,w,c
  7804  0024F6  A0D8               	btfss	status,0,c
  7805  0024F8  D002               	goto	l4013
  7806  0024FA                     u4980:
  7807  0024FA  0E00               	movlw	0
  7808  0024FC  6E14               	movwf	_atoi$990,c
  7809  0024FE                     l4013:
  7810  0024FE  C014  F010         	movff	_atoi$990,_atoi$989
  7811  002502  6A11               	clrf	_atoi$989+1,c
  7812  002504  5010               	movf	_atoi$989,w,c
  7813  002506  1011               	iorwf	_atoi$989+1,w,c
  7814  002508  B4D8               	btfsc	status,2,c
  7815  00250A  D008               	goto	l4023
  7816  00250C  D7D3               	goto	l4003
  7817  00250E                     l4019:
  7818  00250E  0E00               	movlw	0
  7819  002510  6E0F               	movwf	atoi@neg+1,c
  7820  002512  0E01               	movlw	1
  7821  002514  6E0E               	movwf	atoi@neg,c
  7822  002516                     l4021:
  7823  002516  4A08               	infsnz	atoi@s,f,c
  7824  002518  2A09               	incf	atoi@s+1,f,c
  7825  00251A  D02E               	goto	l4029
  7826  00251C                     l4023:
  7827  00251C  C008  FFF6         	movff	atoi@s,tblptrl
  7828  002520  C009  FFF7         	movff	atoi@s+1,tblptrh
  7829  002524                     	if	0	;tblptru may be non-zero
  7830  002524                     	endif
  7831  002524                     	if	0	;tblptru may be non-zero
  7832  002524                     	endif
  7833  002524  0008               	tblrd		*
  7834  002526  50F5               	movf	tablat,w,c
  7835  002528  6E0A               	movwf	??_atoi& (0+255),c
  7836  00252A  6A0B               	clrf	(??_atoi+1)& (0+255),c
  7837                           
  7838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7839                           ; Switch size 1, requested type "simple"
  7840                           ; Number of cases is 1, Range of values is 0 to 0
  7841                           ; switch strategies available:
  7842                           ; Name         Instructions Cycles
  7843                           ; simple_byte            4     3 (average)
  7844                           ;	Chosen strategy is simple_byte
  7845  00252C  500B               	movf	??_atoi+1,w,c
  7846  00252E  0A00               	xorlw	0	; case 0
  7847  002530  A4D8               	btfss	status,2,c
  7848  002532  D022               	goto	l4029
  7849                           
  7850                           ; Switch size 1, requested type "simple"
  7851                           ; Number of cases is 2, Range of values is 43 to 45
  7852                           ; switch strategies available:
  7853                           ; Name         Instructions Cycles
  7854                           ; simple_byte            7     4 (average)
  7855                           ;	Chosen strategy is simple_byte
  7856  002534  500A               	movf	??_atoi,w,c
  7857  002536  0A2B               	xorlw	43	; case 43
  7858  002538  B4D8               	btfsc	status,2,c
  7859  00253A  D7ED               	goto	l4021
  7860  00253C  0A06               	xorlw	6	; case 45
  7861  00253E  B4D8               	btfsc	status,2,c
  7862  002540  D7E6               	goto	l4019
  7863  002542  D01A               	goto	l4029
  7864  002544                     l4025:
  7865  002544  C015  F001         	movff	atoi@n,___wmul@multiplier
  7866  002548  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7867  00254C  0E00               	movlw	0
  7868  00254E  6E04               	movwf	___wmul@multiplicand+1,c
  7869  002550  0E0A               	movlw	10
  7870  002552  6E03               	movwf	___wmul@multiplicand,c
  7871  002554  EC57  F01A         	call	___wmul	;wreg free
  7872  002558  C008  FFF6         	movff	atoi@s,tblptrl
  7873  00255C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7874  002560                     	if	0	;tblptru may be non-zero
  7875  002560                     	endif
  7876  002560                     	if	0	;tblptru may be non-zero
  7877  002560                     	endif
  7878  002560  0008               	tblrd		*
  7879  002562  50F5               	movf	tablat,w,c
  7880  002564  5E01               	subwf	?___wmul,f,c
  7881  002566  0E00               	movlw	0
  7882  002568  5A02               	subwfb	?___wmul+1,f,c
  7883  00256A  0E30               	movlw	48
  7884  00256C  2401               	addwf	?___wmul,w,c
  7885  00256E  6E15               	movwf	atoi@n,c
  7886  002570  0E00               	movlw	0
  7887  002572  2002               	addwfc	?___wmul+1,w,c
  7888  002574  6E16               	movwf	atoi@n+1,c
  7889  002576  D7CF               	goto	l4021
  7890  002578                     l4029:
  7891  002578  0ED0               	movlw	208
  7892  00257A  6E0A               	movwf	??_atoi& (0+255),c
  7893  00257C  0EFF               	movlw	255
  7894  00257E  6E0B               	movwf	(??_atoi+1)& (0+255),c
  7895  002580  C008  FFF6         	movff	atoi@s,tblptrl
  7896  002584  C009  FFF7         	movff	atoi@s+1,tblptrh
  7897  002588                     	if	0	;tblptru may be non-zero
  7898  002588                     	endif
  7899  002588                     	if	0	;tblptru may be non-zero
  7900  002588                     	endif
  7901  002588  0008               	tblrd		*
  7902  00258A  50F5               	movf	tablat,w,c
  7903  00258C  6E0C               	movwf	(??_atoi+2)& (0+255),c
  7904  00258E  6A0D               	clrf	(??_atoi+3)& (0+255),c
  7905  002590  500A               	movf	??_atoi,w,c
  7906  002592  260C               	addwf	??_atoi+2,f,c
  7907  002594  500B               	movf	??_atoi+1,w,c
  7908  002596  220D               	addwfc	??_atoi+3,f,c
  7909  002598  500D               	movf	??_atoi+3,w,c
  7910  00259A  E106               	bnz	u5000
  7911  00259C  0E0A               	movlw	10
  7912  00259E  5C0C               	subwf	??_atoi+2,w,c
  7913  0025A0  B0D8               	btfsc	status,0,c
  7914  0025A2  D002               	goto	u5000
  7915  0025A4  0E01               	movlw	1
  7916  0025A6  D001               	goto	u5010
  7917  0025A8                     u5000:
  7918  0025A8  0E00               	movlw	0
  7919  0025AA                     u5010:
  7920  0025AA  6E12               	movwf	_atoi$991,c
  7921  0025AC  6A13               	clrf	_atoi$991+1,c
  7922  0025AE  5012               	movf	_atoi$991,w,c
  7923  0025B0  1013               	iorwf	_atoi$991+1,w,c
  7924  0025B2  A4D8               	btfss	status,2,c
  7925  0025B4  D7C7               	goto	l4025
  7926  0025B6  500E               	movf	atoi@neg,w,c
  7927  0025B8  100F               	iorwf	atoi@neg+1,w,c
  7928  0025BA  A4D8               	btfss	status,2,c
  7929  0025BC  D00D               	goto	l1009
  7930  0025BE  C015  F00A         	movff	atoi@n,??_atoi
  7931  0025C2  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7932  0025C6  1E0A               	comf	??_atoi,f,c
  7933  0025C8  1E0B               	comf	??_atoi+1,f,c
  7934  0025CA  4A0A               	infsnz	??_atoi,f,c
  7935  0025CC  2A0B               	incf	??_atoi+1,f,c
  7936  0025CE  C00A  F008         	movff	??_atoi,?_atoi
  7937  0025D2  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7938  0025D6  0012               	return	
  7939  0025D8                     l1009:
  7940  0025D8  C015  F008         	movff	atoi@n,?_atoi
  7941  0025DC  C016  F009         	movff	atoi@n+1,?_atoi+1
  7942  0025E0  0012               	return		;funcret
  7943  0025E2                     __end_of_atoi:
  7944                           	opt callstack 0
  7945                           
  7946 ;; *************** function _isspace *****************
  7947 ;; Defined at:
  7948 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  c               2    0[COMRAM] int 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  2    0[COMRAM] int 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7962 ;;      Params:         2       0       0       0       0       0       0
  7963 ;;      Locals:         1       0       0       0       0       0       0
  7964 ;;      Temps:          4       0       0       0       0       0       0
  7965 ;;      Totals:         7       0       0       0       0       0       0
  7966 ;;Total ram usage:        7 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; This function calls:
  7969 ;;		Nothing
  7970 ;; This function is called by:
  7971 ;;		_atoi
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           	psect	text31
  7976  003380                     __ptext31:
  7977                           	opt callstack 0
  7978  003380                     _isspace:
  7979                           	opt callstack 26
  7980                           
  7981                           ;incstack = 0
  7982  003380  0E01               	movlw	1
  7983  003382  6E07               	movwf	_isspace$1020,c
  7984  003384  0E20               	movlw	32
  7985  003386  1801               	xorwf	isspace@c,w,c
  7986  003388  1002               	iorwf	isspace@c+1,w,c
  7987  00338A  B4D8               	btfsc	status,2,c
  7988  00338C  D014               	goto	l3637
  7989  00338E  0EF7               	movlw	247
  7990  003390  6E03               	movwf	??_isspace& (0+255),c
  7991  003392  0EFF               	movlw	255
  7992  003394  6E04               	movwf	(??_isspace+1)& (0+255),c
  7993  003396  C001  F005         	movff	isspace@c,??_isspace+2
  7994  00339A  C002  F006         	movff	isspace@c+1,??_isspace+3
  7995  00339E  5003               	movf	??_isspace,w,c
  7996  0033A0  2605               	addwf	??_isspace+2,f,c
  7997  0033A2  5004               	movf	??_isspace+1,w,c
  7998  0033A4  2206               	addwfc	??_isspace+3,f,c
  7999  0033A6  5006               	movf	??_isspace+3,w,c
  8000  0033A8  E104               	bnz	u4350
  8001  0033AA  0E05               	movlw	5
  8002  0033AC  5C05               	subwf	??_isspace+2,w,c
  8003  0033AE  A0D8               	btfss	status,0,c
  8004  0033B0  D002               	goto	l3637
  8005  0033B2                     u4350:
  8006  0033B2  0E00               	movlw	0
  8007  0033B4  6E07               	movwf	_isspace$1020,c
  8008  0033B6                     l3637:
  8009  0033B6  C007  F001         	movff	_isspace$1020,?_isspace
  8010  0033BA  6A02               	clrf	?_isspace+1,c
  8011  0033BC  0012               	return		;funcret
  8012  0033BE                     __end_of_isspace:
  8013                           	opt callstack 0
  8014                           
  8015 ;; *************** function _isdigit *****************
  8016 ;; Defined at:
  8017 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  c               2    0[COMRAM] int 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;		None
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2    0[COMRAM] int 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8031 ;;      Params:         2       0       0       0       0       0       0
  8032 ;;      Locals:         0       0       0       0       0       0       0
  8033 ;;      Temps:          4       0       0       0       0       0       0
  8034 ;;      Totals:         6       0       0       0       0       0       0
  8035 ;;Total ram usage:        6 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_vfpfcnvrt
  8041 ;;		_atoi
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text32
  8046  003426                     __ptext32:
  8047                           	opt callstack 0
  8048  003426                     _isdigit:
  8049                           	opt callstack 27
  8050                           
  8051                           ;incstack = 0
  8052  003426  0ED0               	movlw	208
  8053  003428  6E03               	movwf	??_isdigit& (0+255),c
  8054  00342A  0EFF               	movlw	255
  8055  00342C  6E04               	movwf	(??_isdigit+1)& (0+255),c
  8056  00342E  C001  F005         	movff	isdigit@c,??_isdigit+2
  8057  003432  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8058  003436  5003               	movf	??_isdigit,w,c
  8059  003438  2605               	addwf	??_isdigit+2,f,c
  8060  00343A  5004               	movf	??_isdigit+1,w,c
  8061  00343C  2206               	addwfc	??_isdigit+3,f,c
  8062  00343E  5006               	movf	??_isdigit+3,w,c
  8063  003440  E106               	bnz	u3550
  8064  003442  0E0A               	movlw	10
  8065  003444  5C05               	subwf	??_isdigit+2,w,c
  8066  003446  B0D8               	btfsc	status,0,c
  8067  003448  D002               	goto	u3550
  8068  00344A  0E01               	movlw	1
  8069  00344C  D001               	goto	u3560
  8070  00344E                     u3550:
  8071  00344E  0E00               	movlw	0
  8072  003450                     u3560:
  8073  003450  6E01               	movwf	?_isdigit,c
  8074  003452  6A02               	clrf	?_isdigit+1,c
  8075  003454  0012               	return		;funcret
  8076  003456                     __end_of_isdigit:
  8077                           	opt callstack 0
  8078                           
  8079 ;; *************** function ___wmul *****************
  8080 ;; Defined at:
  8081 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;  multiplier      2    0[COMRAM] unsigned int 
  8084 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  product         2    4[COMRAM] unsigned int 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  2    0[COMRAM] unsigned int 
  8089 ;; Registers used:
  8090 ;;		wreg, status,2, status,0, prodl, prodh
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8096 ;;      Params:         4       0       0       0       0       0       0
  8097 ;;      Locals:         2       0       0       0       0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0
  8099 ;;      Totals:         6       0       0       0       0       0       0
  8100 ;;Total ram usage:        6 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_atoi
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text33
  8110  0034AE                     __ptext33:
  8111                           	opt callstack 0
  8112  0034AE                     ___wmul:
  8113                           	opt callstack 26
  8114                           
  8115                           ;incstack = 0
  8116  0034AE  5001               	movf	___wmul@multiplier,w,c
  8117  0034B0  0203               	mulwf	___wmul@multiplicand,c
  8118  0034B2  CFF3 F005          	movff	prodl,___wmul@product
  8119  0034B6  CFF4 F006          	movff	prodh,___wmul@product+1
  8120  0034BA  5001               	movf	___wmul@multiplier,w,c
  8121  0034BC  0204               	mulwf	___wmul@multiplicand+1,c
  8122  0034BE  50F3               	movf	prodl,w,c
  8123  0034C0  2606               	addwf	___wmul@product+1,f,c
  8124  0034C2  5002               	movf	___wmul@multiplier+1,w,c
  8125  0034C4  0203               	mulwf	___wmul@multiplicand,c
  8126  0034C6  50F3               	movf	prodl,w,c
  8127  0034C8  2606               	addwf	___wmul@product+1,f,c
  8128  0034CA  C005  F001         	movff	___wmul@product,?___wmul
  8129  0034CE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8130  0034D2  0012               	return		;funcret
  8131  0034D4                     __end_of___wmul:
  8132                           	opt callstack 0
  8133                           
  8134 ;; *************** function _lcd_ini *****************
  8135 ;; Defined at:
  8136 ;;		line 3 in file "../Bibliotecas/LCD4b.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;		None
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;  i               1    5[COMRAM] unsigned char 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8150 ;;      Params:         0       0       0       0       0       0       0
  8151 ;;      Locals:         1       0       0       0       0       0       0
  8152 ;;      Temps:          1       0       0       0       0       0       0
  8153 ;;      Totals:         2       0       0       0       0       0       0
  8154 ;;Total ram usage:        2 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:    2
  8157 ;; This function calls:
  8158 ;;		_lcd_cmd
  8159 ;; This function is called by:
  8160 ;;		_main
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164                           	psect	text34
  8165  002EC4                     __ptext34:
  8166                           	opt callstack 0
  8167  002EC4                     _lcd_ini:
  8168                           	opt callstack 28
  8169                           
  8170                           ;../Bibliotecas/LCD4b.c: 5: char i;;../Bibliotecas/LCD4b.c: 7: TRISD = 0b00000000;
  8171                           
  8172                           ;incstack = 0
  8173  002EC4  0E00               	movlw	0
  8174  002EC6  6E95               	movwf	3989,c	;volatile
  8175                           
  8176                           ;../Bibliotecas/LCD4b.c: 8: TRISEbits.TRISE1 = 0;
  8177  002EC8  9296               	bcf	3990,1,c	;volatile
  8178                           
  8179                           ;../Bibliotecas/LCD4b.c: 9: TRISEbits.TRISE0 = 0;
  8180  002ECA  9096               	bcf	3990,0,c	;volatile
  8181                           
  8182                           ;../Bibliotecas/LCD4b.c: 11: PORTD = 0b00000000;
  8183  002ECC  0E00               	movlw	0
  8184  002ECE  6E83               	movwf	3971,c	;volatile
  8185                           
  8186                           ;../Bibliotecas/LCD4b.c: 12: PORTEbits.RE0 = 0;
  8187  002ED0  9084               	bcf	3972,0,c	;volatile
  8188                           
  8189                           ;../Bibliotecas/LCD4b.c: 13: PORTEbits.RE1 = 0;
  8190  002ED2  9284               	bcf	3972,1,c	;volatile
  8191                           
  8192                           ;../Bibliotecas/LCD4b.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  8193  002ED4  0E27               	movlw	39
  8194  002ED6  6E05               	movwf	??_lcd_ini& (0+255),c
  8195  002ED8  0EF5               	movlw	245
  8196  002EDA                     u5667:
  8197  002EDA  2EE8               	decfsz	wreg,f,c
  8198  002EDC  D7FE               	bra	u5667
  8199  002EDE  2E05               	decfsz	??_lcd_ini& (0+255),f,c
  8200  002EE0  D7FC               	bra	u5667
  8201  002EE2  F000               	nop	
  8202                           
  8203                           ;../Bibliotecas/LCD4b.c: 18: for(i=0;i<=2;i++)
  8204  002EE4  0E00               	movlw	0
  8205  002EE6  6E06               	movwf	lcd_ini@i,c
  8206  002EE8                     l4287:
  8207                           
  8208                           ;../Bibliotecas/LCD4b.c: 19:    {;../Bibliotecas/LCD4b.c: 20:    lcd_cmd(0x30);
  8209  002EE8  0E30               	movlw	48
  8210  002EEA  EC04  F014         	call	_lcd_cmd
  8211                           
  8212                           ;../Bibliotecas/LCD4b.c: 21:    _delay((unsigned long)((5)*(8000000/4000.0)));
  8213  002EEE  0E0D               	movlw	13
  8214  002EF0  6E05               	movwf	??_lcd_ini& (0+255),c
  8215  002EF2  0EFC               	movlw	252
  8216  002EF4                     u5677:
  8217  002EF4  2EE8               	decfsz	wreg,f,c
  8218  002EF6  D7FE               	bra	u5677
  8219  002EF8  2E05               	decfsz	??_lcd_ini& (0+255),f,c
  8220  002EFA  D7FC               	bra	u5677
  8221                           
  8222                           ;../Bibliotecas/LCD4b.c: 22:    }
  8223  002EFC  2A06               	incf	lcd_ini@i,f,c
  8224  002EFE  0E02               	movlw	2
  8225  002F00  6406               	cpfsgt	lcd_ini@i,c
  8226  002F02  D7F2               	goto	l4287
  8227                           
  8228                           ;../Bibliotecas/LCD4b.c: 24:    lcd_cmd(0x02);
  8229  002F04  0E02               	movlw	2
  8230  002F06  EC04  F014         	call	_lcd_cmd
  8231                           
  8232                           ;../Bibliotecas/LCD4b.c: 25:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8233  002F0A  0E1A               	movlw	26
  8234  002F0C                     u5687:
  8235  002F0C  2EE8               	decfsz	wreg,f,c
  8236  002F0E  D7FE               	bra	u5687
  8237  002F10  D000               	nop2	
  8238                           
  8239                           ;../Bibliotecas/LCD4b.c: 26:    lcd_cmd(0x28);
  8240  002F12  0E28               	movlw	40
  8241  002F14  EC04  F014         	call	_lcd_cmd
  8242                           
  8243                           ;../Bibliotecas/LCD4b.c: 27:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8244  002F18  0E1A               	movlw	26
  8245  002F1A                     u5697:
  8246  002F1A  2EE8               	decfsz	wreg,f,c
  8247  002F1C  D7FE               	bra	u5697
  8248  002F1E  D000               	nop2	
  8249                           
  8250                           ;../Bibliotecas/LCD4b.c: 28:    lcd_cmd(0x01);
  8251  002F20  0E01               	movlw	1
  8252  002F22  EC04  F014         	call	_lcd_cmd
  8253                           
  8254                           ;../Bibliotecas/LCD4b.c: 29:    _delay((unsigned long)((2)*(8000000/4000.0)));
  8255  002F26  0E06               	movlw	6
  8256  002F28  6E05               	movwf	??_lcd_ini& (0+255),c
  8257  002F2A  0E30               	movlw	48
  8258  002F2C                     u5707:
  8259  002F2C  2EE8               	decfsz	wreg,f,c
  8260  002F2E  D7FE               	bra	u5707
  8261  002F30  2E05               	decfsz	??_lcd_ini& (0+255),f,c
  8262  002F32  D7FC               	bra	u5707
  8263  002F34  D000               	nop2	
  8264                           
  8265                           ;../Bibliotecas/LCD4b.c: 30:    lcd_cmd(0x0C);
  8266  002F36  0E0C               	movlw	12
  8267  002F38  EC04  F014         	call	_lcd_cmd
  8268                           
  8269                           ;../Bibliotecas/LCD4b.c: 31:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8270  002F3C  0E1A               	movlw	26
  8271  002F3E                     u5717:
  8272  002F3E  2EE8               	decfsz	wreg,f,c
  8273  002F40  D7FE               	bra	u5717
  8274  002F42  D000               	nop2	
  8275                           
  8276                           ;../Bibliotecas/LCD4b.c: 32:    lcd_cmd(0x06);
  8277  002F44  0E06               	movlw	6
  8278  002F46  EC04  F014         	call	_lcd_cmd
  8279                           
  8280                           ;../Bibliotecas/LCD4b.c: 33:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8281  002F4A  0E1A               	movlw	26
  8282  002F4C                     u5727:
  8283  002F4C  2EE8               	decfsz	wreg,f,c
  8284  002F4E  D7FE               	bra	u5727
  8285  002F50  D000               	nop2	
  8286  002F52  0012               	return		;funcret
  8287  002F54                     __end_of_lcd_ini:
  8288                           	opt callstack 0
  8289                           
  8290 ;; *************** function _lcd_escreve_bf *****************
  8291 ;; Defined at:
  8292 ;;		line 82 in file "../Bibliotecas/LCD4b.c"
  8293 ;; Parameters:    Size  Location     Type
  8294 ;;  lin             1    wreg     unsigned char 
  8295 ;;  col             1    6[COMRAM] unsigned char 
  8296 ;;  str             2    7[COMRAM] PTR unsigned char 
  8297 ;;		 -> bufferLCD(16), STR_2(6), STR_1(6), 
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;  lin             1   10[COMRAM] unsigned char 
  8300 ;;  end             1    9[COMRAM] unsigned char 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8310 ;;      Params:         3       0       0       0       0       0       0
  8311 ;;      Locals:         2       0       0       0       0       0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0
  8313 ;;      Totals:         5       0       0       0       0       0       0
  8314 ;;Total ram usage:        5 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    3
  8317 ;; This function calls:
  8318 ;;		_lcd_envia_byte
  8319 ;; This function is called by:
  8320 ;;		_main
  8321 ;; This function uses a non-reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text35
  8325  003062                     __ptext35:
  8326                           	opt callstack 0
  8327  003062                     _lcd_escreve_bf:
  8328                           	opt callstack 27
  8329                           
  8330                           ;incstack = 0
  8331                           ;lcd_escreve_bf@lin stored from wreg
  8332  003062  6E0B               	movwf	lcd_escreve_bf@lin,c
  8333                           
  8334                           ;../Bibliotecas/LCD4b.c: 82: void lcd_escreve_bf(char lin, char col, char *str);../Bibli
      +                          otecas/LCD4b.c: 83: {;../Bibliotecas/LCD4b.c: 84:     char end;;../Bibliotecas/LCD4b.c: 
      +                          87:     if (lin == 1) {
  8335  003064  040B               	decf	lcd_escreve_bf@lin,w,c
  8336  003066  A4D8               	btfss	status,2,c
  8337  003068  D003               	goto	l4313
  8338                           
  8339                           ;../Bibliotecas/LCD4b.c: 88:         end = col + 0x80 - 1;
  8340  00306A  5007               	movf	lcd_escreve_bf@col,w,c
  8341  00306C  0F7F               	addlw	127
  8342  00306E  D006               	goto	L15
  8343  003070                     l4313:
  8344  003070  0E02               	movlw	2
  8345  003072  180B               	xorwf	lcd_escreve_bf@lin,w,c
  8346  003074  A4D8               	btfss	status,2,c
  8347  003076  D003               	goto	l4317
  8348                           
  8349                           ;../Bibliotecas/LCD4b.c: 91:         end = col + 0xC0 - 1;
  8350  003078  5007               	movf	lcd_escreve_bf@col,w,c
  8351  00307A  0FBF               	addlw	191
  8352  00307C                     L15:
  8353  00307C  6E0A               	movwf	lcd_escreve_bf@end,c
  8354  00307E                     l4317:
  8355                           
  8356                           ;../Bibliotecas/LCD4b.c: 94:     lcd_envia_byte(0,end);
  8357  00307E  C00A  F005         	movff	lcd_escreve_bf@end,lcd_envia_byte@dado
  8358  003082  0E00               	movlw	0
  8359  003084  EC7B  F01A         	call	_lcd_envia_byte
  8360                           
  8361                           ;../Bibliotecas/LCD4b.c: 98:     while (*str){
  8362  003088  D016               	goto	l4323
  8363  00308A                     l4319:
  8364                           
  8365                           ;../Bibliotecas/LCD4b.c: 99:         lcd_envia_byte(1,*str);
  8366  00308A  C008  FFF6         	movff	lcd_escreve_bf@str,tblptrl
  8367  00308E  C009  FFF7         	movff	lcd_escreve_bf@str+1,tblptrh
  8368  003092  6AF8               	clrf	tblptru,c
  8369  003094  0E05               	movlw	(high __ramtop+-1)
  8370  003096  64F7               	cpfsgt	tblptrh,c
  8371  003098  D003               	bra	u5407
  8372  00309A  0008               	tblrd		*
  8373  00309C  50F5               	movf	tablat,w,c
  8374  00309E  D005               	bra	u5400
  8375  0030A0                     u5407:
  8376  0030A0  CFF6 FFE1          	movff	tblptrl,fsr1l
  8377  0030A4  CFF7 FFE2          	movff	tblptrh,fsr1h
  8378  0030A8  50E7               	movf	indf1,w,c
  8379  0030AA                     u5400:
  8380  0030AA  6E05               	movwf	lcd_envia_byte@dado,c
  8381  0030AC  0E01               	movlw	1
  8382  0030AE  EC7B  F01A         	call	_lcd_envia_byte
  8383                           
  8384                           ;../Bibliotecas/LCD4b.c: 100:         str++;
  8385  0030B2  4A08               	infsnz	lcd_escreve_bf@str,f,c
  8386  0030B4  2A09               	incf	lcd_escreve_bf@str+1,f,c
  8387  0030B6                     l4323:
  8388                           
  8389                           ;../Bibliotecas/LCD4b.c: 98:     while (*str){
  8390  0030B6  C008  FFF6         	movff	lcd_escreve_bf@str,tblptrl
  8391  0030BA  C009  FFF7         	movff	lcd_escreve_bf@str+1,tblptrh
  8392  0030BE  6AF8               	clrf	tblptru,c
  8393  0030C0  0E05               	movlw	(high __ramtop+-1)
  8394  0030C2  64F7               	cpfsgt	tblptrh,c
  8395  0030C4  D003               	bra	u5417
  8396  0030C6  0008               	tblrd		*
  8397  0030C8  50F5               	movf	tablat,w,c
  8398  0030CA  D005               	bra	u5410
  8399  0030CC                     u5417:
  8400  0030CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8401  0030D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  8402  0030D4  50E7               	movf	indf1,w,c
  8403  0030D6                     u5410:
  8404  0030D6  0900               	iorlw	0
  8405  0030D8  B4D8               	btfsc	status,2,c
  8406  0030DA  0012               	return	
  8407  0030DC  D7D6               	goto	l4319
  8408  0030DE                     __end_of_lcd_escreve_bf:
  8409                           	opt callstack 0
  8410                           
  8411 ;; *************** function _lcd_envia_byte *****************
  8412 ;; Defined at:
  8413 ;;		line 74 in file "../Bibliotecas/LCD4b.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  nivel           1    wreg     unsigned char 
  8416 ;;  dado            1    4[COMRAM] unsigned char 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  nivel           1    5[COMRAM] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg, status,2, status,0, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8428 ;;      Params:         1       0       0       0       0       0       0
  8429 ;;      Locals:         1       0       0       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0
  8431 ;;      Totals:         2       0       0       0       0       0       0
  8432 ;;Total ram usage:        2 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    2
  8435 ;; This function calls:
  8436 ;;		_lcd_cmd
  8437 ;; This function is called by:
  8438 ;;		_lcd_escreve_bf
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text36
  8443  0034F6                     __ptext36:
  8444                           	opt callstack 0
  8445  0034F6                     _lcd_envia_byte:
  8446                           	opt callstack 27
  8447                           
  8448                           ;incstack = 0
  8449                           ;lcd_envia_byte@nivel stored from wreg
  8450  0034F6  6E06               	movwf	lcd_envia_byte@nivel,c
  8451                           
  8452                           ;../Bibliotecas/LCD4b.c: 74: void lcd_envia_byte(char nivel, char dado);../Bibliotecas/L
      +                          CD4b.c: 75: {;../Bibliotecas/LCD4b.c: 76:     PORTEbits.RE0 = nivel;
  8453  0034F8  B006               	btfsc	lcd_envia_byte@nivel,0,c
  8454  0034FA  D002               	bra	u5355
  8455  0034FC  9084               	bcf	3972,0,c	;volatile
  8456  0034FE  D001               	bra	u5356
  8457  003500                     u5355:
  8458  003500  8084               	bsf	3972,0,c	;volatile
  8459  003502                     u5356:
  8460                           
  8461                           ;../Bibliotecas/LCD4b.c: 77:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8462  003502  0E42               	movlw	66
  8463  003504                     u5737:
  8464  003504  2EE8               	decfsz	wreg,f,c
  8465  003506  D7FE               	bra	u5737
  8466  003508  D000               	nop2	
  8467                           
  8468                           ;../Bibliotecas/LCD4b.c: 78:     PORTEbits.RE1 = 0;
  8469  00350A  9284               	bcf	3972,1,c	;volatile
  8470                           
  8471                           ;../Bibliotecas/LCD4b.c: 79:     lcd_cmd(dado);
  8472  00350C  5005               	movf	lcd_envia_byte@dado,w,c
  8473  00350E  EC04  F014         	call	_lcd_cmd
  8474  003512  0012               	return		;funcret
  8475  003514                     __end_of_lcd_envia_byte:
  8476                           	opt callstack 0
  8477                           
  8478 ;; *************** function _lcd_cmd *****************
  8479 ;; Defined at:
  8480 ;;		line 48 in file "../Bibliotecas/LCD4b.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  cmd             1    wreg     unsigned char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  cmd             1    3[COMRAM] unsigned char 
  8485 ;; Return value:  Size  Location     Type
  8486 ;;                  1    wreg      void 
  8487 ;; Registers used:
  8488 ;;		wreg, status,2, status,0, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : 0/0
  8491 ;;		On exit  : 0/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8494 ;;      Params:         0       0       0       0       0       0       0
  8495 ;;      Locals:         1       0       0       0       0       0       0
  8496 ;;      Temps:          1       0       0       0       0       0       0
  8497 ;;      Totals:         2       0       0       0       0       0       0
  8498 ;;Total ram usage:        2 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    1
  8501 ;; This function calls:
  8502 ;;		_set_bit
  8503 ;; This function is called by:
  8504 ;;		_lcd_ini
  8505 ;;		_lcd_envia_byte
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text37
  8510  002808                     __ptext37:
  8511                           	opt callstack 0
  8512  002808                     _lcd_cmd:
  8513                           	opt callstack 28
  8514                           
  8515                           ;incstack = 0
  8516                           ;lcd_cmd@cmd stored from wreg
  8517  002808  6E04               	movwf	lcd_cmd@cmd,c
  8518                           
  8519                           ;../Bibliotecas/LCD4b.c: 48: void lcd_cmd(char cmd);../Bibliotecas/LCD4b.c: 49: {;../Bib
      +                          liotecas/LCD4b.c: 52:     PORTDbits.RD4 = set_bit(cmd,0b00010000);
  8520  00280A  0E10               	movlw	16
  8521  00280C  6E01               	movwf	set_bit@comp,c
  8522  00280E  5004               	movf	lcd_cmd@cmd,w,c
  8523  002810  EC8A  F01A         	call	_set_bit
  8524  002814  6E03               	movwf	??_lcd_cmd& (0+255),c
  8525  002816  3A03               	swapf	??_lcd_cmd,f,c
  8526  002818  5083               	movf	3971,w,c	;volatile
  8527  00281A  1803               	xorwf	??_lcd_cmd,w,c
  8528  00281C  0BEF               	andlw	-17
  8529  00281E  1803               	xorwf	??_lcd_cmd,w,c
  8530  002820  6E83               	movwf	3971,c	;volatile
  8531                           
  8532                           ;../Bibliotecas/LCD4b.c: 53:     PORTDbits.RD5 = set_bit(cmd,0b00100000);
  8533  002822  0E20               	movlw	32
  8534  002824  6E01               	movwf	set_bit@comp,c
  8535  002826  5004               	movf	lcd_cmd@cmd,w,c
  8536  002828  EC8A  F01A         	call	_set_bit
  8537  00282C  6E03               	movwf	??_lcd_cmd& (0+255),c
  8538  00282E  3A03               	swapf	??_lcd_cmd,f,c
  8539  002830  4603               	rlncf	??_lcd_cmd,f,c
  8540  002832  5083               	movf	3971,w,c	;volatile
  8541  002834  1803               	xorwf	??_lcd_cmd,w,c
  8542  002836  0BDF               	andlw	-33
  8543  002838  1803               	xorwf	??_lcd_cmd,w,c
  8544  00283A  6E83               	movwf	3971,c	;volatile
  8545                           
  8546                           ;../Bibliotecas/LCD4b.c: 54:     PORTDbits.RD6 = set_bit(cmd,0b01000000);
  8547  00283C  0E40               	movlw	64
  8548  00283E  6E01               	movwf	set_bit@comp,c
  8549  002840  5004               	movf	lcd_cmd@cmd,w,c
  8550  002842  EC8A  F01A         	call	_set_bit
  8551  002846  6E03               	movwf	??_lcd_cmd& (0+255),c
  8552  002848  3A03               	swapf	??_lcd_cmd,f,c
  8553  00284A  4603               	rlncf	??_lcd_cmd,f,c
  8554  00284C  4603               	rlncf	??_lcd_cmd,f,c
  8555  00284E  5083               	movf	3971,w,c	;volatile
  8556  002850  1803               	xorwf	??_lcd_cmd,w,c
  8557  002852  0BBF               	andlw	-65
  8558  002854  1803               	xorwf	??_lcd_cmd,w,c
  8559  002856  6E83               	movwf	3971,c	;volatile
  8560                           
  8561                           ;../Bibliotecas/LCD4b.c: 55:     PORTDbits.RD7 = set_bit(cmd,0b10000000);
  8562  002858  0E80               	movlw	128
  8563  00285A  6E01               	movwf	set_bit@comp,c
  8564  00285C  5004               	movf	lcd_cmd@cmd,w,c
  8565  00285E  EC8A  F01A         	call	_set_bit
  8566  002862  6E03               	movwf	??_lcd_cmd& (0+255),c
  8567  002864  3203               	rrcf	??_lcd_cmd,f,c
  8568  002866  3203               	rrcf	??_lcd_cmd,f,c
  8569  002868  5083               	movf	3971,w,c	;volatile
  8570  00286A  1803               	xorwf	??_lcd_cmd,w,c
  8571  00286C  0B7F               	andlw	-129
  8572  00286E  1803               	xorwf	??_lcd_cmd,w,c
  8573  002870  6E83               	movwf	3971,c	;volatile
  8574                           
  8575                           ;../Bibliotecas/LCD4b.c: 57:     PORTEbits.RE1 = 1;
  8576  002872  8284               	bsf	3972,1,c	;volatile
  8577                           
  8578                           ;../Bibliotecas/LCD4b.c: 58:     PORTEbits.RE1 = 0;
  8579  002874  9284               	bcf	3972,1,c	;volatile
  8580                           
  8581                           ;../Bibliotecas/LCD4b.c: 60:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  8582  002876  0E42               	movlw	66
  8583  002878                     u5747:
  8584  002878  2EE8               	decfsz	wreg,f,c
  8585  00287A  D7FE               	bra	u5747
  8586  00287C  D000               	nop2	
  8587                           
  8588                           ;../Bibliotecas/LCD4b.c: 64:     PORTDbits.RD4 = set_bit(cmd,0b00000001);
  8589  00287E  0E01               	movlw	1
  8590  002880  6E01               	movwf	set_bit@comp,c
  8591  002882  5004               	movf	lcd_cmd@cmd,w,c
  8592  002884  EC8A  F01A         	call	_set_bit
  8593  002888  6E03               	movwf	??_lcd_cmd& (0+255),c
  8594  00288A  3A03               	swapf	??_lcd_cmd,f,c
  8595  00288C  5083               	movf	3971,w,c	;volatile
  8596  00288E  1803               	xorwf	??_lcd_cmd,w,c
  8597  002890  0BEF               	andlw	-17
  8598  002892  1803               	xorwf	??_lcd_cmd,w,c
  8599  002894  6E83               	movwf	3971,c	;volatile
  8600                           
  8601                           ;../Bibliotecas/LCD4b.c: 65:     PORTDbits.RD5 = set_bit(cmd,0b00000010);
  8602  002896  0E02               	movlw	2
  8603  002898  6E01               	movwf	set_bit@comp,c
  8604  00289A  5004               	movf	lcd_cmd@cmd,w,c
  8605  00289C  EC8A  F01A         	call	_set_bit
  8606  0028A0  6E03               	movwf	??_lcd_cmd& (0+255),c
  8607  0028A2  3A03               	swapf	??_lcd_cmd,f,c
  8608  0028A4  4603               	rlncf	??_lcd_cmd,f,c
  8609  0028A6  5083               	movf	3971,w,c	;volatile
  8610  0028A8  1803               	xorwf	??_lcd_cmd,w,c
  8611  0028AA  0BDF               	andlw	-33
  8612  0028AC  1803               	xorwf	??_lcd_cmd,w,c
  8613  0028AE  6E83               	movwf	3971,c	;volatile
  8614                           
  8615                           ;../Bibliotecas/LCD4b.c: 66:     PORTDbits.RD6 = set_bit(cmd,0b00000100);
  8616  0028B0  0E04               	movlw	4
  8617  0028B2  6E01               	movwf	set_bit@comp,c
  8618  0028B4  5004               	movf	lcd_cmd@cmd,w,c
  8619  0028B6  EC8A  F01A         	call	_set_bit
  8620  0028BA  6E03               	movwf	??_lcd_cmd& (0+255),c
  8621  0028BC  3A03               	swapf	??_lcd_cmd,f,c
  8622  0028BE  4603               	rlncf	??_lcd_cmd,f,c
  8623  0028C0  4603               	rlncf	??_lcd_cmd,f,c
  8624  0028C2  5083               	movf	3971,w,c	;volatile
  8625  0028C4  1803               	xorwf	??_lcd_cmd,w,c
  8626  0028C6  0BBF               	andlw	-65
  8627  0028C8  1803               	xorwf	??_lcd_cmd,w,c
  8628  0028CA  6E83               	movwf	3971,c	;volatile
  8629                           
  8630                           ;../Bibliotecas/LCD4b.c: 67:     PORTDbits.RD7 = set_bit(cmd,0b00001000);
  8631  0028CC  0E08               	movlw	8
  8632  0028CE  6E01               	movwf	set_bit@comp,c
  8633  0028D0  5004               	movf	lcd_cmd@cmd,w,c
  8634  0028D2  EC8A  F01A         	call	_set_bit
  8635  0028D6  6E03               	movwf	??_lcd_cmd& (0+255),c
  8636  0028D8  3203               	rrcf	??_lcd_cmd,f,c
  8637  0028DA  3203               	rrcf	??_lcd_cmd,f,c
  8638  0028DC  5083               	movf	3971,w,c	;volatile
  8639  0028DE  1803               	xorwf	??_lcd_cmd,w,c
  8640  0028E0  0B7F               	andlw	-129
  8641  0028E2  1803               	xorwf	??_lcd_cmd,w,c
  8642  0028E4  6E83               	movwf	3971,c	;volatile
  8643                           
  8644                           ;../Bibliotecas/LCD4b.c: 69:     PORTEbits.RE1 = 1;
  8645  0028E6  8284               	bsf	3972,1,c	;volatile
  8646                           
  8647                           ;../Bibliotecas/LCD4b.c: 70:     PORTEbits.RE1 = 0;
  8648  0028E8  9284               	bcf	3972,1,c	;volatile
  8649  0028EA  0012               	return		;funcret
  8650  0028EC                     __end_of_lcd_cmd:
  8651                           	opt callstack 0
  8652                           
  8653 ;; *************** function _set_bit *****************
  8654 ;; Defined at:
  8655 ;;		line 38 in file "../Bibliotecas/LCD4b.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  cmd             1    wreg     unsigned char 
  8658 ;;  comp            1    0[COMRAM] unsigned char 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  cmd             1    1[COMRAM] unsigned char 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      unsigned char 
  8663 ;; Registers used:
  8664 ;;		wreg, status,2, status,0
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8670 ;;      Params:         1       0       0       0       0       0       0
  8671 ;;      Locals:         1       0       0       0       0       0       0
  8672 ;;      Temps:          0       0       0       0       0       0       0
  8673 ;;      Totals:         2       0       0       0       0       0       0
  8674 ;;Total ram usage:        2 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; This function calls:
  8677 ;;		Nothing
  8678 ;; This function is called by:
  8679 ;;		_lcd_cmd
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           	psect	text38
  8684  003514                     __ptext38:
  8685                           	opt callstack 0
  8686  003514                     _set_bit:
  8687                           	opt callstack 28
  8688                           
  8689                           ;incstack = 0
  8690                           ;set_bit@cmd stored from wreg
  8691  003514  6E02               	movwf	set_bit@cmd,c
  8692                           
  8693                           ;../Bibliotecas/LCD4b.c: 38: char set_bit(char cmd, char comp);../Bibliotecas/LCD4b.c: 3
      +                          9: {;../Bibliotecas/LCD4b.c: 41:     if ((cmd & comp) >= 1)
  8694  003516  5002               	movf	set_bit@cmd,w,c
  8695  003518  1401               	andwf	set_bit@comp,w,c
  8696  00351A  0900               	iorlw	0
  8697  00351C  B4D8               	btfsc	status,2,c
  8698  00351E  D002               	goto	l3649
  8699                           
  8700                           ;../Bibliotecas/LCD4b.c: 42:         return 1;
  8701  003520  0E01               	movlw	1
  8702  003522  0012               	return	
  8703  003524                     l3649:
  8704                           
  8705                           ;../Bibliotecas/LCD4b.c: 44:         return 0;
  8706  003524  0E00               	movlw	0
  8707  003526  0012               	return		;funcret
  8708  003528                     __end_of_set_bit:
  8709                           	opt callstack 0
  8710                           
  8711 ;; *************** function ___xxtofl *****************
  8712 ;; Defined at:
  8713 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  sign            1    wreg     unsigned char 
  8716 ;;  val             4    0[COMRAM] long 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;  sign            1    8[COMRAM] unsigned char 
  8719 ;;  arg             4   10[COMRAM] unsigned long 
  8720 ;;  exp             1    9[COMRAM] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  4    0[COMRAM] unsigned char 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8730 ;;      Params:         4       0       0       0       0       0       0
  8731 ;;      Locals:         6       0       0       0       0       0       0
  8732 ;;      Temps:          4       0       0       0       0       0       0
  8733 ;;      Totals:        14       0       0       0       0       0       0
  8734 ;;Total ram usage:       14 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text39
  8744  0025E2                     __ptext39:
  8745                           	opt callstack 0
  8746  0025E2                     ___xxtofl:
  8747                           	opt callstack 30
  8748                           
  8749                           ;incstack = 0
  8750                           ;___xxtofl@sign stored from wreg
  8751  0025E2  6E09               	movwf	___xxtofl@sign,c
  8752  0025E4  5009               	movf	___xxtofl@sign,w,c
  8753  0025E6  A4D8               	btfss	status,2,c
  8754  0025E8  AE04               	btfss	___xxtofl@val+3,7,c
  8755  0025EA  D01A               	goto	l954
  8756  0025EC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8757  0025F0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8758  0025F4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8759  0025F8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8760  0025FC  1E05               	comf	??___xxtofl,f,c
  8761  0025FE  1E06               	comf	??___xxtofl+1,f,c
  8762  002600  1E07               	comf	??___xxtofl+2,f,c
  8763  002602  1E08               	comf	??___xxtofl+3,f,c
  8764  002604  2A05               	incf	??___xxtofl,f,c
  8765  002606  0E00               	movlw	0
  8766  002608  2206               	addwfc	??___xxtofl+1,f,c
  8767  00260A  2207               	addwfc	??___xxtofl+2,f,c
  8768  00260C  2208               	addwfc	??___xxtofl+3,f,c
  8769  00260E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8770  002612  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8771  002616  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8772  00261A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8773  00261E  D008               	goto	l4397
  8774  002620                     l954:
  8775  002620  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8776  002624  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8777  002628  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8778  00262C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8779  002630                     l4397:
  8780  002630  5001               	movf	___xxtofl@val,w,c
  8781  002632  1002               	iorwf	___xxtofl@val+1,w,c
  8782  002634  1003               	iorwf	___xxtofl@val+2,w,c
  8783  002636  1004               	iorwf	___xxtofl@val+3,w,c
  8784  002638  A4D8               	btfss	status,2,c
  8785  00263A  D009               	goto	l4403
  8786  00263C  0E00               	movlw	0
  8787  00263E  6E01               	movwf	?___xxtofl,c
  8788  002640  0E00               	movlw	0
  8789  002642  6E02               	movwf	?___xxtofl+1,c
  8790  002644  0E00               	movlw	0
  8791  002646  6E03               	movwf	?___xxtofl+2,c
  8792  002648  0E00               	movlw	0
  8793  00264A  6E04               	movwf	?___xxtofl+3,c
  8794  00264C  0012               	return	
  8795  00264E                     l4403:
  8796  00264E  0E96               	movlw	150
  8797  002650  6E0A               	movwf	___xxtofl@exp,c
  8798  002652  D006               	goto	l4407
  8799  002654                     l4405:
  8800  002654  2A0A               	incf	___xxtofl@exp,f,c
  8801  002656  90D8               	bcf	status,0,c
  8802  002658  320E               	rrcf	___xxtofl@arg+3,f,c
  8803  00265A  320D               	rrcf	___xxtofl@arg+2,f,c
  8804  00265C  320C               	rrcf	___xxtofl@arg+1,f,c
  8805  00265E  320B               	rrcf	___xxtofl@arg,f,c
  8806  002660                     l4407:
  8807  002660  0E00               	movlw	0
  8808  002662  140B               	andwf	___xxtofl@arg,w,c
  8809  002664  6E05               	movwf	??___xxtofl& (0+255),c
  8810  002666  0E00               	movlw	0
  8811  002668  140C               	andwf	___xxtofl@arg+1,w,c
  8812  00266A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8813  00266C  0E00               	movlw	0
  8814  00266E  140D               	andwf	___xxtofl@arg+2,w,c
  8815  002670  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8816  002672  0EFE               	movlw	254
  8817  002674  140E               	andwf	___xxtofl@arg+3,w,c
  8818  002676  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8819  002678  5005               	movf	??___xxtofl,w,c
  8820  00267A  1006               	iorwf	??___xxtofl+1,w,c
  8821  00267C  1007               	iorwf	??___xxtofl+2,w,c
  8822  00267E  1008               	iorwf	??___xxtofl+3,w,c
  8823  002680  B4D8               	btfsc	status,2,c
  8824  002682  D00D               	goto	l961
  8825  002684  D7E7               	goto	l4405
  8826  002686                     l4409:
  8827  002686  2A0A               	incf	___xxtofl@exp,f,c
  8828  002688  0E01               	movlw	1
  8829  00268A  260B               	addwf	___xxtofl@arg,f,c
  8830  00268C  0E00               	movlw	0
  8831  00268E  220C               	addwfc	___xxtofl@arg+1,f,c
  8832  002690  220D               	addwfc	___xxtofl@arg+2,f,c
  8833  002692  220E               	addwfc	___xxtofl@arg+3,f,c
  8834  002694  90D8               	bcf	status,0,c
  8835  002696  320E               	rrcf	___xxtofl@arg+3,f,c
  8836  002698  320D               	rrcf	___xxtofl@arg+2,f,c
  8837  00269A  320C               	rrcf	___xxtofl@arg+1,f,c
  8838  00269C  320B               	rrcf	___xxtofl@arg,f,c
  8839  00269E                     l961:
  8840  00269E  0E00               	movlw	0
  8841  0026A0  140B               	andwf	___xxtofl@arg,w,c
  8842  0026A2  6E05               	movwf	??___xxtofl& (0+255),c
  8843  0026A4  0E00               	movlw	0
  8844  0026A6  140C               	andwf	___xxtofl@arg+1,w,c
  8845  0026A8  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  8846  0026AA  0E00               	movlw	0
  8847  0026AC  140D               	andwf	___xxtofl@arg+2,w,c
  8848  0026AE  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  8849  0026B0  0EFF               	movlw	255
  8850  0026B2  140E               	andwf	___xxtofl@arg+3,w,c
  8851  0026B4  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  8852  0026B6  5005               	movf	??___xxtofl,w,c
  8853  0026B8  1006               	iorwf	??___xxtofl+1,w,c
  8854  0026BA  1007               	iorwf	??___xxtofl+2,w,c
  8855  0026BC  1008               	iorwf	??___xxtofl+3,w,c
  8856  0026BE  B4D8               	btfsc	status,2,c
  8857  0026C0  D007               	goto	l4417
  8858  0026C2  D7E1               	goto	l4409
  8859  0026C4                     l4415:
  8860  0026C4  060A               	decf	___xxtofl@exp,f,c
  8861  0026C6  90D8               	bcf	status,0,c
  8862  0026C8  360B               	rlcf	___xxtofl@arg,f,c
  8863  0026CA  360C               	rlcf	___xxtofl@arg+1,f,c
  8864  0026CC  360D               	rlcf	___xxtofl@arg+2,f,c
  8865  0026CE  360E               	rlcf	___xxtofl@arg+3,f,c
  8866  0026D0                     l4417:
  8867  0026D0  BE0D               	btfsc	___xxtofl@arg+2,7,c
  8868  0026D2  D003               	goto	u5570
  8869  0026D4  0E02               	movlw	2
  8870  0026D6  600A               	cpfslt	___xxtofl@exp,c
  8871  0026D8  D7F5               	goto	l4415
  8872  0026DA                     u5570:
  8873  0026DA  A00A               	btfss	___xxtofl@exp,0,c
  8874  0026DC  9E0D               	bcf	___xxtofl@arg+2,7,c
  8875  0026DE  90D8               	bcf	status,0,c
  8876  0026E0  320A               	rrcf	___xxtofl@exp,f,c
  8877  0026E2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8878  0026E6  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  8879  0026E8  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  8880  0026EA  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  8881  0026EC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8882  0026F0  6A07               	clrf	??___xxtofl+2,c
  8883  0026F2  6A06               	clrf	??___xxtofl+1,c
  8884  0026F4  6A05               	clrf	??___xxtofl,c
  8885  0026F6  5005               	movf	??___xxtofl,w,c
  8886  0026F8  120B               	iorwf	___xxtofl@arg,f,c
  8887  0026FA  5006               	movf	??___xxtofl+1,w,c
  8888  0026FC  120C               	iorwf	___xxtofl@arg+1,f,c
  8889  0026FE  5007               	movf	??___xxtofl+2,w,c
  8890  002700  120D               	iorwf	___xxtofl@arg+2,f,c
  8891  002702  5008               	movf	??___xxtofl+3,w,c
  8892  002704  120E               	iorwf	___xxtofl@arg+3,f,c
  8893  002706  5009               	movf	___xxtofl@sign,w,c
  8894  002708  A4D8               	btfss	status,2,c
  8895  00270A  AE04               	btfss	___xxtofl@val+3,7,c
  8896  00270C  D001               	goto	l4433
  8897  00270E  8E0E               	bsf	___xxtofl@arg+3,7,c
  8898  002710                     l4433:
  8899  002710  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8900  002714  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8901  002718  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8902  00271C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8903  002720  0012               	return		;funcret
  8904  002722                     __end_of___xxtofl:
  8905                           	opt callstack 0
  8906                           
  8907 ;; *************** function ___lmul *****************
  8908 ;; Defined at:
  8909 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  multiplier      4    0[COMRAM] unsigned long 
  8912 ;;  multiplicand    4    4[COMRAM] unsigned long 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  product         4    8[COMRAM] unsigned long 
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  4    0[COMRAM] unsigned long 
  8917 ;; Registers used:
  8918 ;;		wreg, status,2, status,0
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8924 ;;      Params:         8       0       0       0       0       0       0
  8925 ;;      Locals:         4       0       0       0       0       0       0
  8926 ;;      Temps:          0       0       0       0       0       0       0
  8927 ;;      Totals:        12       0       0       0       0       0       0
  8928 ;;Total ram usage:       12 bytes
  8929 ;; Hardware stack levels used:    1
  8930 ;; This function calls:
  8931 ;;		Nothing
  8932 ;; This function is called by:
  8933 ;;		_main
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text40
  8938  0031A4                     __ptext40:
  8939                           	opt callstack 0
  8940  0031A4                     ___lmul:
  8941                           	opt callstack 30
  8942                           
  8943                           ;incstack = 0
  8944  0031A4  0E00               	movlw	0
  8945  0031A6  6E09               	movwf	___lmul@product,c
  8946  0031A8  0E00               	movlw	0
  8947  0031AA  6E0A               	movwf	___lmul@product+1,c
  8948  0031AC  0E00               	movlw	0
  8949  0031AE  6E0B               	movwf	___lmul@product+2,c
  8950  0031B0  0E00               	movlw	0
  8951  0031B2  6E0C               	movwf	___lmul@product+3,c
  8952  0031B4                     l4339:
  8953  0031B4  A001               	btfss	___lmul@multiplier,0,c
  8954  0031B6  D008               	goto	l4343
  8955  0031B8  5005               	movf	___lmul@multiplicand,w,c
  8956  0031BA  2609               	addwf	___lmul@product,f,c
  8957  0031BC  5006               	movf	___lmul@multiplicand+1,w,c
  8958  0031BE  220A               	addwfc	___lmul@product+1,f,c
  8959  0031C0  5007               	movf	___lmul@multiplicand+2,w,c
  8960  0031C2  220B               	addwfc	___lmul@product+2,f,c
  8961  0031C4  5008               	movf	___lmul@multiplicand+3,w,c
  8962  0031C6  220C               	addwfc	___lmul@product+3,f,c
  8963  0031C8                     l4343:
  8964  0031C8  90D8               	bcf	status,0,c
  8965  0031CA  3605               	rlcf	___lmul@multiplicand,f,c
  8966  0031CC  3606               	rlcf	___lmul@multiplicand+1,f,c
  8967  0031CE  3607               	rlcf	___lmul@multiplicand+2,f,c
  8968  0031D0  3608               	rlcf	___lmul@multiplicand+3,f,c
  8969  0031D2  90D8               	bcf	status,0,c
  8970  0031D4  3204               	rrcf	___lmul@multiplier+3,f,c
  8971  0031D6  3203               	rrcf	___lmul@multiplier+2,f,c
  8972  0031D8  3202               	rrcf	___lmul@multiplier+1,f,c
  8973  0031DA  3201               	rrcf	___lmul@multiplier,f,c
  8974  0031DC  5001               	movf	___lmul@multiplier,w,c
  8975  0031DE  1002               	iorwf	___lmul@multiplier+1,w,c
  8976  0031E0  1003               	iorwf	___lmul@multiplier+2,w,c
  8977  0031E2  1004               	iorwf	___lmul@multiplier+3,w,c
  8978  0031E4  A4D8               	btfss	status,2,c
  8979  0031E6  D7E6               	goto	l4339
  8980  0031E8  C009  F001         	movff	___lmul@product,?___lmul
  8981  0031EC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  8982  0031F0  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  8983  0031F4  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  8984  0031F8  0012               	return		;funcret
  8985  0031FA                     __end_of___lmul:
  8986                           	opt callstack 0
  8987                           
  8988 ;; *************** function ___aldiv *****************
  8989 ;; Defined at:
  8990 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  dividend        4   12[COMRAM] long 
  8993 ;;  divisor         4   16[COMRAM] long 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  quotient        4   22[COMRAM] long 
  8996 ;;  sign            1   21[COMRAM] unsigned char 
  8997 ;;  counter         1   20[COMRAM] unsigned char 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  4   12[COMRAM] long 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9007 ;;      Params:         8       0       0       0       0       0       0
  9008 ;;      Locals:         6       0       0       0       0       0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0
  9010 ;;      Totals:        14       0       0       0       0       0       0
  9011 ;;Total ram usage:       14 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text41
  9021  002B56                     __ptext41:
  9022                           	opt callstack 0
  9023  002B56                     ___aldiv:
  9024                           	opt callstack 30
  9025                           
  9026                           ;incstack = 0
  9027  002B56  0E00               	movlw	0
  9028  002B58  6E16               	movwf	___aldiv@sign,c
  9029  002B5A  AE14               	btfss	___aldiv@divisor+3,7,c
  9030  002B5C  D00A               	goto	l4355
  9031  002B5E  1E14               	comf	___aldiv@divisor+3,f,c
  9032  002B60  1E13               	comf	___aldiv@divisor+2,f,c
  9033  002B62  1E12               	comf	___aldiv@divisor+1,f,c
  9034  002B64  6C11               	negf	___aldiv@divisor,c
  9035  002B66  0E00               	movlw	0
  9036  002B68  2212               	addwfc	___aldiv@divisor+1,f,c
  9037  002B6A  2213               	addwfc	___aldiv@divisor+2,f,c
  9038  002B6C  2214               	addwfc	___aldiv@divisor+3,f,c
  9039  002B6E  0E01               	movlw	1
  9040  002B70  6E16               	movwf	___aldiv@sign,c
  9041  002B72                     l4355:
  9042  002B72  AE10               	btfss	___aldiv@dividend+3,7,c
  9043  002B74  D00A               	goto	l4361
  9044  002B76  1E10               	comf	___aldiv@dividend+3,f,c
  9045  002B78  1E0F               	comf	___aldiv@dividend+2,f,c
  9046  002B7A  1E0E               	comf	___aldiv@dividend+1,f,c
  9047  002B7C  6C0D               	negf	___aldiv@dividend,c
  9048  002B7E  0E00               	movlw	0
  9049  002B80  220E               	addwfc	___aldiv@dividend+1,f,c
  9050  002B82  220F               	addwfc	___aldiv@dividend+2,f,c
  9051  002B84  2210               	addwfc	___aldiv@dividend+3,f,c
  9052  002B86  0E01               	movlw	1
  9053  002B88  1A16               	xorwf	___aldiv@sign,f,c
  9054  002B8A                     l4361:
  9055  002B8A  0E00               	movlw	0
  9056  002B8C  6E17               	movwf	___aldiv@quotient,c
  9057  002B8E  0E00               	movlw	0
  9058  002B90  6E18               	movwf	___aldiv@quotient+1,c
  9059  002B92  0E00               	movlw	0
  9060  002B94  6E19               	movwf	___aldiv@quotient+2,c
  9061  002B96  0E00               	movlw	0
  9062  002B98  6E1A               	movwf	___aldiv@quotient+3,c
  9063  002B9A  5011               	movf	___aldiv@divisor,w,c
  9064  002B9C  1012               	iorwf	___aldiv@divisor+1,w,c
  9065  002B9E  1013               	iorwf	___aldiv@divisor+2,w,c
  9066  002BA0  1014               	iorwf	___aldiv@divisor+3,w,c
  9067  002BA2  B4D8               	btfsc	status,2,c
  9068  002BA4  D02A               	goto	l4383
  9069  002BA6  0E01               	movlw	1
  9070  002BA8  6E15               	movwf	___aldiv@counter,c
  9071  002BAA  D006               	goto	l4369
  9072  002BAC                     l4367:
  9073  002BAC  90D8               	bcf	status,0,c
  9074  002BAE  3611               	rlcf	___aldiv@divisor,f,c
  9075  002BB0  3612               	rlcf	___aldiv@divisor+1,f,c
  9076  002BB2  3613               	rlcf	___aldiv@divisor+2,f,c
  9077  002BB4  3614               	rlcf	___aldiv@divisor+3,f,c
  9078  002BB6  2A15               	incf	___aldiv@counter,f,c
  9079  002BB8                     l4369:
  9080  002BB8  AE14               	btfss	___aldiv@divisor+3,7,c
  9081  002BBA  D7F8               	goto	l4367
  9082  002BBC                     u5480:
  9083  002BBC  90D8               	bcf	status,0,c
  9084  002BBE  3617               	rlcf	___aldiv@quotient,f,c
  9085  002BC0  3618               	rlcf	___aldiv@quotient+1,f,c
  9086  002BC2  3619               	rlcf	___aldiv@quotient+2,f,c
  9087  002BC4  361A               	rlcf	___aldiv@quotient+3,f,c
  9088  002BC6  5011               	movf	___aldiv@divisor,w,c
  9089  002BC8  5C0D               	subwf	___aldiv@dividend,w,c
  9090  002BCA  5012               	movf	___aldiv@divisor+1,w,c
  9091  002BCC  580E               	subwfb	___aldiv@dividend+1,w,c
  9092  002BCE  5013               	movf	___aldiv@divisor+2,w,c
  9093  002BD0  580F               	subwfb	___aldiv@dividend+2,w,c
  9094  002BD2  5014               	movf	___aldiv@divisor+3,w,c
  9095  002BD4  5810               	subwfb	___aldiv@dividend+3,w,c
  9096  002BD6  A0D8               	btfss	status,0,c
  9097  002BD8  D009               	goto	l4379
  9098  002BDA  5011               	movf	___aldiv@divisor,w,c
  9099  002BDC  5E0D               	subwf	___aldiv@dividend,f,c
  9100  002BDE  5012               	movf	___aldiv@divisor+1,w,c
  9101  002BE0  5A0E               	subwfb	___aldiv@dividend+1,f,c
  9102  002BE2  5013               	movf	___aldiv@divisor+2,w,c
  9103  002BE4  5A0F               	subwfb	___aldiv@dividend+2,f,c
  9104  002BE6  5014               	movf	___aldiv@divisor+3,w,c
  9105  002BE8  5A10               	subwfb	___aldiv@dividend+3,f,c
  9106  002BEA  8017               	bsf	___aldiv@quotient,0,c
  9107  002BEC                     l4379:
  9108  002BEC  90D8               	bcf	status,0,c
  9109  002BEE  3214               	rrcf	___aldiv@divisor+3,f,c
  9110  002BF0  3213               	rrcf	___aldiv@divisor+2,f,c
  9111  002BF2  3212               	rrcf	___aldiv@divisor+1,f,c
  9112  002BF4  3211               	rrcf	___aldiv@divisor,f,c
  9113  002BF6  2E15               	decfsz	___aldiv@counter,f,c
  9114  002BF8  D7E1               	goto	u5480
  9115  002BFA                     l4383:
  9116  002BFA  5016               	movf	___aldiv@sign,w,c
  9117  002BFC  B4D8               	btfsc	status,2,c
  9118  002BFE  D008               	goto	l4387
  9119  002C00  1E1A               	comf	___aldiv@quotient+3,f,c
  9120  002C02  1E19               	comf	___aldiv@quotient+2,f,c
  9121  002C04  1E18               	comf	___aldiv@quotient+1,f,c
  9122  002C06  6C17               	negf	___aldiv@quotient,c
  9123  002C08  0E00               	movlw	0
  9124  002C0A  2218               	addwfc	___aldiv@quotient+1,f,c
  9125  002C0C  2219               	addwfc	___aldiv@quotient+2,f,c
  9126  002C0E  221A               	addwfc	___aldiv@quotient+3,f,c
  9127  002C10                     l4387:
  9128  002C10  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  9129  002C14  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  9130  002C18  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  9131  002C1C  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  9132  002C20  0012               	return		;funcret
  9133  002C22                     __end_of___aldiv:
  9134                           	opt callstack 0
  9135                           
  9136                           	psect	rparam
  9137  0000                     tosu	equ	0xFFF
  9138                           tosh	equ	0xFFE
  9139                           tosl	equ	0xFFD
  9140                           stkptr	equ	0xFFC
  9141                           pclatu	equ	0xFFB
  9142                           pclath	equ	0xFFA
  9143                           pcl	equ	0xFF9
  9144                           tblptru	equ	0xFF8
  9145                           tblptrh	equ	0xFF7
  9146                           tblptrl	equ	0xFF6
  9147                           tablat	equ	0xFF5
  9148                           prodh	equ	0xFF4
  9149                           prodl	equ	0xFF3
  9150                           indf0	equ	0xFEF
  9151                           postinc0	equ	0xFEE
  9152                           postdec0	equ	0xFED
  9153                           preinc0	equ	0xFEC
  9154                           plusw0	equ	0xFEB
  9155                           fsr0h	equ	0xFEA
  9156                           fsr0l	equ	0xFE9
  9157                           wreg	equ	0xFE8
  9158                           indf1	equ	0xFE7
  9159                           postinc1	equ	0xFE6
  9160                           postdec1	equ	0xFE5
  9161                           preinc1	equ	0xFE4
  9162                           plusw1	equ	0xFE3
  9163                           fsr1h	equ	0xFE2
  9164                           fsr1l	equ	0xFE1
  9165                           bsr	equ	0xFE0
  9166                           indf2	equ	0xFDF
  9167                           postinc2	equ	0xFDE
  9168                           postdec2	equ	0xFDD
  9169                           preinc2	equ	0xFDC
  9170                           plusw2	equ	0xFDB
  9171                           fsr2h	equ	0xFDA
  9172                           fsr2l	equ	0xFD9
  9173                           status	equ	0xFD8


Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    126     126
    BANK0           128     92     118
    BANK1           256      0      96
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[9]), STR_3(CODE[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 10
		 -> vfpfcnvrt@ct(BANK0[3]), STR_4(CODE[9]), STR_3(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1033_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_4(CODE[9]), STR_3(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_escreve_bf@str	PTR unsigned char  size(2) Largest target is 16
		 -> bufferLCD(BANK1[16]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_ini->_lcd_cmd
    _lcd_escreve_bf->_lcd_envia_byte
    _lcd_envia_byte->_lcd_cmd
    _lcd_cmd->_set_bit
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   47246
                                             90 BANK0      2     2      0
                            ___aldiv
                            ___fldiv
                            ___flmul
                             ___lmul
                           ___xxtofl
                     _lcd_escreve_bf
                            _lcd_ini
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   38548
                                            116 COMRAM    10     0     10
                                             80 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38031
                                            108 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           52    46      6   37631
                                             96 COMRAM    12     6      6
                                             56 BANK0     24    24      0
                               _atoi
                               _ctoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4823
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     681
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22453
                                             84 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3841
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3621
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_escreve_bf                                       5     2      3    1789
                                              6 COMRAM     5     2      3
                     _lcd_envia_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_envia_byte                                       2     1      1    1024
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___lmul
   ___xxtofl
   _lcd_escreve_bf
     _lcd_envia_byte
       _lcd_cmd
         _set_bit
   _lcd_ini
     _lcd_cmd
       _set_bit
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      60       7       37.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     5C      76       5       92.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7E      7E       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     154      15        0.0%
DATA                 0      0     154       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 10:53:07 2019

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l34 1F7C                       l37 204C             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l122 2E5A                      l230 230E  
                    l232 2316                      l170 0974                      l196 0C56  
                    l564 2980                      l913 16BA                      l737 2A68  
                    l930 1958                      l922 18D2                      l923 18CE  
                    l747 2D68                      l844 1BA0                      l828 1ACE  
                    l853 1C06                      l829 1AAC                      l854 1C02  
                    l961 269E                      l954 2620                      l883 1E0A  
                    l894 1E78                      l895 1E74             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      _adc 00F4                      _pad 2E2A  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0020  
           ___flmul@bexp 0021             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             __CFG_LVP$OFF 000000             ___fltol@exp1 000A  
           __CFG_WDT$OFF 000000                     l1021 2250                     l1101 3330  
                   l1009 25D8                     l3001 1BDA                     l3007 1BE4  
                   l3041 1C7C                     l4003 24B4                     l3035 1C72  
                   l3027 1C4C                     l3115 21B2                     l4021 2516  
                   l4013 24FE                     l4005 24B8                     l3061 2E64  
                   l3205 1D6A                     l3301 167A                     l3133 22DE  
                   l3125 2272                     l4101 1010                     l4023 251C  
                   l3055 2E44                     l3223 1DE2                     l3215 1DBA  
                   l3039 1C7A                     l4025 2544                     l3065 2E7C  
                   l3241 1E3E                     l3081 2B02                     l3129 22B0  
                   l4113 101C                     l4105 1014                     l4019 250E  
                   l3059 2E52                     l3235 1E20                     l3163 1CC8  
                   l3315 16A6                     l3091 2B4C                     l4051 275A  
                   l4131 10D4                     l4029 2578                     l3069 2EAA  
                   l3261 1EBC                     l3229 1E08                     l3325 16D8  
                   l3317 16AA                     l3085 2B0C                     l4133 10F2  
                   l4117 1026                     l4109 1018                     l3191 1D3C  
                   l3183 1D08                     l3159 1CC4                     l4223 15A8  
                   l4215 1528                     l4207 148C                     l4151 11CA  
                   l4135 1100                     l4119 1068                     l4313 3070  
                   l3441 3018                     l3265 1EE0                     l3513 2FDA  
                   l3505 2F88                     l3521 2920                     l3409 1976  
                   l3097 325C                     l4049 274C                     l4233 15EE  
                   l4153 11E8                     l4403 264E                     l4323 30B6  
                   l3443 3020                     l3435 3002                     l3275 1F16  
                   l3179 1D04                     l4171 12D0                     l4155 11F6  
                   l4405 2654                     l4317 307E                     l3461 3058  
                   l3453 3040                     l3429 2FF2                     l3277 1F18  
                   l3269 1F0A                     l3197 1D52                     l3509 2FBC  
                   l3525 2954                     l3373 1898                     l4229 15E4  
                   l4093 0FFA                     l4343 31C8                     l4415 26C4  
                   l4407 2660                     l4319 308A                     l3535 29B8  
                   l3367 187A                     l3543 3472                     l3711 0754  
                   l4191 13BC                     l4095 0FFC                     l4239 1606  
                   l4361 2B8A                     l4433 2710                     l4417 26D0  
                   l4409 2686                     l2833 33DE                     l3457 304A  
                   l3481 310C                     l3473 30F2                     l3529 296A  
                   l3393 1916                     l3297 1666                     l3553 2C40  
                   l3801 0A22                     l3609 2A52                     l3625 2D52  
                   l3617 2CF6                     l4097 100C                     l4265 3162  
                   l4355 2B72                     l4339 31B4                     l2819 2DA2  
                   l3483 3114                     l3299 166A                     l3707 0732  
                   l3715 077A                     l3619 2D0A                     l4187 1392  
                   l4179 1336                     l4267 3188                     l3637 33B6  
                   l2829 33C8                     l2837 348E                     l3493 3136  
                   l3477 30FE                     l3397 1934                     l2941 1ABE  
                   l2861 19B8                     l3581 2CAE                     l3573 2C9A  
                   l3725 07E6                     l3733 0800                     l3709 074A  
                   l4445 1F54                     ?_pad 0011                     l4367 2BAC  
                   l4383 2BFA                     l4287 2EE8                     l2839 3492  
                   l2927 1A60                     l3823 0BB8                     l3807 0A4C  
                   l3815 0B42                     l3743 087E                     l4369 2BB8  
                   l3649 3524                     l3657 32B2                     l3497 3144  
                   l3489 312C                     l2865 19BC                     l3569 2C8A  
                   l3761 095C                     l3745 08CC                     l4387 2C10  
                   l4379 2BEC                     l3659 32BE                     l2963 1B14  
                   l2955 1AF2                     l2939 1ABA                     l3587 2CCA  
                   l3579 2CA2                     l3915 0E8A                     l3851 0CF2  
                   l3771 0984                     l3739 0844                     l4397 2630  
                   l2965 1B18                     l2973 1B2A                     l2885 1A00  
                   l3917 0E94                     l3837 0C4E                     l3829 0BF6  
                   l3781 09D0                     l3765 097E                     l3749 0908  
                   l3677 0682                     l3597 29E2                     l2991 1BC4  
                   l2983 1B90                     l3927 0EEA                     l3863 0D20  
                   l3871 0D40                     l3839 0C70                     l3791 09EE  
                   l3599 29F6                     l2897 1A24                     l2889 1A04  
                   l3953 0F76                     l3937 0F16                     l3689 06B0  
                   l3697 06C6                     l3779 09CC                     l3797 0A12  
                   l3879 0D64                     l3887 0DFC                     l3977 234E  
                   l3899 0E3E                     l3987 243A                     STR_1 0614  
                   STR_2 061A                     STR_3 0601                     STR_4 060B  
                   STR_5 0620                     STR_6 0628                     STR_9 0624  
                   u3000 1A92                     u3010 1A94                     u3040 1AD6  
                   u4020 3024                     u5000 25A8                     u4200 2C2E  
                   u3400 3294                     u5010 25AA                     u4130 2FD6  
                   u3250 1C58                     u3170 1BE8                     u4210 2C5E  
                   u3330 2AC8                     u3500 2230                     u3420 3316  
                   u5100 27EE                     u3190 1BFC                     u3430 3318  
                   u4215 2C54                     u3335 2ABE                     u3407 328A  
                   u4080 3118                     u3520 2290                     u4400 06A0  
                   u4320 2D0E                     u3505 2226                     u4250 2CB4  
                   u3450 2180                     u5050 277A                     u5210 122E  
                   u5107 27E4                     u3380 2B44                     u3460 21A0  
                   u5300 1440                     u5220 1230                     u3525 2286  
                   u3550 344E                     u4350 33B2                     u2830 2D9A  
                   u3390 2B46                     u4430 0708                     u5230 123E  
                   u3375 2B26                     u3455 2176                     u4271 29C2  
                   u5400 30AA                     u3560 3450                     u4520 0930  
                   u4440 070A                     u5160 1138                     u5057 2770  
                   u5410 30D6                     u2850 2DE2                     u3730 1E6E  
                   u5090 27CE                     u4290 29FA                     u5170 113A  
                   u4620 09EA                     u5180 1148                     u3485 21CA  
                   u3486 21D0                     u4550 096A                     u4470 07BC  
                   u5407 30A0                     u3487 21DE                     u5095 27C8  
                   u3920 18C8                     u2880 341E                     u4480 07BE  
                   u5417 30CC                     u5097 27BE                     u3770 1ECA  
                   u2890 3420                     u5290 143E                     u5355 3500  
                   u5356 3502                     u3780 1EEE                     u4580 099C  
                   u3870 16C6                     u2990 1A82                     u4910 2304  
                   u5480 2BBC                     u3960 1924                     u3880 183C  
                   u5570 26DA                     u3970 1942                     u4850 0F00  
                   u5707 2F2C                     u4940 2464                     u5717 2F3E  
                   u3885 1832                     u4941 2462                     u5637 1F60  
                   u4870 0F60                     u4790 0E20                     u4950 2472  
                   u5727 2F4C                     u5647 1F74                     u4880 0F62  
                   u4960 2478                     u5737 3504                     u5657 2044  
                   u5747 2878                     u5667 2EDA                     u4980 24FA  
                   u5677 2EF4                     u5687 2F0C                     u5697 2F1A  
           __CFG_PWRT$ON 000000                     _dbuf 0100                     _atoi 24A2  
                   _ctoa 329E                     _main 1F20                     _prec 00F0  
                   _temp 00E4                     _nout 00EC                     pad@i 0018  
                   pad@p 0015                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf1 000FE7                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001A                     fsr2l 000FD9                     _utoa 22F0  
                   _volt 00E8            ___fpclassifyf 2A8A                     prodh 000FF4  
                   prodl 000FF3                     start 0000            __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 0039             _tolower$1105 000D            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_pad 0017            ___fltol@sign1 0009  
        __end_of___aldiv 2C22                    ?_atoi 0008                    ?_ctoa 001C  
        __end_of___fladd 1C98                    ?_main 0001          __end_of___fldiv 1F20  
        __end_of___awdiv 3062          __end_of___flneg 3484                    STR_10 062C  
                  STR_20 0633                    STR_13 0630                    STR_15 0630  
                  STR_18 0633          __end_of___awmod 314E          __end_of___flmul 198C  
        __end_of___flsub 3380          __end_of___fltol 2CDC                    ?_utoa 001C  
        __end_of___lodiv 2A8A          ___awdiv@divisor 0003          __end_of___lomod 2D8A  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 0063             vfpfcnvrt@llu 00C0  
                  _PORTD 000F83                    _TRISD 000F95            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0005  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_lcd_cmd 28EC          __end_of_lcd_ini 2F54            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _flags 00F2                    _fputc 2D8A                    _fputs 33BE  
        __end_of_isdigit 3456                    atoi@n 0015                    pad@fp 0011  
                  atoi@s 0008                    _width 00EE                    ctoa@c 001E  
                  _putch 3528                    ctoa@w 001F          __end_of_isspace 33BE  
         __CFG_BOREN$OFF 000000          __end_of_set_bit 3528          __end_of_isupper 3426  
                  tablat 000FF5                    utoa@d 001E                    utoa@i 003A  
                  utoa@n 0032                    utoa@p 002E                    utoa@w 0030  
                  status 000FD8          __end_of_sprintf 324C           ?___fpclassifyf 0001  
        __end_of_tolower 333A          __end_of_strncmp 2808         ___lodiv@dividend 0001  
        __initialization 34D4             __end_of_atoi 25E2             __end_of_ctoa 32EE  
           __end_of_main 213A             __end_of_utoa 24A2                   ??_atoi 000A  
                 ??_ctoa 001F                   ??_main 00DA                   ??_utoa 0026  
          __activetblptr 000002         ___lodiv@quotient 0011                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   ?_putch 0001            vfpfcnvrt@done 00B8  
       __end_of___xxtofl 2722           __CFG_XINST$OFF 000000             vfprintf@cfmt 0073  
                 ___flge 28EC                   ___fleq 2F54                   ___lmul 31A4  
              ??___aldiv 0015                ??___fladd 0009                   ___wmul 34AE  
              ??___fldiv 0030                ??___awdiv 0005                ??___flneg 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??___flmul 0017  
              ??___flsub 0030                ??___fltol 0005                ??___lodiv 0011  
              ??___lomod 0011                   _efgtoa 0638                   _floorf 213A  
       ??_lcd_escreve_bf 000A                   clear_0 34DA                   clear_1 34E6  
       ___awdiv@quotient 0007          ___awmod@divisor 0003         ??_lcd_envia_byte 0006  
        ___awmod@counter 0005                   pad@buf 0013                   ctoa@fp 001C  
              ??_lcd_cmd 0003                ??_lcd_ini 0005                   _strcpy 324C  
                 _strlen 3484                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                ??_set_bit 0002  
                 tblptrh 000FF7                ??_isupper 0003                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 31A4  
                 utoa@fp 001C                ??_sprintf 007F                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 0028               ___flge@ff2 002C  
        ??___fpclassifyf 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0080  __end_of__initialization 34EC          __CFG_PBADEN$OFF 000000  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 2E2A            __end_of_fputs 33F6  
          __end_of_putch 352A                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00DC               __pbssBANK1 0100  
             _efgtoa$474 0084               _efgtoa$483 008A               _efgtoa$475 0086  
             _efgtoa$484 008C               _efgtoa$485 008E               _efgtoa$479 0088  
                ?___flge 0028                  ?___fleq 0001                  ?___lmul 0001  
                ?___wmul 0001                  ?_efgtoa 0055                  ?_floorf 0041  
         ___lmul@product 0009                  ?_strcpy 0001                  ?_strlen 0001  
              ?___xxtofl 0001       __size_of_vfpfcnvrt 0686         ___lomod@dividend 0001  
                __Hparam 0000                  __Lparam 0000                  ___aldiv 2B56  
        __size_of___flge 00D0          __size_of___fleq 008A                  ___fladd 198C  
                ___fldiv 1C98                  ___awdiv 2FDE                  ___flneg 3456  
        __size_of___lmul 0056                  ___awmod 30DE                  ___flmul 163A  
                ___flsub 333A                  ___fltol 2C22          __size_of___wmul 0026  
                ___lodiv 29BC                  ___lomod 2CDC                ?_vfprintf 006D  
            set_bit@comp 0001             __psmallconst 0600          __size_of_efgtoa 097C  
        __size_of_floorf 01B6                  __pcinit 34D4                  __ramtop 0600  
                __ptext0 1F20                  __ptext1 31FA                  __ptext2 314E  
                __ptext3 0FB4                  __ptext4 22F0                  __ptext5 2CDC  
                __ptext6 29BC                  __ptext7 2722                  __ptext8 0638  
                __ptext9 32EE                  _lcd_cmd 2808                  _lcd_ini 2EC4  
        __size_of_strcpy 0052          __size_of_strlen 002A             __size_of_pad 009A  
                _isdigit 3426               ??___xxtofl 0005         ___awmod@dividend 0001  
       ___aldiv@dividend 000D                  _isspace 3380                  _set_bit 3514  
                _isupper 33F6                  efgtoa@c 005B                  efgtoa@d 0098  
                efgtoa@e 00B0                  efgtoa@f 0057                  efgtoa@g 00AC  
                efgtoa@h 00A2                  efgtoa@i 00AA                  efgtoa@l 00A6  
                efgtoa@m 0094                  efgtoa@n 00B2                  efgtoa@p 009C  
                efgtoa@t 0090                  efgtoa@u 00B4                  efgtoa@w 009F  
                atoi@neg 000E                  _sprintf 31FA                  _tolower 32EE  
                _strncmp 2722     end_of_initialization 34EC                  floorf@e 004F  
                floorf@m 004B                  floorf@u 0051                  floorf@x 0041  
     lcd_envia_byte@dado 0005                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 163A               efgtoa@mode 00A1  
             efgtoa@sign 009A         ___aldiv@quotient 0017                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0073                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001                _PORTDbits 000F83  
              _PORTEbits 000F84              ___fladd@grs 0010            ___xxtofl@sign 0009  
              _TRISEbits 000F96               lcd_cmd@cmd 0004              ___fldiv@grs 003B  
            ___fldiv@rem 0034              ___flmul@grs 001C           __end_of___flge 29BC  
         __end_of___fleq 2FDE           __end_of___lmul 31FA              vfpfcnvrt@ap 0065  
            vfpfcnvrt@ct 00CC              vfpfcnvrt@fp 0061           __end_of___wmul 34D4  
         __end_of_efgtoa 0FB4           __end_of_floorf 22F0               floorf@F524 00DC  
         __end_of_strcpy 329E           __end_of_strlen 34AE      start_initialization 34D4  
        ___lodiv@divisor 0009          ___lodiv@counter 0019              __end_of_pad 2EC4  
  __end_of___fpclassifyf 2B56              vfprintf@fmt 006F                 ??___flge 0030  
               ??___fleq 0009                 ??___lmul 0009                 ??___wmul 0005  
               ??_efgtoa 005C                 ??_floorf 0045         __CFG_LPT1OSC$OFF 000000  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 002C                ___fldiv@b 0028  
              ___flmul@a 0013                ___flmul@b 000F                ___flsub@a 002C  
              ___flsub@b 0028            __pcstackBANK0 0080  __size_of_lcd_escreve_bf 007C  
      __size_of___xxtofl 0140  __size_of_lcd_envia_byte 001E        __CFG_CCP2MX$PORTC 000000  
               ?___aldiv 000D                 ?___fladd 0001        lcd_escreve_bf@end 000A  
      lcd_escreve_bf@col 0007                 ?___fldiv 0028                 ?___awdiv 0001  
      lcd_escreve_bf@lin 000B                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0028        lcd_escreve_bf@str 0008  
               ?___fltol 0001                 ?___lodiv 0001                 ?___lomod 0001  
              _bufferLCD 0150                 ?_lcd_cmd 0001        __size_of_vfprintf 0056  
               ?_lcd_ini 0001          ___lomod@divisor 0009              __smallconst 0600  
        ___lomod@counter 0011                 ?_isdigit 0001                 ?_isspace 0001  
               ?_set_bit 0001                 ?_isupper 0001               set_bit@cmd 0002  
               ?_sprintf 0075                 ?_tolower 0007           __size_of_fputc 00A0  
         __size_of_fputs 0038                 ?_strncmp 0001           __size_of_putch 0002  
        ___aldiv@divisor 0011          ___aldiv@counter 0015           ___wmul@product 0005  
       __CFG_WDTPS$32768 000000                _vfpfcnvrt 0FB4               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001             _isspace$1020 0007               vfpfcnvrt@c 00CF  
             vfpfcnvrt@f 00C8        ___lmul@multiplier 0001                 __Hrparam 0000  
             vfprintf@ap 0071                 __Lrparam 0000               vfprintf@fp 006D  
       __size_of___aldiv 00CC         __size_of___fladd 030C         __size_of___fldiv 0288  
       __size_of___awdiv 0084         __size_of___flneg 002E         __size_of___awmod 0070  
       __size_of___flmul 0352         __size_of___flsub 0046         __size_of___fltol 00BA  
       __size_of___lodiv 00CE         __size_of___lomod 00AE               ?_vfpfcnvrt 0061  
     ___fpclassifyf@F463 00E0         __size_of_lcd_cmd 00E4         __size_of_lcd_ini 0090  
             sprintf@fmt 0077                 ___xxtofl 25E2                 _atoi$990 0014  
               _atoi$991 0012                 _atoi$989 0010         __size_of_isdigit 0030  
         _lcd_escreve_bf 3062         __size_of_isspace 003E                 __ptext10 33F6  
               __ptext11 324C                 __ptext20 2F54                 __ptext12 213A  
               __ptext21 1C98                 __ptext13 2A8A                 __ptext30 24A2  
               __ptext22 30DE                 __ptext14 2C22                 __ptext31 3380  
               __ptext23 2FDE                 __ptext15 333A                 __ptext40 31A4  
               __ptext32 3426                 __ptext24 329E                 __ptext16 198C  
               __ptext41 2B56                 __ptext33 34AE                 __ptext25 2E2A  
               __ptext17 3456                 __ptext34 2EC4                 __ptext26 3484  
               __ptext18 163A                 __ptext35 3062                 __ptext27 33BE  
               __ptext19 28EC                 __ptext36 34F6                 __ptext28 2D8A  
               __ptext37 2808                 __ptext29 3528                 __ptext38 3514  
               __ptext39 25E2         __size_of_set_bit 0014         __size_of_isupper 0030  
         _lcd_envia_byte 34F6         __size_of_sprintf 0052         __size_of_tolower 004C  
             strcpy@dest 0001         __size_of_strncmp 00E6            __size_of_atoi 0140  
          __size_of_ctoa 0050            __size_of_main 021A            __size_of_utoa 01B2  
               efgtoa@fp 0055                 efgtoa@ne 0096                 efgtoa@pp 0092  
               efgtoa@ou 0080                 lcd_ini@i 0006                 _vfprintf 314E  
 __end_of_lcd_escreve_bf 30DE   __end_of_lcd_envia_byte 3514      lcd_envia_byte@nivel 0006  
               isdigit@c 0001                sprintf@ap 00D2                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 009E              ??_vfpfcnvrt 0067  
          _vfpfcnvrt$512 00BE            _vfpfcnvrt$506 00BA            _vfpfcnvrt$507 00BC  
               sprintf@f 00D4                 tolower@c 0007                 sprintf@s 0075  
 __size_of___fpclassifyf 00CC          ?_lcd_escreve_bf 0007          ?_lcd_envia_byte 0005  
               strncmp@l 0008                 strncmp@n 0005                 strncmp@r 000A  
           ___aldiv@sign 0016            ___fladd@signs 000D             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
