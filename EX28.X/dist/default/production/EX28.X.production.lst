

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 28 15:25:32 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4520 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   0003DC                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _digito
    63   0003DC  003F               	dw	63
    64   0003DE  0006               	dw	6
    65   0003E0  005B               	dw	91
    66   0003E2  004F               	dw	79
    67   0003E4  0066               	dw	102
    68   0003E6  006D               	dw	109
    69   0003E8  007D               	dw	125
    70   0003EA  0007               	dw	7
    71   0003EC  007F               	dw	127
    72   0003EE  006F               	dw	111
    73   000000                     _INTCON	set	4082
    74   000000                     _PORTE	set	3972
    75   000000                     _PORTD	set	3971
    76   000000                     _TMR0IF	set	32658
    77   000000                     _TMR0	set	4054
    78   000000                     _TRISD	set	3989
    79   000000                     _TRISE	set	3990
    80   000000                     _ADCON1	set	4033
    81   000000                     _PORTEbits	set	3972
    82   000000                     _T0CON	set	4053
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87   0003A2                     __pcinit:
    88                           	callstack 0
    89   0003A2                     start_initialization:
    90                           	callstack 0
    91   0003A2                     __initialization:
    92                           	callstack 0
    93                           
    94                           ; Initialize objects allocated to COMRAM (20 bytes)
    95                           ; load TBLPTR registers with __pidataCOMRAM
    96   0003A2  0EDC               	movlw	low __pidataCOMRAM
    97   0003A4  6EF6               	movwf	tblptrl,c
    98   0003A6  0E03               	movlw	high __pidataCOMRAM
    99   0003A8  6EF7               	movwf	tblptrh,c
   100   0003AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   101   0003AC  6EF8               	movwf	tblptru,c
   102   0003AE  EE00  F01E         	lfsr	0,__pdataCOMRAM
   103   0003B2  EE10 F014          	lfsr	1,20
   104   0003B6                     copy_data0:
   105   0003B6  0009               	tblrd		*+
   106   0003B8  CFF5 FFEE          	movff	tablat,postinc0
   107   0003BC  50E5               	movf	postdec1,w,c
   108   0003BE  50E1               	movf	fsr1l,w,c
   109   0003C0  E1FA               	bnz	copy_data0
   110                           
   111                           ; Clear objects allocated to COMRAM (12 bytes)
   112   0003C2  EE00  F032         	lfsr	0,__pbssCOMRAM
   113   0003C6  0E0C               	movlw	12
   114   0003C8                     clear_0:
   115   0003C8  6AEE               	clrf	postinc0,c
   116   0003CA  06E8               	decf	wreg,f,c
   117   0003CC  E1FD               	bnz	clear_0
   118   0003CE                     end_of_initialization:
   119                           	callstack 0
   120   0003CE                     __end_of__initialization:
   121                           	callstack 0
   122   0003CE  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   123   0003D0  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   124   0003D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   125   0003D4  6EF8               	movwf	tblptru,c
   126   0003D6  0100               	movlb	0
   127   0003D8  EF3D  F001         	goto	_main	;jump to C main() function
   128                           
   129                           	psect	bssCOMRAM
   130   000032                     __pbssCOMRAM:
   131                           	callstack 0
   132   000032                     _dig4:
   133                           	callstack 0
   134   000032                     	ds	2
   135   000034                     _dig3:
   136                           	callstack 0
   137   000034                     	ds	2
   138   000036                     _dig2:
   139                           	callstack 0
   140   000036                     	ds	2
   141   000038                     _dig1:
   142                           	callstack 0
   143   000038                     	ds	2
   144   00003A                     _conta:
   145                           	callstack 0
   146   00003A                     	ds	2
   147   00003C                     _sel_digito:
   148                           	callstack 0
   149   00003C                     	ds	2
   150                           
   151                           	psect	dataCOMRAM
   152   00001E                     __pdataCOMRAM:
   153                           	callstack 0
   154   00001E                     _digito:
   155                           	callstack 0
   156   00001E                     	ds	20
   157                           
   158                           	psect	cstackCOMRAM
   159   000001                     __pcstackCOMRAM:
   160                           	callstack 0
   161   000001                     escreve_7seg@num:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x0
   165   000001                     	ds	2
   166   000003                     ??_escreve_7seg:
   167                           
   168                           ; 1 bytes @ 0x2
   169   000003                     	ds	2
   170   000005                     escreve_7seg@j:
   171                           	callstack 0
   172                           
   173                           ; 2 bytes @ 0x4
   174   000005                     	ds	2
   175   000007                     ??_int_TMR0:
   176                           
   177                           ; 1 bytes @ 0x6
   178   000007                     	ds	7
   179   00000E                     ?___lwdiv:
   180                           	callstack 0
   181   00000E                     ___lwdiv@dividend:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0xD
   185   00000E                     	ds	2
   186   000010                     ___lwdiv@divisor:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0xF
   190   000010                     	ds	2
   191   000012                     ___lwdiv@quotient:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x11
   195   000012                     	ds	2
   196   000014                     ___lwdiv@counter:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x13
   200   000014                     	ds	1
   201   000015                     ?___lwmod:
   202                           	callstack 0
   203   000015                     ___lwmod@dividend:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x14
   207   000015                     	ds	2
   208   000017                     ___lwmod@divisor:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x16
   212   000017                     	ds	2
   213   000019                     ___lwmod@counter:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x18
   217   000019                     	ds	1
   218   00001A                     seleciona_7seg@dig:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x19
   222   00001A                     	ds	2
   223   00001C                     ??_main:
   224                           
   225                           ; 1 bytes @ 0x1B
   226   00001C                     	ds	2
   227                           
   228 ;;
   229 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   230 ;;
   231 ;; *************** function _main *****************
   232 ;; Defined at:
   233 ;;		line 97 in file "EX28.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, status,0, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   247 ;;      Params:         0       0       0       0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0
   249 ;;      Temps:          2       0       0       0       0       0       0
   250 ;;      Totals:         2       0       0       0       0       0       0
   251 ;;Total ram usage:        2 bytes
   252 ;; Hardware stack levels required when called: 4
   253 ;; This function calls:
   254 ;;		_seleciona_7seg
   255 ;; This function is called by:
   256 ;;		Startup code after reset
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text0
   261   00027A                     __ptext0:
   262                           	callstack 0
   263   00027A                     _main:
   264                           	callstack 27
   265   00027A                     
   266                           ;EX28.c: 99:     ADCON1 = 0x0F;
   267   00027A  0E0F               	movlw	15
   268   00027C  6EC1               	movwf	193,c	;volatile
   269                           
   270                           ;EX28.c: 100:     TRISE = 0b00000000;
   271   00027E  0E00               	movlw	0
   272   000280  6E96               	movwf	150,c	;volatile
   273                           
   274                           ;EX28.c: 101:     PORTE = 0b00000000;
   275   000282  0E00               	movlw	0
   276   000284  6E84               	movwf	132,c	;volatile
   277                           
   278                           ;EX28.c: 103:     TRISD = 0b00000000;
   279   000286  0E00               	movlw	0
   280   000288  6E95               	movwf	149,c	;volatile
   281                           
   282                           ;EX28.c: 105:     INTCON = 0b10100000;
   283   00028A  0EA0               	movlw	160
   284   00028C  6EF2               	movwf	242,c	;volatile
   285                           
   286                           ;EX28.c: 115:     T0CON = 0b11000101;
   287   00028E  0EC5               	movlw	197
   288   000290  6ED5               	movwf	213,c	;volatile
   289                           
   290                           ;EX28.c: 122:     TMR0 = 31;
   291   000292  0E00               	movlw	0
   292   000294  6ED7               	movwf	215,c	;volatile
   293   000296  0E1F               	movlw	31
   294   000298  6ED6               	movwf	214,c	;volatile
   295   00029A                     l956:
   296                           
   297                           ;EX28.c: 125:     {;EX28.c: 126:         conta++;
   298   00029A  4A3A               	infsnz	_conta^0,f,c
   299   00029C  2A3B               	incf	(_conta+1)^0,f,c
   300   00029E                     
   301                           ;EX28.c: 127:         if(conta>9999) conta = 0;
   302   00029E  0E10               	movlw	16
   303   0002A0  5C3A               	subwf	_conta^0,w,c
   304   0002A2  0E27               	movlw	39
   305   0002A4  583B               	subwfb	(_conta+1)^0,w,c
   306   0002A6  A0D8               	btfss	status,0,c
   307   0002A8  EF58  F001         	goto	u221
   308   0002AC  EF5A  F001         	goto	u220
   309   0002B0                     u221:
   310   0002B0  EF5E  F001         	goto	l962
   311   0002B4                     u220:
   312   0002B4  0E00               	movlw	0
   313   0002B6  6E3B               	movwf	(_conta+1)^0,c
   314   0002B8  0E00               	movlw	0
   315   0002BA  6E3A               	movwf	_conta^0,c
   316   0002BC                     l962:
   317                           
   318                           ;EX28.c: 128:         seleciona_7seg(conta);
   319   0002BC  C03A  F01A         	movff	_conta,seleciona_7seg@dig
   320   0002C0  C03B  F01B         	movff	_conta+1,seleciona_7seg@dig+1
   321   0002C4  ECB6  F000         	call	_seleciona_7seg	;wreg free
   322   0002C8                     
   323                           ;EX28.c: 130:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   324   0002C8  0E0B               	movlw	11
   325   0002CA  6E1D               	movwf	(??_main+1)^0,c
   326   0002CC  0E26               	movlw	38
   327   0002CE  6E1C               	movwf	??_main^0,c
   328   0002D0  0E5E               	movlw	94
   329   0002D2                     u237:
   330   0002D2  2EE8               	decfsz	wreg,f,c
   331   0002D4  D7FE               	bra	u237
   332   0002D6  2E1C               	decfsz	??_main^0,f,c
   333   0002D8  D7FC               	bra	u237
   334   0002DA  2E1D               	decfsz	(??_main+1)^0,f,c
   335   0002DC  D7FA               	bra	u237
   336   0002DE  EF4D  F001         	goto	l956
   337   0002E2  EFB4  F000         	goto	start
   338   0002E6                     __end_of_main:
   339                           	callstack 0
   340                           
   341 ;; *************** function _seleciona_7seg *****************
   342 ;; Defined at:
   343 ;;		line 85 in file "EX28.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;  dig             2   25[COMRAM] unsigned int 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   357 ;;      Params:         2       0       0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0
   360 ;;      Totals:         2       0       0       0       0       0       0
   361 ;;Total ram usage:        2 bytes
   362 ;; Hardware stack levels used: 1
   363 ;; Hardware stack levels required when called: 3
   364 ;; This function calls:
   365 ;;		___lwdiv
   366 ;;		___lwmod
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text1
   373   00016C                     __ptext1:
   374                           	callstack 0
   375   00016C                     _seleciona_7seg:
   376                           	callstack 27
   377   00016C                     
   378                           ;EX28.c: 85: void seleciona_7seg(unsigned int dig);EX28.c: 86: {;EX28.c: 87:     dig1 = 
      +                          (dig / 1000);
   379   00016C  C01A  F00E         	movff	seleciona_7seg@dig,___lwdiv@dividend
   380   000170  C01B  F00F         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   381   000174  0E03               	movlw	3
   382   000176  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   383   000178  0EE8               	movlw	232
   384   00017A  6E10               	movwf	___lwdiv@divisor^0,c
   385   00017C  EC03  F001         	call	___lwdiv	;wreg free
   386   000180  C00E  F038         	movff	?___lwdiv,_dig1
   387   000184  C00F  F039         	movff	?___lwdiv+1,_dig1+1
   388                           
   389                           ;EX28.c: 89:     dig2 = (dig / 100) % 10;
   390   000188  0E00               	movlw	0
   391   00018A  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   392   00018C  0E64               	movlw	100
   393   00018E  6E10               	movwf	___lwdiv@divisor^0,c
   394   000190  C01A  F00E         	movff	seleciona_7seg@dig,___lwdiv@dividend
   395   000194  C01B  F00F         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   396   000198  EC03  F001         	call	___lwdiv	;wreg free
   397   00019C  C00E  F015         	movff	?___lwdiv,___lwmod@dividend
   398   0001A0  C00F  F016         	movff	?___lwdiv+1,___lwmod@dividend+1
   399   0001A4  0E00               	movlw	0
   400   0001A6  6E18               	movwf	(___lwmod@divisor+1)^0,c
   401   0001A8  0E0A               	movlw	10
   402   0001AA  6E17               	movwf	___lwmod@divisor^0,c
   403   0001AC  EC73  F001         	call	___lwmod	;wreg free
   404   0001B0  C015  F036         	movff	?___lwmod,_dig2
   405   0001B4  C016  F037         	movff	?___lwmod+1,_dig2+1
   406                           
   407                           ;EX28.c: 91:     dig3 = (dig / 10) % 10;
   408   0001B8  0E00               	movlw	0
   409   0001BA  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   410   0001BC  0E0A               	movlw	10
   411   0001BE  6E10               	movwf	___lwdiv@divisor^0,c
   412   0001C0  C01A  F00E         	movff	seleciona_7seg@dig,___lwdiv@dividend
   413   0001C4  C01B  F00F         	movff	seleciona_7seg@dig+1,___lwdiv@dividend+1
   414   0001C8  EC03  F001         	call	___lwdiv	;wreg free
   415   0001CC  C00E  F015         	movff	?___lwdiv,___lwmod@dividend
   416   0001D0  C00F  F016         	movff	?___lwdiv+1,___lwmod@dividend+1
   417   0001D4  0E00               	movlw	0
   418   0001D6  6E18               	movwf	(___lwmod@divisor+1)^0,c
   419   0001D8  0E0A               	movlw	10
   420   0001DA  6E17               	movwf	___lwmod@divisor^0,c
   421   0001DC  EC73  F001         	call	___lwmod	;wreg free
   422   0001E0  C015  F034         	movff	?___lwmod,_dig3
   423   0001E4  C016  F035         	movff	?___lwmod+1,_dig3+1
   424                           
   425                           ;EX28.c: 93:     dig4 = dig % 10;
   426   0001E8  C01A  F015         	movff	seleciona_7seg@dig,___lwmod@dividend
   427   0001EC  C01B  F016         	movff	seleciona_7seg@dig+1,___lwmod@dividend+1
   428   0001F0  0E00               	movlw	0
   429   0001F2  6E18               	movwf	(___lwmod@divisor+1)^0,c
   430   0001F4  0E0A               	movlw	10
   431   0001F6  6E17               	movwf	___lwmod@divisor^0,c
   432   0001F8  EC73  F001         	call	___lwmod	;wreg free
   433   0001FC  C015  F032         	movff	?___lwmod,_dig4
   434   000200  C016  F033         	movff	?___lwmod+1,_dig4+1
   435   000204  0012               	return		;funcret
   436   000206                     __end_of_seleciona_7seg:
   437                           	callstack 0
   438                           
   439 ;; *************** function ___lwmod *****************
   440 ;; Defined at:
   441 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;  dividend        2   20[COMRAM] unsigned int 
   444 ;;  divisor         2   22[COMRAM] unsigned int 
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  counter         1   24[COMRAM] unsigned char 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  2   20[COMRAM] unsigned int 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   456 ;;      Params:         4       0       0       0       0       0       0
   457 ;;      Locals:         1       0       0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0
   459 ;;      Totals:         5       0       0       0       0       0       0
   460 ;;Total ram usage:        5 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 2
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_seleciona_7seg
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           	psect	text2
   471   0002E6                     __ptext2:
   472                           	callstack 0
   473   0002E6                     ___lwmod:
   474                           	callstack 27
   475   0002E6  5017               	movf	___lwmod@divisor^0,w,c
   476   0002E8  1018               	iorwf	(___lwmod@divisor+1)^0,w,c
   477   0002EA  B4D8               	btfsc	status,2,c
   478   0002EC  EF7A  F001         	goto	u151
   479   0002F0  EF7C  F001         	goto	u150
   480   0002F4                     u151:
   481   0002F4  EFA0  F001         	goto	l574
   482   0002F8                     u150:
   483   0002F8  0E01               	movlw	1
   484   0002FA  6E19               	movwf	___lwmod@counter^0,c
   485   0002FC  EF84  F001         	goto	l886
   486   000300                     l884:
   487   000300  90D8               	bcf	status,0,c
   488   000302  3617               	rlcf	___lwmod@divisor^0,f,c
   489   000304  3618               	rlcf	(___lwmod@divisor+1)^0,f,c
   490   000306  2A19               	incf	___lwmod@counter^0,f,c
   491   000308                     l886:
   492   000308  AE18               	btfss	(___lwmod@divisor+1)^0,7,c
   493   00030A  EF89  F001         	goto	u161
   494   00030E  EF8B  F001         	goto	u160
   495   000312                     u161:
   496   000312  EF80  F001         	goto	l884
   497   000316                     u160:
   498   000316                     l888:
   499   000316  5017               	movf	___lwmod@divisor^0,w,c
   500   000318  5C15               	subwf	___lwmod@dividend^0,w,c
   501   00031A  5018               	movf	(___lwmod@divisor+1)^0,w,c
   502   00031C  5816               	subwfb	(___lwmod@dividend+1)^0,w,c
   503   00031E  A0D8               	btfss	status,0,c
   504   000320  EF94  F001         	goto	u171
   505   000324  EF96  F001         	goto	u170
   506   000328                     u171:
   507   000328  EF9A  F001         	goto	l892
   508   00032C                     u170:
   509   00032C  5017               	movf	___lwmod@divisor^0,w,c
   510   00032E  5E15               	subwf	___lwmod@dividend^0,f,c
   511   000330  5018               	movf	(___lwmod@divisor+1)^0,w,c
   512   000332  5A16               	subwfb	(___lwmod@dividend+1)^0,f,c
   513   000334                     l892:
   514   000334  90D8               	bcf	status,0,c
   515   000336  3218               	rrcf	(___lwmod@divisor+1)^0,f,c
   516   000338  3217               	rrcf	___lwmod@divisor^0,f,c
   517   00033A  2E19               	decfsz	___lwmod@counter^0,f,c
   518   00033C  EF8B  F001         	goto	l888
   519   000340                     l574:
   520   000340  C015  F015         	movff	___lwmod@dividend,?___lwmod
   521   000344  C016  F016         	movff	___lwmod@dividend+1,?___lwmod+1
   522   000348  0012               	return		;funcret
   523   00034A                     __end_of___lwmod:
   524                           	callstack 0
   525                           
   526 ;; *************** function ___lwdiv *****************
   527 ;; Defined at:
   528 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;  dividend        2   13[COMRAM] unsigned int 
   531 ;;  divisor         2   15[COMRAM] unsigned int 
   532 ;; Auto vars:     Size  Location     Type
   533 ;;  quotient        2   17[COMRAM] unsigned int 
   534 ;;  counter         1   19[COMRAM] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  2   13[COMRAM] unsigned int 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   544 ;;      Params:         4       0       0       0       0       0       0
   545 ;;      Locals:         3       0       0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0       0       0
   547 ;;      Totals:         7       0       0       0       0       0       0
   548 ;;Total ram usage:        7 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 2
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_seleciona_7seg
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text3
   559   000206                     __ptext3:
   560                           	callstack 0
   561   000206                     ___lwdiv:
   562                           	callstack 27
   563   000206  0E00               	movlw	0
   564   000208  6E13               	movwf	(___lwdiv@quotient+1)^0,c
   565   00020A  0E00               	movlw	0
   566   00020C  6E12               	movwf	___lwdiv@quotient^0,c
   567   00020E  5010               	movf	___lwdiv@divisor^0,w,c
   568   000210  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
   569   000212  B4D8               	btfsc	status,2,c
   570   000214  EF0E  F001         	goto	u121
   571   000218  EF10  F001         	goto	u120
   572   00021C                     u121:
   573   00021C  EF38  F001         	goto	l564
   574   000220                     u120:
   575   000220  0E01               	movlw	1
   576   000222  6E14               	movwf	___lwdiv@counter^0,c
   577   000224  EF18  F001         	goto	l866
   578   000228                     l864:
   579   000228  90D8               	bcf	status,0,c
   580   00022A  3610               	rlcf	___lwdiv@divisor^0,f,c
   581   00022C  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
   582   00022E  2A14               	incf	___lwdiv@counter^0,f,c
   583   000230                     l866:
   584   000230  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
   585   000232  EF1D  F001         	goto	u131
   586   000236  EF1F  F001         	goto	u130
   587   00023A                     u131:
   588   00023A  EF14  F001         	goto	l864
   589   00023E                     u130:
   590   00023E                     l868:
   591   00023E  90D8               	bcf	status,0,c
   592   000240  3612               	rlcf	___lwdiv@quotient^0,f,c
   593   000242  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
   594   000244  5010               	movf	___lwdiv@divisor^0,w,c
   595   000246  5C0E               	subwf	___lwdiv@dividend^0,w,c
   596   000248  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   597   00024A  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
   598   00024C  A0D8               	btfss	status,0,c
   599   00024E  EF2B  F001         	goto	u141
   600   000252  EF2D  F001         	goto	u140
   601   000256                     u141:
   602   000256  EF32  F001         	goto	l876
   603   00025A                     u140:
   604   00025A  5010               	movf	___lwdiv@divisor^0,w,c
   605   00025C  5E0E               	subwf	___lwdiv@dividend^0,f,c
   606   00025E  5011               	movf	(___lwdiv@divisor+1)^0,w,c
   607   000260  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
   608   000262  8012               	bsf	___lwdiv@quotient^0,0,c
   609   000264                     l876:
   610   000264  90D8               	bcf	status,0,c
   611   000266  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
   612   000268  3210               	rrcf	___lwdiv@divisor^0,f,c
   613   00026A  2E14               	decfsz	___lwdiv@counter^0,f,c
   614   00026C  EF1F  F001         	goto	l868
   615   000270                     l564:
   616   000270  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
   617   000274  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
   618   000278  0012               	return		;funcret
   619   00027A                     __end_of___lwdiv:
   620                           	callstack 0
   621                           
   622 ;; *************** function _int_TMR0 *****************
   623 ;; Defined at:
   624 ;;		line 28 in file "EX28.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   638 ;;      Params:         0       0       0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0
   640 ;;      Temps:          7       0       0       0       0       0       0
   641 ;;      Totals:         7       0       0       0       0       0       0
   642 ;;Total ram usage:        7 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; Hardware stack levels required when called: 1
   645 ;; This function calls:
   646 ;;		_escreve_7seg
   647 ;; This function is called by:
   648 ;;		Interrupt level 1
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	intcodelo
   653   000018                     __pintcodelo:
   654                           	callstack 0
   655   000018                     _int_TMR0:
   656                           	callstack 27
   657                           
   658                           ;incstack = 0
   659   000018  803E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   660   00001A  CFD8 F009          	movff	status,??_int_TMR0+2
   661   00001E  CFE8 F00A          	movff	wreg,??_int_TMR0+3
   662   000022  CFE0 F00B          	movff	bsr,??_int_TMR0+4
   663   000026  CFD9 F00C          	movff	fsr2l,??_int_TMR0+5
   664   00002A  CFDA F00D          	movff	fsr2h,??_int_TMR0+6
   665   00002E                     
   666                           ;EX28.c: 31:     if (TMR0IF)
   667   00002E  A4F2               	btfss	4082,2,c	;volatile
   668   000030  EF1C  F000         	goto	i1u20_21
   669   000034  EF1E  F000         	goto	i1u20_20
   670   000038                     i1u20_21:
   671   000038  EFA3  F000         	goto	i1l946
   672   00003C                     i1u20_20:
   673   00003C                     
   674                           ;EX28.c: 32:     {;EX28.c: 33:       sel_digito++;
   675   00003C  4A3C               	infsnz	_sel_digito^0,f,c
   676   00003E  2A3D               	incf	(_sel_digito+1)^0,f,c
   677   000040                     
   678                           ;EX28.c: 34:       if (sel_digito>4) sel_digito = 1;
   679   000040  503D               	movf	(_sel_digito+1)^0,w,c
   680   000042  E109               	bnz	i1u21_20
   681   000044  0E05               	movlw	5
   682   000046  5C3C               	subwf	_sel_digito^0,w,c
   683   000048  A0D8               	btfss	status,0,c
   684   00004A  EF29  F000         	goto	i1u21_21
   685   00004E  EF2B  F000         	goto	i1u21_20
   686   000052                     i1u21_21:
   687   000052  EF85  F000         	goto	i1l944
   688   000056                     i1u21_20:
   689   000056  0E00               	movlw	0
   690   000058  6E3D               	movwf	(_sel_digito+1)^0,c
   691   00005A  0E01               	movlw	1
   692   00005C  6E3C               	movwf	_sel_digito^0,c
   693   00005E  EF85  F000         	goto	i1l944
   694   000062                     i1l918:
   695   000062  0E0F               	movlw	15
   696   000064  6E83               	movwf	131,c	;volatile
   697   000066                     
   698                           ;EX28.c: 40:                    escreve_7seg(digito[dig1]);
   699   000066  90D8               	bcf	status,0,c
   700   000068  3438               	rlcf	_dig1^0,w,c
   701   00006A  6ED9               	movwf	fsr2l,c
   702   00006C  3439               	rlcf	(_dig1+1)^0,w,c
   703   00006E  6EDA               	movwf	fsr2h,c
   704   000070  0E1E               	movlw	low _digito
   705   000072  26D9               	addwf	fsr2l,f,c
   706   000074  0E00               	movlw	high _digito
   707   000076  22DA               	addwfc	fsr2h,f,c
   708   000078  CFDE F001          	movff	postinc2,escreve_7seg@num
   709   00007C  CFDD F002          	movff	postdec2,escreve_7seg@num+1
   710   000080  ECA5  F001         	call	_escreve_7seg	;wreg free
   711   000084                     
   712                           ;EX28.c: 41:                    PORTD = 0b00001110;
   713   000084  0E0E               	movlw	14
   714   000086  6E83               	movwf	131,c	;volatile
   715                           
   716                           ;EX28.c: 42:               break;
   717   000088  EFA3  F000         	goto	i1l946
   718   00008C                     i1l924:
   719   00008C  0E0F               	movlw	15
   720   00008E  6E83               	movwf	131,c	;volatile
   721   000090                     
   722                           ;EX28.c: 44:                    escreve_7seg(digito[dig2]);
   723   000090  90D8               	bcf	status,0,c
   724   000092  3436               	rlcf	_dig2^0,w,c
   725   000094  6ED9               	movwf	fsr2l,c
   726   000096  3437               	rlcf	(_dig2+1)^0,w,c
   727   000098  6EDA               	movwf	fsr2h,c
   728   00009A  0E1E               	movlw	low _digito
   729   00009C  26D9               	addwf	fsr2l,f,c
   730   00009E  0E00               	movlw	high _digito
   731   0000A0  22DA               	addwfc	fsr2h,f,c
   732   0000A2  CFDE F001          	movff	postinc2,escreve_7seg@num
   733   0000A6  CFDD F002          	movff	postdec2,escreve_7seg@num+1
   734   0000AA  ECA5  F001         	call	_escreve_7seg	;wreg free
   735   0000AE                     
   736                           ;EX28.c: 45:                    PORTD = 0b00001101;
   737   0000AE  0E0D               	movlw	13
   738   0000B0  6E83               	movwf	131,c	;volatile
   739                           
   740                           ;EX28.c: 46:               break;
   741   0000B2  EFA3  F000         	goto	i1l946
   742   0000B6                     i1l930:
   743   0000B6  0E0F               	movlw	15
   744   0000B8  6E83               	movwf	131,c	;volatile
   745   0000BA                     
   746                           ;EX28.c: 48:                    escreve_7seg(digito[dig3]);
   747   0000BA  90D8               	bcf	status,0,c
   748   0000BC  3434               	rlcf	_dig3^0,w,c
   749   0000BE  6ED9               	movwf	fsr2l,c
   750   0000C0  3435               	rlcf	(_dig3+1)^0,w,c
   751   0000C2  6EDA               	movwf	fsr2h,c
   752   0000C4  0E1E               	movlw	low _digito
   753   0000C6  26D9               	addwf	fsr2l,f,c
   754   0000C8  0E00               	movlw	high _digito
   755   0000CA  22DA               	addwfc	fsr2h,f,c
   756   0000CC  CFDE F001          	movff	postinc2,escreve_7seg@num
   757   0000D0  CFDD F002          	movff	postdec2,escreve_7seg@num+1
   758   0000D4  ECA5  F001         	call	_escreve_7seg	;wreg free
   759   0000D8                     
   760                           ;EX28.c: 49:                    PORTD = 0b00001011;
   761   0000D8  0E0B               	movlw	11
   762   0000DA  6E83               	movwf	131,c	;volatile
   763                           
   764                           ;EX28.c: 50:               break;
   765   0000DC  EFA3  F000         	goto	i1l946
   766   0000E0                     i1l936:
   767   0000E0  0E0F               	movlw	15
   768   0000E2  6E83               	movwf	131,c	;volatile
   769   0000E4                     
   770                           ;EX28.c: 52:                    escreve_7seg(digito[dig4]);
   771   0000E4  90D8               	bcf	status,0,c
   772   0000E6  3432               	rlcf	_dig4^0,w,c
   773   0000E8  6ED9               	movwf	fsr2l,c
   774   0000EA  3433               	rlcf	(_dig4+1)^0,w,c
   775   0000EC  6EDA               	movwf	fsr2h,c
   776   0000EE  0E1E               	movlw	low _digito
   777   0000F0  26D9               	addwf	fsr2l,f,c
   778   0000F2  0E00               	movlw	high _digito
   779   0000F4  22DA               	addwfc	fsr2h,f,c
   780   0000F6  CFDE F001          	movff	postinc2,escreve_7seg@num
   781   0000FA  CFDD F002          	movff	postdec2,escreve_7seg@num+1
   782   0000FE  ECA5  F001         	call	_escreve_7seg	;wreg free
   783   000102                     
   784                           ;EX28.c: 53:                    PORTD = 0b00000111;
   785   000102  0E07               	movlw	7
   786   000104  6E83               	movwf	131,c	;volatile
   787                           
   788                           ;EX28.c: 54:               break;
   789   000106  EFA3  F000         	goto	i1l946
   790   00010A                     i1l944:
   791   00010A  C03C  F007         	movff	_sel_digito,??_int_TMR0
   792   00010E  C03D  F008         	movff	_sel_digito+1,??_int_TMR0+1
   793                           
   794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   795                           ; Switch size 1, requested type "simple"
   796                           ; Number of cases is 1, Range of values is 0 to 0
   797                           ; switch strategies available:
   798                           ; Name         Instructions Cycles
   799                           ; simple_byte            4     3 (average)
   800                           ;	Chosen strategy is simple_byte
   801   000112  5008               	movf	(??_int_TMR0+1)^0,w,c
   802   000114  0A00               	xorlw	0	; case 0
   803   000116  B4D8               	btfsc	status,2,c
   804   000118  EF90  F000         	goto	i1l970
   805   00011C  EFA3  F000         	goto	i1l946
   806   000120                     i1l970:
   807                           
   808                           ; Switch size 1, requested type "simple"
   809                           ; Number of cases is 4, Range of values is 1 to 4
   810                           ; switch strategies available:
   811                           ; Name         Instructions Cycles
   812                           ; simple_byte           13     7 (average)
   813                           ;	Chosen strategy is simple_byte
   814   000120  5007               	movf	??_int_TMR0^0,w,c
   815   000122  0A01               	xorlw	1	; case 1
   816   000124  B4D8               	btfsc	status,2,c
   817   000126  EF31  F000         	goto	i1l918
   818   00012A  0A03               	xorlw	3	; case 2
   819   00012C  B4D8               	btfsc	status,2,c
   820   00012E  EF46  F000         	goto	i1l924
   821   000132  0A01               	xorlw	1	; case 3
   822   000134  B4D8               	btfsc	status,2,c
   823   000136  EF5B  F000         	goto	i1l930
   824   00013A  0A07               	xorlw	7	; case 4
   825   00013C  B4D8               	btfsc	status,2,c
   826   00013E  EF70  F000         	goto	i1l936
   827   000142  EFA3  F000         	goto	i1l946
   828   000146                     i1l946:
   829                           
   830                           ;EX28.c: 59:      TMR0 = 31;
   831   000146  0E00               	movlw	0
   832   000148  6ED7               	movwf	215,c	;volatile
   833   00014A  0E1F               	movlw	31
   834   00014C  6ED6               	movwf	214,c	;volatile
   835   00014E                     
   836                           ;EX28.c: 60:      TMR0IF = 0;
   837   00014E  94F2               	bcf	4082,2,c	;volatile
   838   000150  C00D  FFDA         	movff	??_int_TMR0+6,fsr2h
   839   000154  C00C  FFD9         	movff	??_int_TMR0+5,fsr2l
   840   000158  C00B  FFE0         	movff	??_int_TMR0+4,bsr
   841   00015C  C00A  FFE8         	movff	??_int_TMR0+3,wreg
   842   000160  C009  FFD8         	movff	??_int_TMR0+2,status
   843   000164  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   844   000166  0010               	retfie	
   845   000168                     __end_of_int_TMR0:
   846                           	callstack 0
   847                           
   848 ;; *************** function _escreve_7seg *****************
   849 ;; Defined at:
   850 ;;		line 63 in file "EX28.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  num             2    0[COMRAM] unsigned int 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  j               2    4[COMRAM] unsigned int 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   864 ;;      Params:         2       0       0       0       0       0       0
   865 ;;      Locals:         2       0       0       0       0       0       0
   866 ;;      Temps:          2       0       0       0       0       0       0
   867 ;;      Totals:         6       0       0       0       0       0       0
   868 ;;Total ram usage:        6 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_int_TMR0
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text5
   878   00034A                     __ptext5:
   879                           	callstack 0
   880   00034A                     _escreve_7seg:
   881                           	callstack 27
   882   00034A                     
   883                           ;EX28.c: 63: void escreve_7seg(unsigned int num);EX28.c: 64: {;EX28.c: 65:     unsigned 
      +                          int j;;EX28.c: 67:     for(j = 0x80; j > 0; j = j >> 1)
   884   00034A  0E00               	movlw	0
   885   00034C  6E06               	movwf	(escreve_7seg@j+1)^0,c
   886   00034E  0E80               	movlw	128
   887   000350  6E05               	movwf	escreve_7seg@j^0,c
   888   000352                     i1l902:
   889                           
   890                           ;EX28.c: 68:     {;EX28.c: 71:         if(num & j)
   891   000352  5005               	movf	escreve_7seg@j^0,w,c
   892   000354  1401               	andwf	escreve_7seg@num^0,w,c
   893   000356  6E03               	movwf	??_escreve_7seg^0,c
   894   000358  5006               	movf	(escreve_7seg@j+1)^0,w,c
   895   00035A  1402               	andwf	(escreve_7seg@num+1)^0,w,c
   896   00035C  6E04               	movwf	(??_escreve_7seg+1)^0,c
   897   00035E  5003               	movf	??_escreve_7seg^0,w,c
   898   000360  1004               	iorwf	(??_escreve_7seg+1)^0,w,c
   899   000362  B4D8               	btfsc	status,2,c
   900   000364  EFB6  F001         	goto	i1u18_21
   901   000368  EFB8  F001         	goto	i1u18_20
   902   00036C                     i1u18_21:
   903   00036C  EFBB  F001         	goto	i1l56
   904   000370                     i1u18_20:
   905   000370                     
   906                           ;EX28.c: 72:             PORTEbits.RE0 = 1;
   907   000370  8084               	bsf	132,0,c	;volatile
   908   000372  EFBC  F001         	goto	i1l57
   909   000376                     i1l56:
   910                           
   911                           ;EX28.c: 74:             PORTEbits.RE0 = 0;
   912   000376  9084               	bcf	132,0,c	;volatile
   913   000378                     i1l57:
   914                           
   915                           ;EX28.c: 77:         PORTEbits.RE1 = 1;
   916   000378  8284               	bsf	132,1,c	;volatile
   917                           
   918                           ;EX28.c: 78:         PORTEbits.RE1 = 0;
   919   00037A  9284               	bcf	132,1,c	;volatile
   920   00037C                     
   921                           ;EX28.c: 79:     }
   922   00037C  90D8               	bcf	status,0,c
   923   00037E  3006               	rrcf	(escreve_7seg@j+1)^0,w,c
   924   000380  6E03               	movwf	??_escreve_7seg^0,c
   925   000382  3005               	rrcf	escreve_7seg@j^0,w,c
   926   000384  6E05               	movwf	escreve_7seg@j^0,c
   927   000386  C003  F006         	movff	??_escreve_7seg,escreve_7seg@j+1
   928   00038A  5005               	movf	escreve_7seg@j^0,w,c
   929   00038C  1006               	iorwf	(escreve_7seg@j+1)^0,w,c
   930   00038E  A4D8               	btfss	status,2,c
   931   000390  EFCC  F001         	goto	i1u19_21
   932   000394  EFCE  F001         	goto	i1u19_20
   933   000398                     i1u19_21:
   934   000398  EFA9  F001         	goto	i1l902
   935   00039C                     i1u19_20:
   936   00039C                     
   937                           ;EX28.c: 81:     PORTEbits.RE2 = 1;
   938   00039C  8484               	bsf	132,2,c	;volatile
   939                           
   940                           ;EX28.c: 82:     PORTEbits.RE2 = 0;
   941   00039E  9484               	bcf	132,2,c	;volatile
   942   0003A0  0012               	return		;funcret
   943   0003A2                     __end_of_escreve_7seg:
   944                           	callstack 0
   945   000000                     
   946                           	psect	rparam
   947   000000                     
   948                           	psect	temp
   949   00003E                     btemp:
   950                           	callstack 0
   951   00003E                     	ds	1
   952   000000                     int$flags	set	btemp
   953   000000                     wtemp8	set	btemp+1
   954   000000                     ttemp5	set	btemp+1
   955   000000                     ttemp6	set	btemp+4
   956   000000                     ttemp7	set	btemp+8
   957                           
   958                           	psect	idloc
   959                           
   960                           ;Config register IDLOC0 @ 0x200000
   961                           ;	unspecified, using default values
   962   200000                     	org	2097152
   963   200000  FF                 	db	255
   964                           
   965                           ;Config register IDLOC1 @ 0x200001
   966                           ;	unspecified, using default values
   967   200001                     	org	2097153
   968   200001  FF                 	db	255
   969                           
   970                           ;Config register IDLOC2 @ 0x200002
   971                           ;	unspecified, using default values
   972   200002                     	org	2097154
   973   200002  FF                 	db	255
   974                           
   975                           ;Config register IDLOC3 @ 0x200003
   976                           ;	unspecified, using default values
   977   200003                     	org	2097155
   978   200003  FF                 	db	255
   979                           
   980                           ;Config register IDLOC4 @ 0x200004
   981                           ;	unspecified, using default values
   982   200004                     	org	2097156
   983   200004  FF                 	db	255
   984                           
   985                           ;Config register IDLOC5 @ 0x200005
   986                           ;	unspecified, using default values
   987   200005                     	org	2097157
   988   200005  FF                 	db	255
   989                           
   990                           ;Config register IDLOC6 @ 0x200006
   991                           ;	unspecified, using default values
   992   200006                     	org	2097158
   993   200006  FF                 	db	255
   994                           
   995                           ;Config register IDLOC7 @ 0x200007
   996                           ;	unspecified, using default values
   997   200007                     	org	2097159
   998   200007  FF                 	db	255
   999                           
  1000                           	psect	config
  1001                           
  1002                           ; Padding undefined space
  1003   300000                     	org	3145728
  1004   300000  FF                 	db	255
  1005                           
  1006                           ;Config register CONFIG1H @ 0x300001
  1007                           ;	Oscillator Selection bits
  1008                           ;	OSC = HS, HS oscillator
  1009                           ;	Fail-Safe Clock Monitor Enable bit
  1010                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1011                           ;	Internal/External Oscillator Switchover bit
  1012                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1013   300001                     	org	3145729
  1014   300001  02                 	db	2
  1015                           
  1016                           ;Config register CONFIG2L @ 0x300002
  1017                           ;	Power-up Timer Enable bit
  1018                           ;	PWRT = ON, PWRT enabled
  1019                           ;	Brown-out Reset Enable bits
  1020                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1021                           ;	Brown Out Reset Voltage bits
  1022                           ;	BORV = 3, Minimum setting
  1023   300002                     	org	3145730
  1024   300002  18                 	db	24
  1025                           
  1026                           ;Config register CONFIG2H @ 0x300003
  1027                           ;	Watchdog Timer Enable bit
  1028                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1029                           ;	Watchdog Timer Postscale Select bits
  1030                           ;	WDTPS = 32768, 1:32768
  1031   300003                     	org	3145731
  1032   300003  1E                 	db	30
  1033                           
  1034                           ; Padding undefined space
  1035   300004                     	org	3145732
  1036   300004  FF                 	db	255
  1037                           
  1038                           ;Config register CONFIG3H @ 0x300005
  1039                           ;	CCP2 MUX bit
  1040                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1041                           ;	PORTB A/D Enable bit
  1042                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1043                           ;	Low-Power Timer1 Oscillator Enable bit
  1044                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1045                           ;	MCLR Pin Enable bit
  1046                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1047   300005                     	org	3145733
  1048   300005  81                 	db	129
  1049                           
  1050                           ;Config register CONFIG4L @ 0x300006
  1051                           ;	Stack Full/Underflow Reset Enable bit
  1052                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1053                           ;	Single-Supply ICSP Enable bit
  1054                           ;	LVP = OFF, Single-Supply ICSP disabled
  1055                           ;	Extended Instruction Set Enable bit
  1056                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1057                           ;	Background Debugger Enable bit
  1058                           ;	DEBUG = 0x1, unprogrammed default
  1059   300006                     	org	3145734
  1060   300006  81                 	db	129
  1061                           
  1062                           ; Padding undefined space
  1063   300007                     	org	3145735
  1064   300007  FF                 	db	255
  1065                           
  1066                           ;Config register CONFIG5L @ 0x300008
  1067                           ;	Code Protection bit
  1068                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1069                           ;	Code Protection bit
  1070                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1071                           ;	Code Protection bit
  1072                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1073                           ;	Code Protection bit
  1074                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1075   300008                     	org	3145736
  1076   300008  0F                 	db	15
  1077                           
  1078                           ;Config register CONFIG5H @ 0x300009
  1079                           ;	Boot Block Code Protection bit
  1080                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1081                           ;	Data EEPROM Code Protection bit
  1082                           ;	CPD = OFF, Data EEPROM not code-protected
  1083   300009                     	org	3145737
  1084   300009  C0                 	db	192
  1085                           
  1086                           ;Config register CONFIG6L @ 0x30000A
  1087                           ;	Write Protection bit
  1088                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1089                           ;	Write Protection bit
  1090                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1091                           ;	Write Protection bit
  1092                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1093                           ;	Write Protection bit
  1094                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1095   30000A                     	org	3145738
  1096   30000A  0F                 	db	15
  1097                           
  1098                           ;Config register CONFIG6H @ 0x30000B
  1099                           ;	Configuration Register Write Protection bit
  1100                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1101                           ;	Boot Block Write Protection bit
  1102                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1103                           ;	Data EEPROM Write Protection bit
  1104                           ;	WRTD = OFF, Data EEPROM not write-protected
  1105   30000B                     	org	3145739
  1106   30000B  E0                 	db	224
  1107                           
  1108                           ;Config register CONFIG7L @ 0x30000C
  1109                           ;	Table Read Protection bit
  1110                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1111                           ;	Table Read Protection bit
  1112                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1113                           ;	Table Read Protection bit
  1114                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1115                           ;	Table Read Protection bit
  1116                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1117   30000C                     	org	3145740
  1118   30000C  0F                 	db	15
  1119                           
  1120                           ;Config register CONFIG7H @ 0x30000D
  1121                           ;	Boot Block Table Read Protection bit
  1122                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1123   30000D                     	org	3145741
  1124   30000D  40                 	db	64
  1125                           tosu	equ	0xFFF
  1126                           tosh	equ	0xFFE
  1127                           tosl	equ	0xFFD
  1128                           stkptr	equ	0xFFC
  1129                           pclatu	equ	0xFFB
  1130                           pclath	equ	0xFFA
  1131                           pcl	equ	0xFF9
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           prodh	equ	0xFF4
  1137                           prodl	equ	0xFF3
  1138                           indf0	equ	0xFEF
  1139                           postinc0	equ	0xFEE
  1140                           postdec0	equ	0xFED
  1141                           preinc0	equ	0xFEC
  1142                           plusw0	equ	0xFEB
  1143                           fsr0h	equ	0xFEA
  1144                           fsr0l	equ	0xFE9
  1145                           wreg	equ	0xFE8
  1146                           indf1	equ	0xFE7
  1147                           postinc1	equ	0xFE6
  1148                           postdec1	equ	0xFE5
  1149                           preinc1	equ	0xFE4
  1150                           plusw1	equ	0xFE3
  1151                           fsr1h	equ	0xFE2
  1152                           fsr1l	equ	0xFE1
  1153                           bsr	equ	0xFE0
  1154                           indf2	equ	0xFDF
  1155                           postinc2	equ	0xFDE
  1156                           postdec2	equ	0xFDD
  1157                           preinc2	equ	0xFDC
  1158                           plusw2	equ	0xFDB
  1159                           fsr2h	equ	0xFDA
  1160                           fsr2l	equ	0xFD9
  1161                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     29      61
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_seleciona_7seg
    _seleciona_7seg->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _int_TMR0 in COMRAM

    _int_TMR0->_escreve_7seg

Critical Paths under _main in BANK0

    None.

Critical Paths under _int_TMR0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int_TMR0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int_TMR0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int_TMR0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _int_TMR0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _int_TMR0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1397
                                             27 COMRAM     2     2      0
                     _seleciona_7seg
 ---------------------------------------------------------------------------------
 (1) _seleciona_7seg                                       2     0      2    1397
                                             25 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                             20 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                             13 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _int_TMR0                                             7     7      0     416
                                              6 COMRAM     7     7      0
                       _escreve_7seg
 ---------------------------------------------------------------------------------
 (4) _escreve_7seg                                         6     4      2     416
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _seleciona_7seg
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _int_TMR0 (ROOT)
   _escreve_7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1D      3D       1       48.4%
BITBIGSFRlhllh      2A      0       0      19        0.0%
BITBIGSFRlhh        1A      0       0      17        0.0%
BITBIGSFRlhlh       13      0       0      18        0.0%
BITBIGSFRlhlll      10      0       0      20        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRll          3      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      22        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 28 15:25:32 2022

                     l61 0204                       bsr 000FE0                      l571 0278  
                    l564 0270                      l581 0348                      l574 0340  
                    l860 020E                      l908 016C                      l870 0244  
                    l862 0220                      l872 025A                      l864 0228  
                    l880 02E6                      l960 02B4                      l874 0262  
                    l866 0230                      l858 0206                      l890 032C  
                    l882 02F8                      l962 02BC                      l954 027A  
                    l876 0264                      l868 023E                      l892 0334  
                    l884 0300                      l964 02C8                      l956 029A  
                    l878 026A                      l894 033A                      l886 0308  
                    l958 029E                      l888 0316                      u120 0220  
                    u121 021C                      u130 023E                      u131 023A  
                    u140 025A                      u220 02B4                      u141 0256  
                    u221 02B0                      u150 02F8                      u151 02F4  
                    u160 0316                      u161 0312                      u170 032C  
                    u171 0328                      u237 02D2                      wreg 000FE8  
                   i1l51 0150                     i1l55 039C                     i1l56 0376  
                   i1l57 0378                     i1l58 03A0                     _TMR0 000FD6  
                   _dig1 0038                     _dig2 0036                     _dig3 0034  
                   _dig4 0032                     _main 027A                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 003E  
                   start 0168             ___param_bank 000000                    ?_main 0001  
                  _T0CON 000FD5            ?_escreve_7seg 0001          __end_of___lwdiv 027A  
        __end_of___lwmod 034A                    i1l902 0352                    i1l910 002E  
                  i1l904 0370                    i1l920 0066                    i1l912 003C  
                  i1l906 037C                    i1l930 00B6                    i1l922 0084  
                  i1l914 0040                    i1l940 0102                    i1l932 00BA  
                  i1l924 008C                    i1l916 0056                    i1l934 00D8  
                  i1l926 0090                    i1l918 0062                    i1l936 00E0  
                  i1l928 00AE                    i1l944 010A                    i1l970 0120  
                  i1l938 00E4                    i1l946 0146                    i1l948 014E  
                  i1l896 034A                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISD 000F95                    _TRISE 000F96                    _conta 003A  
                  tablat 000FF5                    ttemp5 003F                    ttemp6 0042  
                  ttemp7 0046                    status 000FD8                    wtemp8 003F  
        __initialization 03A2             __end_of_main 02E6        seleciona_7seg@dig 001A  
         ??_escreve_7seg 0003                   ??_main 001C            __activetblptr 000002  
                 _ADCON1 000FC1                   _INTCON 000FF2                   _TMR0IF 007F92  
       __end_of_int_TMR0 0168                   _digito 001E                ??___lwdiv 0012  
              ??___lwmod 0019                   clear_0 03C8                   isa$std 000001  
           __pdataCOMRAM 001E                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8           _seleciona_7seg 016C               __accesstop 0080  
__end_of__initialization 03CE            ___rparam_used 000001           __pcstackCOMRAM 0001  
 __end_of_seleciona_7seg 0206     __end_of_escreve_7seg 03A2          ?_seleciona_7seg 001A  
                i1u20_20 003C                  i1u20_21 0038                  i1u21_20 0056  
                i1u21_21 0052                  i1u18_20 0370                  i1u18_21 036C  
                i1u19_20 039C                  i1u19_21 0398                ?_int_TMR0 0001  
                __Hparam 0000                  __Lparam 0000                  ___lwdiv 0206  
                ___lwmod 02E6                  __pcinit 03A2                  __ramtop 0600  
                __ptext0 027A                  __ptext1 016C                  __ptext2 02E6  
                __ptext3 0206                  __ptext5 034A     end_of_initialization 03CE  
             _sel_digito 003C               ??_int_TMR0 0007            __Lmediumconst 0000  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _PORTEbits 000F84            escreve_7seg@j 0005  
          __pidataCOMRAM 03DC             _escreve_7seg 034A      start_initialization 03A2  
       ??_seleciona_7seg 001C              __pbssCOMRAM 0032         ___lwdiv@dividend 000E  
               ?___lwdiv 000E                 ?___lwmod 0015              __pintcodelo 0018  
       ___lwdiv@quotient 0012                copy_data0 03B6                 __Hrparam 0000  
               __Lrparam 0000          ___lwdiv@divisor 0010          ___lwdiv@counter 0014  
               _int_TMR0 0018                 isa$xinst 000000                 int$flags 003E  
               intlevel1 0000         ___lwmod@dividend 0015          ___lwmod@divisor 0017  
        ___lwmod@counter 0019          escreve_7seg@num 0001  
