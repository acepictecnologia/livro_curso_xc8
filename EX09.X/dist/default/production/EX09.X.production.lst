

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 14:21:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4520 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _PORTDbits	set	3971
    50  0000                     _PORTEbits	set	3972
    51  0000                     _PORTD	set	3971
    52  0000                     _TRISEbits	set	3990
    53  0000                     _TRISD	set	3989
    54  0000                     _ADCON1	set	4033
    55                           
    56                           ; #config settings
    57  0000                     
    58                           	psect	cinit
    59  007D6E                     __pcinit:
    60                           	opt callstack 0
    61  007D6E                     start_initialization:
    62                           	opt callstack 0
    63  007D6E                     __initialization:
    64                           	opt callstack 0
    65  007D6E                     end_of_initialization:
    66                           	opt callstack 0
    67  007D6E                     __end_of__initialization:
    68                           	opt callstack 0
    69  007D6E  0100               	movlb	0
    70  007D70  EF8D  F03F         	goto	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMRAM
    73  000001                     __pcstackCOMRAM:
    74                           	opt callstack 0
    75  000001                     set_bit@comp:
    76                           	opt callstack 0
    77                           
    78                           ; 1 bytes @ 0x0
    79  000001                     	ds	1
    80  000002                     set_bit@cmd:
    81                           	opt callstack 0
    82                           
    83                           ; 1 bytes @ 0x1
    84  000002                     	ds	1
    85  000003                     ??_lcd_cmd:
    86                           
    87                           ; 1 bytes @ 0x2
    88  000003                     	ds	1
    89  000004                     lcd_cmd@cmd:
    90                           	opt callstack 0
    91                           
    92                           ; 1 bytes @ 0x3
    93  000004                     	ds	1
    94  000005                     ??_lcd_ini:
    95  000005                     lcd_envia_byte@dado:
    96                           	opt callstack 0
    97                           
    98                           ; 1 bytes @ 0x4
    99  000005                     	ds	1
   100  000006                     lcd_ini@i:
   101                           	opt callstack 0
   102  000006                     lcd_envia_byte@nivel:
   103                           	opt callstack 0
   104                           
   105                           ; 1 bytes @ 0x5
   106  000006                     	ds	1
   107  000007                     
   108                           ; 1 bytes @ 0x6
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 8 in file "EX09.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2, status,0, cstack
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   128 ;;      Params:         0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0
   130 ;;      Temps:          0       0       0       0       0       0       0
   131 ;;      Totals:         0       0       0       0       0       0       0
   132 ;;Total ram usage:        0 bytes
   133 ;; Hardware stack levels required when called:    3
   134 ;; This function calls:
   135 ;;		_lcd_envia_byte
   136 ;;		_lcd_ini
   137 ;; This function is called by:
   138 ;;		Startup code after reset
   139 ;; This function uses a non-reentrant model
   140 ;;
   141                           
   142                           	psect	text0
   143  007F1A                     __ptext0:
   144                           	opt callstack 0
   145  007F1A                     _main:
   146                           	opt callstack 28
   147                           
   148                           ;EX09.c: 10:     ADCON1 = 0x0F;
   149                           
   150                           ;incstack = 0
   151  007F1A  0E0F               	movlw	15
   152  007F1C  6EC1               	movwf	4033,c	;volatile
   153                           
   154                           ;EX09.c: 12:     lcd_ini();
   155  007F1E  ECD3  F03E         	call	_lcd_ini	;wreg free
   156                           
   157                           ;EX09.c: 14:     lcd_envia_byte(0,0x083);
   158  007F22  0E83               	movlw	131
   159  007F24  6E05               	movwf	lcd_envia_byte@dado,c
   160  007F26  0E00               	movlw	0
   161  007F28  ECC4  F03E         	call	_lcd_envia_byte
   162                           
   163                           ;EX09.c: 17:     lcd_envia_byte(1,'P');
   164  007F2C  0E50               	movlw	80
   165  007F2E  6E05               	movwf	lcd_envia_byte@dado,c
   166  007F30  0E01               	movlw	1
   167  007F32  ECC4  F03E         	call	_lcd_envia_byte
   168                           
   169                           ;EX09.c: 18:     lcd_envia_byte(1,'I');
   170  007F36  0E49               	movlw	73
   171  007F38  6E05               	movwf	lcd_envia_byte@dado,c
   172  007F3A  0E01               	movlw	1
   173  007F3C  ECC4  F03E         	call	_lcd_envia_byte
   174                           
   175                           ;EX09.c: 19:     lcd_envia_byte(1,'C');
   176  007F40  0E43               	movlw	67
   177  007F42  6E05               	movwf	lcd_envia_byte@dado,c
   178  007F44  0E01               	movlw	1
   179  007F46  ECC4  F03E         	call	_lcd_envia_byte
   180                           
   181                           ;EX09.c: 20:     lcd_envia_byte(1,'1');
   182  007F4A  0E31               	movlw	49
   183  007F4C  6E05               	movwf	lcd_envia_byte@dado,c
   184  007F4E  0E01               	movlw	1
   185  007F50  ECC4  F03E         	call	_lcd_envia_byte
   186                           
   187                           ;EX09.c: 21:     lcd_envia_byte(1,'8');
   188  007F54  0E38               	movlw	56
   189  007F56  6E05               	movwf	lcd_envia_byte@dado,c
   190  007F58  0E01               	movlw	1
   191  007F5A  ECC4  F03E         	call	_lcd_envia_byte
   192                           
   193                           ;EX09.c: 22:     lcd_envia_byte(1,'F');
   194  007F5E  0E46               	movlw	70
   195  007F60  6E05               	movwf	lcd_envia_byte@dado,c
   196  007F62  0E01               	movlw	1
   197  007F64  ECC4  F03E         	call	_lcd_envia_byte
   198                           
   199                           ;EX09.c: 23:     lcd_envia_byte(1,'4');
   200  007F68  0E34               	movlw	52
   201  007F6A  6E05               	movwf	lcd_envia_byte@dado,c
   202  007F6C  0E01               	movlw	1
   203  007F6E  ECC4  F03E         	call	_lcd_envia_byte
   204                           
   205                           ;EX09.c: 24:     lcd_envia_byte(1,'5');
   206  007F72  0E35               	movlw	53
   207  007F74  6E05               	movwf	lcd_envia_byte@dado,c
   208  007F76  0E01               	movlw	1
   209  007F78  ECC4  F03E         	call	_lcd_envia_byte
   210                           
   211                           ;EX09.c: 25:     lcd_envia_byte(1,'2');
   212  007F7C  0E32               	movlw	50
   213  007F7E  6E05               	movwf	lcd_envia_byte@dado,c
   214  007F80  0E01               	movlw	1
   215  007F82  ECC4  F03E         	call	_lcd_envia_byte
   216                           
   217                           ;EX09.c: 26:     lcd_envia_byte(1,'0');
   218  007F86  0E30               	movlw	48
   219  007F88  6E05               	movwf	lcd_envia_byte@dado,c
   220  007F8A  0E01               	movlw	1
   221  007F8C  ECC4  F03E         	call	_lcd_envia_byte
   222                           
   223                           ;EX09.c: 28:     lcd_envia_byte(0,0xc3);
   224  007F90  0EC3               	movlw	195
   225  007F92  6E05               	movwf	lcd_envia_byte@dado,c
   226  007F94  0E00               	movlw	0
   227  007F96  ECC4  F03E         	call	_lcd_envia_byte
   228                           
   229                           ;EX09.c: 31:     lcd_envia_byte(1,'L');
   230  007F9A  0E4C               	movlw	76
   231  007F9C  6E05               	movwf	lcd_envia_byte@dado,c
   232  007F9E  0E01               	movlw	1
   233  007FA0  ECC4  F03E         	call	_lcd_envia_byte
   234                           
   235                           ;EX09.c: 32:     lcd_envia_byte(1,'C');
   236  007FA4  0E43               	movlw	67
   237  007FA6  6E05               	movwf	lcd_envia_byte@dado,c
   238  007FA8  0E01               	movlw	1
   239  007FAA  ECC4  F03E         	call	_lcd_envia_byte
   240                           
   241                           ;EX09.c: 33:     lcd_envia_byte(1,'D');
   242  007FAE  0E44               	movlw	68
   243  007FB0  6E05               	movwf	lcd_envia_byte@dado,c
   244  007FB2  0E01               	movlw	1
   245  007FB4  ECC4  F03E         	call	_lcd_envia_byte
   246                           
   247                           ;EX09.c: 34:     lcd_envia_byte(1,' ');
   248  007FB8  0E20               	movlw	32
   249  007FBA  6E05               	movwf	lcd_envia_byte@dado,c
   250  007FBC  0E01               	movlw	1
   251  007FBE  ECC4  F03E         	call	_lcd_envia_byte
   252                           
   253                           ;EX09.c: 35:     lcd_envia_byte(1,'4');
   254  007FC2  0E34               	movlw	52
   255  007FC4  6E05               	movwf	lcd_envia_byte@dado,c
   256  007FC6  0E01               	movlw	1
   257  007FC8  ECC4  F03E         	call	_lcd_envia_byte
   258                           
   259                           ;EX09.c: 36:     lcd_envia_byte(1,' ');
   260  007FCC  0E20               	movlw	32
   261  007FCE  6E05               	movwf	lcd_envia_byte@dado,c
   262  007FD0  0E01               	movlw	1
   263  007FD2  ECC4  F03E         	call	_lcd_envia_byte
   264                           
   265                           ;EX09.c: 37:     lcd_envia_byte(1,'B');
   266  007FD6  0E42               	movlw	66
   267  007FD8  6E05               	movwf	lcd_envia_byte@dado,c
   268  007FDA  0E01               	movlw	1
   269  007FDC  ECC4  F03E         	call	_lcd_envia_byte
   270                           
   271                           ;EX09.c: 38:     lcd_envia_byte(1,'I');
   272  007FE0  0E49               	movlw	73
   273  007FE2  6E05               	movwf	lcd_envia_byte@dado,c
   274  007FE4  0E01               	movlw	1
   275  007FE6  ECC4  F03E         	call	_lcd_envia_byte
   276                           
   277                           ;EX09.c: 39:     lcd_envia_byte(1,'T');
   278  007FEA  0E54               	movlw	84
   279  007FEC  6E05               	movwf	lcd_envia_byte@dado,c
   280  007FEE  0E01               	movlw	1
   281  007FF0  ECC4  F03E         	call	_lcd_envia_byte
   282                           
   283                           ;EX09.c: 40:     lcd_envia_byte(1,'S');
   284  007FF4  0E53               	movlw	83
   285  007FF6  6E05               	movwf	lcd_envia_byte@dado,c
   286  007FF8  0E01               	movlw	1
   287  007FFA  ECC4  F03E         	call	_lcd_envia_byte
   288  007FFE                     l11:
   289                           
   290                           ;EX09.c: 43:     {;EX09.c: 44:     }
   291  007FFE  D7FF               	goto	l11
   292  008000                     __end_of_main:
   293                           	opt callstack 0
   294                           
   295 ;; *************** function _lcd_ini *****************
   296 ;; Defined at:
   297 ;;		line 3 in file "LCD4b.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  i               1    5[COMRAM] unsigned char 
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   311 ;;      Params:         0       0       0       0       0       0       0
   312 ;;      Locals:         1       0       0       0       0       0       0
   313 ;;      Temps:          1       0       0       0       0       0       0
   314 ;;      Totals:         2       0       0       0       0       0       0
   315 ;;Total ram usage:        2 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    2
   318 ;; This function calls:
   319 ;;		_lcd_cmd
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text1
   326  007DA6                     __ptext1:
   327                           	opt callstack 0
   328  007DA6                     _lcd_ini:
   329                           	opt callstack 28
   330                           
   331                           ;LCD4b.c: 5: char i;;LCD4b.c: 7: TRISD = 0b00000000;
   332                           
   333                           ;incstack = 0
   334  007DA6  0E00               	movlw	0
   335  007DA8  6E95               	movwf	3989,c	;volatile
   336                           
   337                           ;LCD4b.c: 8: TRISEbits.TRISE1 = 0;
   338  007DAA  9296               	bcf	3990,1,c	;volatile
   339                           
   340                           ;LCD4b.c: 9: TRISEbits.TRISE0 = 0;
   341  007DAC  9096               	bcf	3990,0,c	;volatile
   342                           
   343                           ;LCD4b.c: 11: PORTD = 0b00000000;
   344  007DAE  0E00               	movlw	0
   345  007DB0  6E83               	movwf	3971,c	;volatile
   346                           
   347                           ;LCD4b.c: 12: PORTEbits.RE0 = 0;
   348  007DB2  9084               	bcf	3972,0,c	;volatile
   349                           
   350                           ;LCD4b.c: 13: PORTEbits.RE1 = 0;
   351  007DB4  9284               	bcf	3972,1,c	;volatile
   352                           
   353                           ;LCD4b.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
   354  007DB6  0E27               	movlw	39
   355  007DB8  6E05               	movwf	??_lcd_ini& (0+255),c
   356  007DBA  0EF5               	movlw	245
   357  007DBC                     u77:
   358  007DBC  2EE8               	decfsz	wreg,f,c
   359  007DBE  D7FE               	bra	u77
   360  007DC0  2E05               	decfsz	??_lcd_ini& (0+255),f,c
   361  007DC2  D7FC               	bra	u77
   362  007DC4  F000               	nop	
   363                           
   364                           ;LCD4b.c: 18: for(i=0;i<=2;i++)
   365  007DC6  0E00               	movlw	0
   366  007DC8  6E06               	movwf	lcd_ini@i,c
   367  007DCA                     l898:
   368                           
   369                           ;LCD4b.c: 19:    {;LCD4b.c: 20:    lcd_cmd(0x30);
   370  007DCA  0E30               	movlw	48
   371  007DCC  EC1B  F03F         	call	_lcd_cmd
   372                           
   373                           ;LCD4b.c: 21:    _delay((unsigned long)((5)*(8000000/4000.0)));
   374  007DD0  0E0D               	movlw	13
   375  007DD2  6E05               	movwf	??_lcd_ini& (0+255),c
   376  007DD4  0EFC               	movlw	252
   377  007DD6                     u87:
   378  007DD6  2EE8               	decfsz	wreg,f,c
   379  007DD8  D7FE               	bra	u87
   380  007DDA  2E05               	decfsz	??_lcd_ini& (0+255),f,c
   381  007DDC  D7FC               	bra	u87
   382                           
   383                           ;LCD4b.c: 22:    }
   384  007DDE  2A06               	incf	lcd_ini@i,f,c
   385  007DE0  0E02               	movlw	2
   386  007DE2  6406               	cpfsgt	lcd_ini@i,c
   387  007DE4  D7F2               	goto	l898
   388                           
   389                           ;LCD4b.c: 24:    lcd_cmd(0x02);
   390  007DE6  0E02               	movlw	2
   391  007DE8  EC1B  F03F         	call	_lcd_cmd
   392                           
   393                           ;LCD4b.c: 25:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   394  007DEC  0E1A               	movlw	26
   395  007DEE                     u97:
   396  007DEE  2EE8               	decfsz	wreg,f,c
   397  007DF0  D7FE               	bra	u97
   398  007DF2  D000               	nop2	
   399                           
   400                           ;LCD4b.c: 26:    lcd_cmd(0x28);
   401  007DF4  0E28               	movlw	40
   402  007DF6  EC1B  F03F         	call	_lcd_cmd
   403                           
   404                           ;LCD4b.c: 27:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   405  007DFA  0E1A               	movlw	26
   406  007DFC                     u107:
   407  007DFC  2EE8               	decfsz	wreg,f,c
   408  007DFE  D7FE               	bra	u107
   409  007E00  D000               	nop2	
   410                           
   411                           ;LCD4b.c: 28:    lcd_cmd(0x01);
   412  007E02  0E01               	movlw	1
   413  007E04  EC1B  F03F         	call	_lcd_cmd
   414                           
   415                           ;LCD4b.c: 29:    _delay((unsigned long)((2)*(8000000/4000.0)));
   416  007E08  0E06               	movlw	6
   417  007E0A  6E05               	movwf	??_lcd_ini& (0+255),c
   418  007E0C  0E30               	movlw	48
   419  007E0E                     u117:
   420  007E0E  2EE8               	decfsz	wreg,f,c
   421  007E10  D7FE               	bra	u117
   422  007E12  2E05               	decfsz	??_lcd_ini& (0+255),f,c
   423  007E14  D7FC               	bra	u117
   424  007E16  D000               	nop2	
   425                           
   426                           ;LCD4b.c: 30:    lcd_cmd(0x0C);
   427  007E18  0E0C               	movlw	12
   428  007E1A  EC1B  F03F         	call	_lcd_cmd
   429                           
   430                           ;LCD4b.c: 31:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   431  007E1E  0E1A               	movlw	26
   432  007E20                     u127:
   433  007E20  2EE8               	decfsz	wreg,f,c
   434  007E22  D7FE               	bra	u127
   435  007E24  D000               	nop2	
   436                           
   437                           ;LCD4b.c: 32:    lcd_cmd(0x06);
   438  007E26  0E06               	movlw	6
   439  007E28  EC1B  F03F         	call	_lcd_cmd
   440                           
   441                           ;LCD4b.c: 33:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   442  007E2C  0E1A               	movlw	26
   443  007E2E                     u137:
   444  007E2E  2EE8               	decfsz	wreg,f,c
   445  007E30  D7FE               	bra	u137
   446  007E32  D000               	nop2	
   447  007E34  0012               	return		;funcret
   448  007E36                     __end_of_lcd_ini:
   449                           	opt callstack 0
   450                           
   451 ;; *************** function _lcd_envia_byte *****************
   452 ;; Defined at:
   453 ;;		line 74 in file "LCD4b.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  nivel           1    wreg     unsigned char 
   456 ;;  dado            1    4[COMRAM] unsigned char 
   457 ;; Auto vars:     Size  Location     Type
   458 ;;  nivel           1    5[COMRAM] unsigned char 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, status,0, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   468 ;;      Params:         1       0       0       0       0       0       0
   469 ;;      Locals:         1       0       0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0
   471 ;;      Totals:         2       0       0       0       0       0       0
   472 ;;Total ram usage:        2 bytes
   473 ;; Hardware stack levels used:    1
   474 ;; Hardware stack levels required when called:    2
   475 ;; This function calls:
   476 ;;		_lcd_cmd
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text2
   483  007D88                     __ptext2:
   484                           	opt callstack 0
   485  007D88                     _lcd_envia_byte:
   486                           	opt callstack 28
   487                           
   488                           ;incstack = 0
   489                           ;lcd_envia_byte@nivel stored from wreg
   490  007D88  6E06               	movwf	lcd_envia_byte@nivel,c
   491                           
   492                           ;LCD4b.c: 74: void lcd_envia_byte(char nivel, char dado);LCD4b.c: 75: {;LCD4b.c: 76:    
      +                           PORTEbits.RE0 = nivel;
   493  007D8A  B006               	btfsc	lcd_envia_byte@nivel,0,c
   494  007D8C  D002               	bra	u65
   495  007D8E  9084               	bcf	3972,0,c	;volatile
   496  007D90  D001               	bra	u66
   497  007D92                     u65:
   498  007D92  8084               	bsf	3972,0,c	;volatile
   499  007D94                     u66:
   500                           
   501                           ;LCD4b.c: 77:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   502  007D94  0E42               	movlw	66
   503  007D96                     u147:
   504  007D96  2EE8               	decfsz	wreg,f,c
   505  007D98  D7FE               	bra	u147
   506  007D9A  D000               	nop2	
   507                           
   508                           ;LCD4b.c: 78:     PORTEbits.RE1 = 0;
   509  007D9C  9284               	bcf	3972,1,c	;volatile
   510                           
   511                           ;LCD4b.c: 79:     lcd_cmd(dado);
   512  007D9E  5005               	movf	lcd_envia_byte@dado,w,c
   513  007DA0  EC1B  F03F         	call	_lcd_cmd
   514  007DA4  0012               	return		;funcret
   515  007DA6                     __end_of_lcd_envia_byte:
   516                           	opt callstack 0
   517                           
   518 ;; *************** function _lcd_cmd *****************
   519 ;; Defined at:
   520 ;;		line 48 in file "LCD4b.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  cmd             1    wreg     unsigned char 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  cmd             1    3[COMRAM] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   534 ;;      Params:         0       0       0       0       0       0       0
   535 ;;      Locals:         1       0       0       0       0       0       0
   536 ;;      Temps:          1       0       0       0       0       0       0
   537 ;;      Totals:         2       0       0       0       0       0       0
   538 ;;Total ram usage:        2 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    1
   541 ;; This function calls:
   542 ;;		_set_bit
   543 ;; This function is called by:
   544 ;;		_lcd_ini
   545 ;;		_lcd_envia_byte
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text3
   550  007E36                     __ptext3:
   551                           	opt callstack 0
   552  007E36                     _lcd_cmd:
   553                           	opt callstack 28
   554                           
   555                           ;incstack = 0
   556                           ;lcd_cmd@cmd stored from wreg
   557  007E36  6E04               	movwf	lcd_cmd@cmd,c
   558                           
   559                           ;LCD4b.c: 48: void lcd_cmd(char cmd);LCD4b.c: 49: {;LCD4b.c: 52:     PORTDbits.RD4 = set
      +                          _bit(cmd,0b00010000);
   560  007E38  0E10               	movlw	16
   561  007E3A  6E01               	movwf	set_bit@comp,c
   562  007E3C  5004               	movf	lcd_cmd@cmd,w,c
   563  007E3E  ECBA  F03E         	call	_set_bit
   564  007E42  6E03               	movwf	??_lcd_cmd& (0+255),c
   565  007E44  3A03               	swapf	??_lcd_cmd,f,c
   566  007E46  5083               	movf	3971,w,c	;volatile
   567  007E48  1803               	xorwf	??_lcd_cmd,w,c
   568  007E4A  0BEF               	andlw	-17
   569  007E4C  1803               	xorwf	??_lcd_cmd,w,c
   570  007E4E  6E83               	movwf	3971,c	;volatile
   571                           
   572                           ;LCD4b.c: 53:     PORTDbits.RD5 = set_bit(cmd,0b00100000);
   573  007E50  0E20               	movlw	32
   574  007E52  6E01               	movwf	set_bit@comp,c
   575  007E54  5004               	movf	lcd_cmd@cmd,w,c
   576  007E56  ECBA  F03E         	call	_set_bit
   577  007E5A  6E03               	movwf	??_lcd_cmd& (0+255),c
   578  007E5C  3A03               	swapf	??_lcd_cmd,f,c
   579  007E5E  4603               	rlncf	??_lcd_cmd,f,c
   580  007E60  5083               	movf	3971,w,c	;volatile
   581  007E62  1803               	xorwf	??_lcd_cmd,w,c
   582  007E64  0BDF               	andlw	-33
   583  007E66  1803               	xorwf	??_lcd_cmd,w,c
   584  007E68  6E83               	movwf	3971,c	;volatile
   585                           
   586                           ;LCD4b.c: 54:     PORTDbits.RD6 = set_bit(cmd,0b01000000);
   587  007E6A  0E40               	movlw	64
   588  007E6C  6E01               	movwf	set_bit@comp,c
   589  007E6E  5004               	movf	lcd_cmd@cmd,w,c
   590  007E70  ECBA  F03E         	call	_set_bit
   591  007E74  6E03               	movwf	??_lcd_cmd& (0+255),c
   592  007E76  3A03               	swapf	??_lcd_cmd,f,c
   593  007E78  4603               	rlncf	??_lcd_cmd,f,c
   594  007E7A  4603               	rlncf	??_lcd_cmd,f,c
   595  007E7C  5083               	movf	3971,w,c	;volatile
   596  007E7E  1803               	xorwf	??_lcd_cmd,w,c
   597  007E80  0BBF               	andlw	-65
   598  007E82  1803               	xorwf	??_lcd_cmd,w,c
   599  007E84  6E83               	movwf	3971,c	;volatile
   600                           
   601                           ;LCD4b.c: 55:     PORTDbits.RD7 = set_bit(cmd,0b10000000);
   602  007E86  0E80               	movlw	128
   603  007E88  6E01               	movwf	set_bit@comp,c
   604  007E8A  5004               	movf	lcd_cmd@cmd,w,c
   605  007E8C  ECBA  F03E         	call	_set_bit
   606  007E90  6E03               	movwf	??_lcd_cmd& (0+255),c
   607  007E92  3203               	rrcf	??_lcd_cmd,f,c
   608  007E94  3203               	rrcf	??_lcd_cmd,f,c
   609  007E96  5083               	movf	3971,w,c	;volatile
   610  007E98  1803               	xorwf	??_lcd_cmd,w,c
   611  007E9A  0B7F               	andlw	-129
   612  007E9C  1803               	xorwf	??_lcd_cmd,w,c
   613  007E9E  6E83               	movwf	3971,c	;volatile
   614                           
   615                           ;LCD4b.c: 57:     PORTEbits.RE1 = 1;
   616  007EA0  8284               	bsf	3972,1,c	;volatile
   617                           
   618                           ;LCD4b.c: 58:     PORTEbits.RE1 = 0;
   619  007EA2  9284               	bcf	3972,1,c	;volatile
   620                           
   621                           ;LCD4b.c: 60:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   622  007EA4  0E42               	movlw	66
   623  007EA6                     u157:
   624  007EA6  2EE8               	decfsz	wreg,f,c
   625  007EA8  D7FE               	bra	u157
   626  007EAA  D000               	nop2	
   627                           
   628                           ;LCD4b.c: 64:     PORTDbits.RD4 = set_bit(cmd,0b00000001);
   629  007EAC  0E01               	movlw	1
   630  007EAE  6E01               	movwf	set_bit@comp,c
   631  007EB0  5004               	movf	lcd_cmd@cmd,w,c
   632  007EB2  ECBA  F03E         	call	_set_bit
   633  007EB6  6E03               	movwf	??_lcd_cmd& (0+255),c
   634  007EB8  3A03               	swapf	??_lcd_cmd,f,c
   635  007EBA  5083               	movf	3971,w,c	;volatile
   636  007EBC  1803               	xorwf	??_lcd_cmd,w,c
   637  007EBE  0BEF               	andlw	-17
   638  007EC0  1803               	xorwf	??_lcd_cmd,w,c
   639  007EC2  6E83               	movwf	3971,c	;volatile
   640                           
   641                           ;LCD4b.c: 65:     PORTDbits.RD5 = set_bit(cmd,0b00000010);
   642  007EC4  0E02               	movlw	2
   643  007EC6  6E01               	movwf	set_bit@comp,c
   644  007EC8  5004               	movf	lcd_cmd@cmd,w,c
   645  007ECA  ECBA  F03E         	call	_set_bit
   646  007ECE  6E03               	movwf	??_lcd_cmd& (0+255),c
   647  007ED0  3A03               	swapf	??_lcd_cmd,f,c
   648  007ED2  4603               	rlncf	??_lcd_cmd,f,c
   649  007ED4  5083               	movf	3971,w,c	;volatile
   650  007ED6  1803               	xorwf	??_lcd_cmd,w,c
   651  007ED8  0BDF               	andlw	-33
   652  007EDA  1803               	xorwf	??_lcd_cmd,w,c
   653  007EDC  6E83               	movwf	3971,c	;volatile
   654                           
   655                           ;LCD4b.c: 66:     PORTDbits.RD6 = set_bit(cmd,0b00000100);
   656  007EDE  0E04               	movlw	4
   657  007EE0  6E01               	movwf	set_bit@comp,c
   658  007EE2  5004               	movf	lcd_cmd@cmd,w,c
   659  007EE4  ECBA  F03E         	call	_set_bit
   660  007EE8  6E03               	movwf	??_lcd_cmd& (0+255),c
   661  007EEA  3A03               	swapf	??_lcd_cmd,f,c
   662  007EEC  4603               	rlncf	??_lcd_cmd,f,c
   663  007EEE  4603               	rlncf	??_lcd_cmd,f,c
   664  007EF0  5083               	movf	3971,w,c	;volatile
   665  007EF2  1803               	xorwf	??_lcd_cmd,w,c
   666  007EF4  0BBF               	andlw	-65
   667  007EF6  1803               	xorwf	??_lcd_cmd,w,c
   668  007EF8  6E83               	movwf	3971,c	;volatile
   669                           
   670                           ;LCD4b.c: 67:     PORTDbits.RD7 = set_bit(cmd,0b00001000);
   671  007EFA  0E08               	movlw	8
   672  007EFC  6E01               	movwf	set_bit@comp,c
   673  007EFE  5004               	movf	lcd_cmd@cmd,w,c
   674  007F00  ECBA  F03E         	call	_set_bit
   675  007F04  6E03               	movwf	??_lcd_cmd& (0+255),c
   676  007F06  3203               	rrcf	??_lcd_cmd,f,c
   677  007F08  3203               	rrcf	??_lcd_cmd,f,c
   678  007F0A  5083               	movf	3971,w,c	;volatile
   679  007F0C  1803               	xorwf	??_lcd_cmd,w,c
   680  007F0E  0B7F               	andlw	-129
   681  007F10  1803               	xorwf	??_lcd_cmd,w,c
   682  007F12  6E83               	movwf	3971,c	;volatile
   683                           
   684                           ;LCD4b.c: 69:     PORTEbits.RE1 = 1;
   685  007F14  8284               	bsf	3972,1,c	;volatile
   686                           
   687                           ;LCD4b.c: 70:     PORTEbits.RE1 = 0;
   688  007F16  9284               	bcf	3972,1,c	;volatile
   689  007F18  0012               	return		;funcret
   690  007F1A                     __end_of_lcd_cmd:
   691                           	opt callstack 0
   692                           
   693 ;; *************** function _set_bit *****************
   694 ;; Defined at:
   695 ;;		line 38 in file "LCD4b.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  cmd             1    wreg     unsigned char 
   698 ;;  comp            1    0[COMRAM] unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  cmd             1    1[COMRAM] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      unsigned char 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   710 ;;      Params:         1       0       0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0
   713 ;;      Totals:         2       0       0       0       0       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_lcd_cmd
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text4
   724  007D74                     __ptext4:
   725                           	opt callstack 0
   726  007D74                     _set_bit:
   727                           	opt callstack 28
   728                           
   729                           ;incstack = 0
   730                           ;set_bit@cmd stored from wreg
   731  007D74  6E02               	movwf	set_bit@cmd,c
   732                           
   733                           ;LCD4b.c: 38: char set_bit(char cmd, char comp);LCD4b.c: 39: {;LCD4b.c: 41:     if ((cmd
      +                           & comp) >= 1)
   734  007D76  5002               	movf	set_bit@cmd,w,c
   735  007D78  1401               	andwf	set_bit@comp,w,c
   736  007D7A  0900               	iorlw	0
   737  007D7C  B4D8               	btfsc	status,2,c
   738  007D7E  D002               	goto	l856
   739                           
   740                           ;LCD4b.c: 42:         return 1;
   741  007D80  0E01               	movlw	1
   742  007D82  0012               	return	
   743  007D84                     l856:
   744                           
   745                           ;LCD4b.c: 44:         return 0;
   746  007D84  0E00               	movlw	0
   747  007D86  0012               	return		;funcret
   748  007D88                     __end_of_set_bit:
   749                           	opt callstack 0
   750  0000                     
   751                           	psect	rparam
   752  0000                     tosu	equ	0xFFF
   753                           tosh	equ	0xFFE
   754                           tosl	equ	0xFFD
   755                           stkptr	equ	0xFFC
   756                           pclatu	equ	0xFFB
   757                           pclath	equ	0xFFA
   758                           pcl	equ	0xFF9
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           prodh	equ	0xFF4
   764                           prodl	equ	0xFF3
   765                           indf0	equ	0xFEF
   766                           postinc0	equ	0xFEE
   767                           postdec0	equ	0xFED
   768                           preinc0	equ	0xFEC
   769                           plusw0	equ	0xFEB
   770                           fsr0h	equ	0xFEA
   771                           fsr0l	equ	0xFE9
   772                           wreg	equ	0xFE8
   773                           indf1	equ	0xFE7
   774                           postinc1	equ	0xFE6
   775                           postdec1	equ	0xFE5
   776                           preinc1	equ	0xFE4
   777                           plusw1	equ	0xFE3
   778                           fsr1h	equ	0xFE2
   779                           fsr1l	equ	0xFE1
   780                           bsr	equ	0xFE0
   781                           indf2	equ	0xFDF
   782                           postinc2	equ	0xFDE
   783                           postdec2	equ	0xFDD
   784                           preinc2	equ	0xFDC
   785                           plusw2	equ	0xFDB
   786                           fsr2h	equ	0xFDA
   787                           fsr2l	equ	0xFD9
   788                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      6       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_envia_byte
    _main->_lcd_ini
    _lcd_ini->_lcd_cmd
    _lcd_envia_byte->_lcd_cmd
    _lcd_cmd->_set_bit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3418
                     _lcd_envia_byte
                            _lcd_ini
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0     874
                                              4 COMRAM     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_envia_byte                                       2     1      1    2544
                                              4 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     828
                                              2 COMRAM     2     2      0
                            _set_bit
 ---------------------------------------------------------------------------------
 (3) _set_bit                                              2     1      1     652
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_envia_byte
     _lcd_cmd
       _set_bit
   _lcd_ini
     _lcd_cmd
       _set_bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      6       6       1        4.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 14:21:59 2019

                     l11 7FFE                       u65 7D92                       u66 7D94  
                     u77 7DBC                       u87 7DD6                       u97 7DEE  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000              __CFG_OSC$HS 000000  
                    l856 7D84                      l898 7DCA             __CFG_CPB$OFF 000000  
                    u107 7DFC                      u117 7E0E                      u127 7E20  
                    u137 7E2E                      u147 7D96                      u157 7EA6  
           __CFG_CPD$OFF 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000             __CFG_PWRT$ON 000000                     _main 7F1A  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000          __end_of_lcd_cmd 7F1A          __end_of_lcd_ini 7E36  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000          __end_of_set_bit 7D88  
                  status 000FD8          __initialization 7D6E             __end_of_main 8000  
                 ??_main 0007            __activetblptr 000000                   _ADCON1 000FC1  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000         ??_lcd_envia_byte 0006  
              ??_lcd_cmd 0003                ??_lcd_ini 0005                ??_set_bit 0002  
             __accesstop 0080  __end_of__initialization 7D6E          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000              set_bit@comp 0001                  __pcinit 7D6E  
                __ramtop 0600                  __ptext0 7F1A                  __ptext1 7DA6  
                __ptext2 7D88                  __ptext3 7E36                  __ptext4 7D74  
                _lcd_cmd 7E36                  _lcd_ini 7DA6                  _set_bit 7D74  
   end_of_initialization 7D6E       lcd_envia_byte@dado 0005                _PORTDbits 000F83  
              _PORTEbits 000F84                _TRISEbits 000F96               lcd_cmd@cmd 0004  
    start_initialization 7D6E         __CFG_LPT1OSC$OFF 000000  __size_of_lcd_envia_byte 001E  
      __CFG_CCP2MX$PORTC 000000                 ?_lcd_cmd 0001                 ?_lcd_ini 0001  
               ?_set_bit 0001               set_bit@cmd 0002         __CFG_WDTPS$32768 000000  
               __Hrparam 0000                 __Lrparam 0000         __size_of_lcd_cmd 00E4  
       __size_of_lcd_ini 0090         __size_of_set_bit 0014           _lcd_envia_byte 7D88  
          __size_of_main 00E6                 lcd_ini@i 0006   __end_of_lcd_envia_byte 7DA6  
    lcd_envia_byte@nivel 0006          ?_lcd_envia_byte 0005  
