

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Apr 08 13:46:35 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4520 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _RCREG	set	4014
    52  0000                     _TXREG	set	4013
    53  0000                     _SPBRG	set	4015
    54  0000                     _BAUDCTLbits	set	4024
    55  0000                     _RCSTAbits	set	4011
    56  0000                     _TXSTAbits	set	4012
    57  0000                     _PORTBbits	set	3969
    58  0000                     _ADCON1	set	4033
    59  0000                     _PORTB	set	3969
    60  0000                     _TRISB	set	3987
    61  0000                     _TRMT	set	32097
    62  0000                     _RCIF	set	31989
    63                           
    64                           	psect	smallconst
    65  000600                     __psmallconst:
    66                           	opt callstack 0
    67  000600  00                 	db	0
    68  000601                     STR_1:
    69  000601  4D                 	db	77	;'M'
    70  000602  69                 	db	105	;'i'
    71  000603  63                 	db	99	;'c'
    72  000604  72                 	db	114	;'r'
    73  000605  6F                 	db	111	;'o'
    74  000606  63                 	db	99	;'c'
    75  000607  6F                 	db	111	;'o'
    76  000608  6E                 	db	110	;'n'
    77  000609  74                 	db	116	;'t'
    78  00060A  72                 	db	114	;'r'
    79  00060B  6F                 	db	111	;'o'
    80  00060C  6C                 	db	108	;'l'
    81  00060D  61                 	db	97	;'a'
    82  00060E  64                 	db	100	;'d'
    83  00060F  6F                 	db	111	;'o'
    84  000610  72                 	db	114	;'r'
    85  000611  20                 	db	32
    86  000612  50                 	db	80	;'P'
    87  000613  49                 	db	73	;'I'
    88  000614  43                 	db	67	;'C'
    89  000615  31                 	db	49	;'1'
    90  000616  38                 	db	56	;'8'
    91  000617  46                 	db	70	;'F'
    92  000618  34                 	db	52	;'4'
    93  000619  35                 	db	53	;'5'
    94  00061A  32                 	db	50	;'2'
    95  00061B  30                 	db	48	;'0'
    96  00061C  0D                 	db	13
    97  00061D  0A                 	db	10
    98  00061E  00                 	db	0
    99  00061F                     STR_2:
   100  00061F  4C                 	db	76	;'L'
   101  000620  44                 	db	68	;'D'
   102  000621  31                 	db	49	;'1'
   103  000622  20                 	db	32
   104  000623  2D                 	db	45
   105  000624  20                 	db	32
   106  000625  41                 	db	65	;'A'
   107  000626  43                 	db	67	;'C'
   108  000627  45                 	db	69	;'E'
   109  000628  4E                 	db	78	;'N'
   110  000629  44                 	db	68	;'D'
   111  00062A  45                 	db	69	;'E'
   112  00062B  20                 	db	32
   113  00062C  4C                 	db	76	;'L'
   114  00062D  45                 	db	69	;'E'
   115  00062E  44                 	db	68	;'D'
   116  00062F  2E                 	db	46
   117  000630  0D                 	db	13
   118  000631  0A                 	db	10
   119  000632  00                 	db	0
   120  000633                     STR_3:
   121  000633  44                 	db	68	;'D'
   122  000634  4C                 	db	76	;'L'
   123  000635  31                 	db	49	;'1'
   124  000636  20                 	db	32
   125  000637  2D                 	db	45
   126  000638  20                 	db	32
   127  000639  41                 	db	65	;'A'
   128  00063A  50                 	db	80	;'P'
   129  00063B  41                 	db	65	;'A'
   130  00063C  47                 	db	71	;'G'
   131  00063D  41                 	db	65	;'A'
   132  00063E  20                 	db	32
   133  00063F  4C                 	db	76	;'L'
   134  000640  45                 	db	69	;'E'
   135  000641  44                 	db	68	;'D'
   136  000642  2E                 	db	46
   137  000643  0D                 	db	13
   138  000644  0A                 	db	10
   139  000645  00                 	db	0
   140  000646                     STR_5:
   141  000646  4C                 	db	76	;'L'
   142  000647  30                 	db	48	;'0'
   143  000648  00                 	db	0
   144  000649                     STR_4:
   145  000649  4C                 	db	76	;'L'
   146  00064A  31                 	db	49	;'1'
   147  00064B  00                 	db	0
   148                           
   149                           ; #config settings
   150  00064C  00                 	db	0	; dummy byte at the end
   151  0000                     
   152                           	psect	cinit
   153  00072C                     __pcinit:
   154                           	opt callstack 0
   155  00072C                     start_initialization:
   156                           	opt callstack 0
   157  00072C                     __initialization:
   158                           	opt callstack 0
   159                           
   160                           ; Clear objects allocated to COMRAM (5 bytes)
   161  00072C  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
   162  00072E  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   163  000730  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   164  000732  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   165  000734  6A01               	clrf	__pbssCOMRAM& (0+255),c
   166  000736                     end_of_initialization:
   167                           	opt callstack 0
   168  000736                     __end_of__initialization:
   169                           	opt callstack 0
   170  000736  0E00               	movlw	low (__Lsmallconst shr (0+16))
   171  000738  6EF8               	movwf	tblptru,c
   172  00073A  0E06               	movlw	high __Lsmallconst
   173  00073C  6EF7               	movwf	tblptrh,c
   174  00073E  0100               	movlb	0
   175  000740  EF27  F003         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178  000001                     __pbssCOMRAM:
   179                           	opt callstack 0
   180  000001                     _dado:
   181                           	opt callstack 0
   182  000001                     	ds	4
   183  000005                     _i:
   184                           	opt callstack 0
   185  000005                     	ds	1
   186                           
   187                           	psect	cstackCOMRAM
   188  000006                     __pcstackCOMRAM:
   189                           	opt callstack 0
   190  000006                     escreve_EUSART@c:
   191                           	opt callstack 0
   192                           
   193                           ; 1 bytes @ 0x0
   194  000006                     	ds	1
   195  000007                     string_EUSART@str:
   196                           	opt callstack 0
   197                           
   198                           ; 2 bytes @ 0x1
   199  000007                     	ds	2
   200  000009                     
   201                           ; 1 bytes @ 0x3
   202  000009                     	ds	1
   203                           
   204 ;;
   205 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   206 ;;
   207 ;; *************** function _main *****************
   208 ;; Defined at:
   209 ;;		line 17 in file "EX23.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   223 ;;      Params:         0       0       0       0       0       0       0
   224 ;;      Locals:         0       0       0       0       0       0       0
   225 ;;      Temps:          1       0       0       0       0       0       0
   226 ;;      Totals:         1       0       0       0       0       0       0
   227 ;;Total ram usage:        1 bytes
   228 ;; Hardware stack levels required when called:    2
   229 ;; This function calls:
   230 ;;		_EUSART_le
   231 ;;		_init_EUSART
   232 ;;		_string_EUSART
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text0
   239  00064E                     __ptext0:
   240                           	opt callstack 0
   241  00064E                     _main:
   242                           	opt callstack 29
   243                           
   244                           ;EX23.c: 19:     TRISB = 0b00000000;
   245                           
   246                           ;incstack = 0
   247  00064E  0E00               	movlw	0
   248  000650  6E93               	movwf	3987,c	;volatile
   249                           
   250                           ;EX23.c: 20:     PORTB = 0b00000000;
   251  000652  0E00               	movlw	0
   252  000654  6E81               	movwf	3969,c	;volatile
   253                           
   254                           ;EX23.c: 22:     ADCON1 = 0x0F;
   255  000656  0E0F               	movlw	15
   256  000658  6EC1               	movwf	4033,c	;volatile
   257                           
   258                           ;EX23.c: 24:     init_EUSART();
   259  00065A  ECA2  F003         	call	_init_EUSART	;wreg free
   260                           
   261                           ;EX23.c: 27:     string_EUSART("Microcontrolador PIC18F4520\r\n");
   262  00065E  0E01               	movlw	low STR_1
   263  000660  6E07               	movwf	string_EUSART@str,c
   264  000662  0E06               	movlw	high STR_1
   265  000664  6E08               	movwf	string_EUSART@str+1,c
   266  000666  EC81  F003         	call	_string_EUSART	;wreg free
   267                           
   268                           ;EX23.c: 28:     string_EUSART("LD1 - ACENDE LED.\r\n");
   269  00066A  0E1F               	movlw	low STR_2
   270  00066C  6E07               	movwf	string_EUSART@str,c
   271  00066E  0E06               	movlw	high STR_2
   272  000670  6E08               	movwf	string_EUSART@str+1,c
   273  000672  EC81  F003         	call	_string_EUSART	;wreg free
   274                           
   275                           ;EX23.c: 29:     string_EUSART("DL1 - APAGA LED.\r\n");
   276  000676  0E33               	movlw	low STR_3
   277  000678  6E07               	movwf	string_EUSART@str,c
   278  00067A  0E06               	movlw	high STR_3
   279  00067C  6E08               	movwf	string_EUSART@str+1,c
   280  00067E  EC81  F003         	call	_string_EUSART	;wreg free
   281  000682                     l824:
   282                           
   283                           ;EX23.c: 32:     {;EX23.c: 33:         if (RCIF)
   284  000682  AA9E               	btfss	3998,5,c	;volatile
   285  000684  D7FE               	goto	l824
   286                           
   287                           ;EX23.c: 35:         {;EX23.c: 36:            dado[i] = EUSART_le();
   288  000686  0E01               	movlw	low _dado
   289  000688  2405               	addwf	_i,w,c
   290  00068A  6ED9               	movwf	fsr2l,c
   291  00068C  6ADA               	clrf	fsr2h,c
   292  00068E  0E00               	movlw	high _dado
   293  000690  22DA               	addwfc	fsr2h,f,c
   294  000692  ECB1  F003         	call	_EUSART_le	;wreg free
   295  000696  6EDF               	movwf	indf2,c
   296                           
   297                           ;EX23.c: 39:            if (dado[i] == 0x0D)
   298  000698  0E01               	movlw	low _dado
   299  00069A  2405               	addwf	_i,w,c
   300  00069C  6ED9               	movwf	fsr2l,c
   301  00069E  6ADA               	clrf	fsr2h,c
   302  0006A0  0E00               	movlw	high _dado
   303  0006A2  22DA               	addwfc	fsr2h,f,c
   304  0006A4  0E0D               	movlw	13
   305  0006A6  18DE               	xorwf	postinc2,w,c
   306  0006A8  A4D8               	btfss	status,2,c
   307  0006AA  D029               	goto	l852
   308                           
   309                           ;EX23.c: 40:             {;EX23.c: 42:             if (dado[0] == 'L' && dado[1] == 'D' 
      +                          && dado[2] == '1')
   310  0006AC  0E4C               	movlw	76
   311  0006AE  1801               	xorwf	_dado,w,c
   312  0006B0  A4D8               	btfss	status,2,c
   313  0006B2  D00F               	goto	l840
   314  0006B4  0E44               	movlw	68
   315  0006B6  1802               	xorwf	_dado+1,w,c
   316  0006B8  A4D8               	btfss	status,2,c
   317  0006BA  D00B               	goto	l840
   318  0006BC  0E31               	movlw	49
   319  0006BE  1803               	xorwf	_dado+2,w,c
   320  0006C0  A4D8               	btfss	status,2,c
   321  0006C2  D007               	goto	l840
   322                           
   323                           ;EX23.c: 43:             {;EX23.c: 44:                  PORTBbits.RB0 = 1;
   324  0006C4  8081               	bsf	3969,0,c	;volatile
   325                           
   326                           ;EX23.c: 45:                  string_EUSART("L1");
   327  0006C6  0E49               	movlw	low STR_4
   328  0006C8  6E07               	movwf	string_EUSART@str,c
   329  0006CA  0E06               	movlw	high STR_4
   330  0006CC  6E08               	movwf	string_EUSART@str+1,c
   331  0006CE  EC81  F003         	call	_string_EUSART	;wreg free
   332  0006D2                     l840:
   333                           
   334                           ;EX23.c: 48:             if (dado[0] == 'D' && dado[1] == 'L' && dado[2] == '1')
   335  0006D2  0E44               	movlw	68
   336  0006D4  1801               	xorwf	_dado,w,c
   337  0006D6  A4D8               	btfss	status,2,c
   338  0006D8  D00F               	goto	l850
   339  0006DA  0E4C               	movlw	76
   340  0006DC  1802               	xorwf	_dado+1,w,c
   341  0006DE  A4D8               	btfss	status,2,c
   342  0006E0  D00B               	goto	l850
   343  0006E2  0E31               	movlw	49
   344  0006E4  1803               	xorwf	_dado+2,w,c
   345  0006E6  A4D8               	btfss	status,2,c
   346  0006E8  D007               	goto	l850
   347                           
   348                           ;EX23.c: 49:             {;EX23.c: 50:                  PORTBbits.RB0 = 0;
   349  0006EA  9081               	bcf	3969,0,c	;volatile
   350                           
   351                           ;EX23.c: 51:                  string_EUSART("L0");
   352  0006EC  0E46               	movlw	low STR_5
   353  0006EE  6E07               	movwf	string_EUSART@str,c
   354  0006F0  0E06               	movlw	high STR_5
   355  0006F2  6E08               	movwf	string_EUSART@str+1,c
   356  0006F4  EC81  F003         	call	_string_EUSART	;wreg free
   357  0006F8                     l850:
   358                           
   359                           ;EX23.c: 54:             i=0;
   360  0006F8  0E00               	movlw	0
   361  0006FA  6E05               	movwf	_i,c
   362                           
   363                           ;EX23.c: 55:             }
   364  0006FC  D7C2               	goto	l824
   365  0006FE                     l852:
   366  0006FE  2A05               	incf	_i,f,c
   367  000700  D7C0               	goto	l824
   368  000702                     __end_of_main:
   369                           	opt callstack 0
   370                           
   371 ;; *************** function _string_EUSART *****************
   372 ;; Defined at:
   373 ;;		line 85 in file "EX23.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  str             2    1[COMRAM] PTR unsigned char 
   376 ;;		 -> STR_5(3), STR_4(3), STR_3(19), STR_2(20), 
   377 ;;		 -> STR_1(30), 
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   389 ;;      Params:         2       0       0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0       0       0
   392 ;;      Totals:         2       0       0       0       0       0       0
   393 ;;Total ram usage:        2 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; Hardware stack levels required when called:    1
   396 ;; This function calls:
   397 ;;		_escreve_EUSART
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text1
   404  000702                     __ptext1:
   405                           	opt callstack 0
   406  000702                     _string_EUSART:
   407                           	opt callstack 29
   408                           
   409                           ;EX23.c: 85: void string_EUSART(char *str);EX23.c: 86: {;EX23.c: 87:   while(*str!='\0')
   410                           
   411                           ;incstack = 0
   412  000702  D00A               	goto	l812
   413  000704                     l808:
   414                           
   415                           ;EX23.c: 88:   {;EX23.c: 89:       escreve_EUSART(*str);
   416  000704  C007  FFF6         	movff	string_EUSART@str,tblptrl
   417  000708  C008  FFF7         	movff	string_EUSART@str+1,tblptrh
   418  00070C                     	if	0	;tblptru may be non-zero
   419  00070C                     	endif
   420  00070C                     	if	0	;tblptru may be non-zero
   421  00070C                     	endif
   422  00070C  0008               	tblrd		*
   423  00070E  50F5               	movf	tablat,w,c
   424  000710  ECAB  F003         	call	_escreve_EUSART
   425                           
   426                           ;EX23.c: 90:       str++;
   427  000714  4A07               	infsnz	string_EUSART@str,f,c
   428  000716  2A08               	incf	string_EUSART@str+1,f,c
   429  000718                     l812:
   430                           
   431                           ;EX23.c: 87:   while(*str!='\0')
   432  000718  C007  FFF6         	movff	string_EUSART@str,tblptrl
   433  00071C  C008  FFF7         	movff	string_EUSART@str+1,tblptrh
   434  000720                     	if	0	;tblptru may be non-zero
   435  000720                     	endif
   436  000720                     	if	0	;tblptru may be non-zero
   437  000720                     	endif
   438  000720  0008               	tblrd		*
   439  000722  50F5               	movf	tablat,w,c
   440  000724  0900               	iorlw	0
   441  000726  B4D8               	btfsc	status,2,c
   442  000728  0012               	return	
   443  00072A  D7EC               	goto	l808
   444  00072C                     __end_of_string_EUSART:
   445                           	opt callstack 0
   446                           
   447 ;; *************** function _escreve_EUSART *****************
   448 ;; Defined at:
   449 ;;		line 78 in file "EX23.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;  c               1    wreg     unsigned char 
   452 ;; Auto vars:     Size  Location     Type
   453 ;;  c               1    0[COMRAM] unsigned char 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   463 ;;      Params:         0       0       0       0       0       0       0
   464 ;;      Locals:         1       0       0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0
   466 ;;      Totals:         1       0       0       0       0       0       0
   467 ;;Total ram usage:        1 bytes
   468 ;; Hardware stack levels used:    1
   469 ;; This function calls:
   470 ;;		Nothing
   471 ;; This function is called by:
   472 ;;		_string_EUSART
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text2
   477  000756                     __ptext2:
   478                           	opt callstack 0
   479  000756                     _escreve_EUSART:
   480                           	opt callstack 29
   481                           
   482                           ;incstack = 0
   483                           ;escreve_EUSART@c stored from wreg
   484  000756  6E06               	movwf	escreve_EUSART@c,c
   485  000758                     
   486                           ;EX23.c: 78: void escreve_EUSART(char c);EX23.c: 79: {;EX23.c: 80:   while(!TRMT);
   487  000758  A2AC               	btfss	4012,1,c	;volatile
   488  00075A  D7FE               	goto	l744
   489                           
   490                           ;EX23.c: 81:   TXREG = c;
   491  00075C  C006  FFAD         	movff	escreve_EUSART@c,4013	;volatile
   492  000760  0012               	return		;funcret
   493  000762                     __end_of_escreve_EUSART:
   494                           	opt callstack 0
   495                           
   496 ;; *************** function _init_EUSART *****************
   497 ;; Defined at:
   498 ;;		line 64 in file "EX23.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           	psect	text3
   526  000744                     __ptext3:
   527                           	opt callstack 0
   528  000744                     _init_EUSART:
   529                           	opt callstack 30
   530                           
   531                           ;EX23.c: 66:     TXSTAbits.TXEN = 1;
   532                           
   533                           ;incstack = 0
   534  000744  8AAC               	bsf	4012,5,c	;volatile
   535                           
   536                           ;EX23.c: 67:     RCSTAbits.CREN = 1;
   537  000746  88AB               	bsf	4011,4,c	;volatile
   538                           
   539                           ;EX23.c: 68:     TXSTAbits.SYNC = 0;
   540  000748  98AC               	bcf	4012,4,c	;volatile
   541                           
   542                           ;EX23.c: 69:     RCSTAbits.SPEN = 1;
   543  00074A  8EAB               	bsf	4011,7,c	;volatile
   544                           
   545                           ;EX23.c: 71:     TXSTAbits.BRGH = 0;
   546  00074C  94AC               	bcf	4012,2,c	;volatile
   547                           
   548                           ;EX23.c: 72:     BAUDCTLbits.BRG16 = 0;
   549  00074E  96B8               	bcf	4024,3,c	;volatile
   550                           
   551                           ;EX23.c: 74:     SPBRG = 12;
   552  000750  0E0C               	movlw	12
   553  000752  6EAF               	movwf	4015,c	;volatile
   554  000754  0012               	return		;funcret
   555  000756                     __end_of_init_EUSART:
   556                           	opt callstack 0
   557                           
   558 ;; *************** function _EUSART_le *****************
   559 ;; Defined at:
   560 ;;		line 95 in file "EX23.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      unsigned char 
   567 ;; Registers used:
   568 ;;		wreg, status,2
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   574 ;;      Params:         0       0       0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text4
   588  000762                     __ptext4:
   589                           	opt callstack 0
   590  000762                     _EUSART_le:
   591                           	opt callstack 30
   592                           
   593                           ;EX23.c: 97:   while(!RCIF);
   594                           
   595                           ;incstack = 0
   596  000762  AA9E               	btfss	3998,5,c	;volatile
   597  000764  D7FE               	goto	_EUSART_le
   598                           
   599                           ;EX23.c: 98:   return RCREG;
   600  000766  50AE               	movf	4014,w,c	;volatile
   601  000768  0012               	return		;funcret
   602  00076A                     __end_of_EUSART_le:
   603                           	opt callstack 0
   604                           
   605                           	psect	rparam
   606  0000                     tosu	equ	0xFFF
   607                           tosh	equ	0xFFE
   608                           tosl	equ	0xFFD
   609                           stkptr	equ	0xFFC
   610                           pclatu	equ	0xFFB
   611                           pclath	equ	0xFFA
   612                           pcl	equ	0xFF9
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           prodh	equ	0xFF4
   618                           prodl	equ	0xFF3
   619                           indf0	equ	0xFEF
   620                           postinc0	equ	0xFEE
   621                           postdec0	equ	0xFED
   622                           preinc0	equ	0xFEC
   623                           plusw0	equ	0xFEB
   624                           fsr0h	equ	0xFEA
   625                           fsr0l	equ	0xFE9
   626                           wreg	equ	0xFE8
   627                           indf1	equ	0xFE7
   628                           postinc1	equ	0xFE6
   629                           postdec1	equ	0xFE5
   630                           preinc1	equ	0xFE4
   631                           plusw1	equ	0xFE3
   632                           fsr1h	equ	0xFE2
   633                           fsr1l	equ	0xFE1
   634                           bsr	equ	0xFE0
   635                           indf2	equ	0xFDF
   636                           postinc2	equ	0xFDE
   637                           postdec2	equ	0xFDD
   638                           preinc2	equ	0xFDC
   639                           plusw2	equ	0xFDB
   640                           fsr2h	equ	0xFDA
   641                           fsr2l	equ	0xFD9
   642                           status	equ	0xFD8


Data Sizes:
    Strings     75
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      4       9
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    string_EUSART@str	PTR unsigned char  size(2) Largest target is 30
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[19]), STR_2(CODE[20]), 
		 -> STR_1(CODE[30]), 


Critical Paths under _main in COMRAM

    _main->_string_EUSART
    _string_EUSART->_escreve_EUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     440
                                              3 COMRAM     1     1      0
                          _EUSART_le
                        _init_EUSART
                      _string_EUSART
 ---------------------------------------------------------------------------------
 (1) _string_EUSART                                        2     0      2     440
                                              1 COMRAM     2     0      2
                     _escreve_EUSART
 ---------------------------------------------------------------------------------
 (2) _escreve_EUSART                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_EUSART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_le                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_le
   _init_EUSART
   _string_EUSART
     _escreve_EUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      4       9       1        7.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      15        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Apr 08 13:46:35 2019

                      _i 0005              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$HS 000000                      l812 0718                      l744 0758  
                    l808 0704                      l840 06D2                      l824 0682  
                    l850 06F8                      l852 06FE             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000  __size_of_escreve_EUSART 000C             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     STR_1 0601                     STR_2 061F  
                   STR_3 0633                     STR_4 0649                     STR_5 0646  
                   _RCIF 007CF5                     _TRMT 007D61             __CFG_PWRT$ON 000000  
                   _dado 0001                     _main 064E                     indf2 000FDF  
                   fsr2l 000FD9                     start 0000             ?_init_EUSART 0006  
          __CFG_IESO$OFF 000000       __size_of_EUSART_le 0008            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0006                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTB 000F81                    _TRISB 000F93  
                  _TXREG 000FAD            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 072C  
           __end_of_main 0702                   ??_main 0009            __activetblptr 000001  
 __size_of_string_EUSART 002A        __end_of_EUSART_le 076A                   _ADCON1 000FC1  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000           _escreve_EUSART 0756  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 0736  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001            _string_EUSART 0702  
         __pcstackCOMRAM 0006     __size_of_init_EUSART 0012   __end_of_escreve_EUSART 0762  
         ?_string_EUSART 0007         string_EUSART@str 0007          ?_escreve_EUSART 0006  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 072C                  __ramtop 0600                  __ptext0 064E  
                __ptext1 0702                  __ptext2 0756                  __ptext3 0744  
                __ptext4 0762     end_of_initialization 0736                _EUSART_le 0762  
        ??_string_EUSART 0009                _RCSTAbits 000FAB                  postinc2 000FDE  
              _PORTBbits 000F81               ?_EUSART_le 0006                _TXSTAbits 000FAC  
            _BAUDCTLbits 000FB8      start_initialization 072C            ??_init_EUSART 0006  
       ??_escreve_EUSART 0006         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0001  
            ??_EUSART_le 0006        __CFG_CCP2MX$PORTC 000000      __end_of_init_EUSART 0756  
            __smallconst 0600         __CFG_WDTPS$32768 000000    __end_of_string_EUSART 072C  
            _init_EUSART 0744                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600            __size_of_main 00B4          escreve_EUSART@c 0006  
